2020-07-24 13:15:22,956 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x762ebc30>, 'on': False}
2020-07-24 13:15:22,956 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x762ebc30>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-24 13:15:22,956 DEBUG sendRcv: sending cmd_string: N0R
2020-07-24 13:15:24,343 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x762ebc30>, 'on_execute': False, 'minimal_reset': False}
2020-07-24 13:15:24,344 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x762ebc30>}
2020-07-24 13:15:52,688 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x7664f2f0>, 'on': False}
2020-07-24 13:15:52,688 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x7664f2f0>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-24 13:15:52,689 DEBUG sendRcv: sending cmd_string: N0R
2020-07-24 13:15:54,088 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x7664f2f0>, 'on_execute': False, 'minimal_reset': False}
2020-07-24 13:15:54,089 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x7664f2f0>}
2020-07-24 13:20:17,753 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x7659a2f0>, 'on': False}
2020-07-24 13:20:17,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x7659a2f0>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-24 13:20:17,754 DEBUG sendRcv: sending cmd_string: N0R
2020-07-24 13:20:19,148 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x7659a2f0>, 'on_execute': False, 'minimal_reset': False}
2020-07-24 13:20:19,149 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x7659a2f0>}
2020-07-24 13:20:29,464 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x766252f0>, 'on': False}
2020-07-24 13:20:29,464 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x766252f0>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-24 13:20:29,464 DEBUG sendRcv: sending cmd_string: N0R
2020-07-24 13:20:30,860 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x766252f0>, 'on_execute': False, 'minimal_reset': False}
2020-07-24 13:20:30,861 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x766252f0>}
2020-07-24 13:20:38,834 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x762d3490>, 'on': False}
2020-07-24 13:20:38,835 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x762d3490>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-24 13:20:38,835 DEBUG sendRcv: sending cmd_string: N0R
2020-07-24 13:20:40,223 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x762d3490>, 'on_execute': False, 'minimal_reset': False}
2020-07-24 13:20:40,224 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x762d3490>}
2020-07-24 13:22:09,567 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x76243af0>, 'on': False}
2020-07-24 13:22:09,567 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x76243af0>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-24 13:22:09,568 DEBUG sendRcv: sending cmd_string: N0R
2020-07-24 13:22:10,956 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x76243af0>, 'on_execute': False, 'minimal_reset': False}
2020-07-24 13:22:10,957 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x76243af0>}
2020-07-27 14:29:16,411 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on': False}
2020-07-27 14:29:16,411 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:16,411 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 14:29:16,553 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:29:16,554 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:16,554 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:16,554 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:16,554 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:29:16,692 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:16,692 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:16,692 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:16,692 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:29:16,810 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:16,810 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:16,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:16,810 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:29:16,936 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:16,936 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:16,936 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:16,937 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:17,078 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-27 14:29:17,078 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:17,078 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 14:29:17,078 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:17,078 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 14:29:17,220 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:29:17,220 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:29:28,283 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 12}
2020-07-27 14:29:28,283 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 10}
2020-07-27 14:29:28,283 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:29:28,283 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:29:28,285 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'abs_position': 2000}
2020-07-27 14:29:28,285 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:29:28,285 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:29:28,285 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:28,285 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 14:29:28,442 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:29:28,442 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:29:28,442 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:28,442 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:28,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:28,442 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:29:28,569 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 14:29:28,569 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:28,569 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:28,569 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:29:28,707 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 14:29:28,707 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:28,707 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:28,707 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:29:28,840 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 14:29:28,840 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:28,840 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:28,840 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:29:28,960 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 14:29:28,960 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:28,960 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:28,960 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:29,092 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 14:29:29,092 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:29,092 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.17956144915989491, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:29:29,092 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:29,092 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:29,092 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:29,223 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 14:29:37,246 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:37,246 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:37,247 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:37,391 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 14:29:37,391 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:29:37,391 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-27 14:29:37,391 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I'}
2020-07-27 14:29:37,392 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -120}
2020-07-27 14:29:37,392 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:29:37,392 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:29:37,392 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:29:37,393 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:37,393 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-27 14:29:37,543 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:29:37,543 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:29:37,543 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:37,544 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:37,544 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:37,544 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:29:37,687 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:37,687 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:37,687 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:37,687 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:29:37,829 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:37,829 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:37,829 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:37,829 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:29:37,963 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:37,964 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:37,964 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:37,964 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:29:38,099 DEBUG sendRcv: received response: (b'2037', 1)
2020-07-27 14:29:38,099 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:38,099 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:38,099 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:38,230 DEBUG sendRcv: received response: (b'2026', 1)
2020-07-27 14:29:38,230 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:38,230 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.9756250269272748, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:29:41,239 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:41,239 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:41,239 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:41,369 DEBUG sendRcv: received response: (b'1880', 1)
2020-07-27 14:29:41,369 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:29:41,369 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E', 'volume_ul': 10.0}
2020-07-27 14:29:41,369 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E'}
2020-07-27 14:29:41,369 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -60}
2020-07-27 14:29:41,369 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:29:41,369 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:29:41,369 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:29:41,369 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ED60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:41,369 DEBUG sendRcv: sending cmd_string: S20ED60M1000OR
2020-07-27 14:29:41,526 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:29:41,526 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:29:41,526 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:41,526 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:41,526 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:41,526 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:29:41,659 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:41,659 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:41,659 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:41,659 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:29:41,782 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:41,782 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:41,782 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:41,782 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:29:41,914 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:29:41,914 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:41,914 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:41,914 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:29:42,045 DEBUG sendRcv: received response: (b'1902', 1)
2020-07-27 14:29:42,045 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:42,045 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:29:42,045 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:29:42,176 DEBUG sendRcv: received response: (b'1891', 1)
2020-07-27 14:29:42,176 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:29:42,176 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.2985214654137107, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:30:34,327 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:34,327 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:34,327 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:30:34,460 DEBUG sendRcv: received response: (b'1820', 1)
2020-07-27 14:30:34,460 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:30:34,460 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-27 14:30:34,460 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I'}
2020-07-27 14:30:34,460 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -120}
2020-07-27 14:30:34,460 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:30:34,460 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:30:34,460 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:30:34,460 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:34,460 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-27 14:30:34,615 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:30:34,615 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:30:34,615 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:34,615 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:34,615 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:34,615 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:30:34,750 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:30:34,750 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:34,750 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:34,750 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:30:34,884 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:30:34,884 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:34,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:34,884 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:30:35,016 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:30:35,016 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:35,016 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:35,016 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:30:35,146 DEBUG sendRcv: received response: (b'1858', 1)
2020-07-27 14:30:35,146 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:35,146 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:35,146 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:30:35,279 DEBUG sendRcv: received response: (b'1847', 1)
2020-07-27 14:30:35,279 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:35,279 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.9933023340561811, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:30:38,287 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:38,287 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:38,287 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:30:38,420 DEBUG sendRcv: received response: (b'1700', 1)
2020-07-27 14:30:38,420 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:30:38,420 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E', 'volume_ul': 10.0}
2020-07-27 14:30:38,420 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E'}
2020-07-27 14:30:38,421 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -60}
2020-07-27 14:30:38,421 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:30:38,421 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:30:38,421 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:30:38,421 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ED60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:38,421 DEBUG sendRcv: sending cmd_string: S20ED60M1000OR
2020-07-27 14:30:38,568 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:30:38,568 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:30:38,568 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:38,568 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:38,568 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:38,568 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:30:38,708 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:30:38,708 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:38,708 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:38,708 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:30:38,838 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:30:38,838 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:38,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:38,838 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:30:38,969 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:30:38,969 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:38,969 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:38,969 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:30:39,109 DEBUG sendRcv: received response: (b'1721', 1)
2020-07-27 14:30:39,109 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:39,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:30:39,109 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:30:39,247 DEBUG sendRcv: received response: (b'1710', 1)
2020-07-27 14:30:39,247 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:30:39,247 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.27986330425038064, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:31:31,362 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:31,362 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:31,362 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:31:31,515 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-27 14:31:31,515 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:31:31,515 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-27 14:31:31,515 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I'}
2020-07-27 14:31:31,515 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -120}
2020-07-27 14:31:31,516 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:31:31,517 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:31:31,517 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:31:31,517 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:31,517 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-27 14:31:31,655 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:31:31,655 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:31:31,655 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:31,656 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:31,656 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:31,656 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:31:31,784 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:31:31,785 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:31,785 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:31,785 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:31:31,915 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:31:31,915 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:31,915 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:31,915 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:31:32,063 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:31:32,063 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:32,063 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:32,063 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:31:32,196 DEBUG sendRcv: received response: (b'1678', 1)
2020-07-27 14:31:32,196 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:32,196 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:32,196 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:31:32,330 DEBUG sendRcv: received response: (b'1667', 1)
2020-07-27 14:31:32,330 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:32,330 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.9987187273362104, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:31:35,345 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:35,345 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:35,345 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:31:35,476 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-27 14:31:35,476 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:31:35,476 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E', 'volume_ul': 10.0}
2020-07-27 14:31:35,477 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E'}
2020-07-27 14:31:35,477 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -60}
2020-07-27 14:31:35,477 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:31:35,477 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:31:35,477 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:31:35,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ED60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:35,477 DEBUG sendRcv: sending cmd_string: S20ED60M1000OR
2020-07-27 14:31:35,627 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:31:35,627 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:31:35,627 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:35,627 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:35,627 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:35,627 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:31:35,759 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:31:35,759 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:35,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:35,760 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:31:35,903 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:31:35,903 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:35,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:35,903 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:31:36,031 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:31:36,031 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:36,031 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:36,032 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:31:36,184 DEBUG sendRcv: received response: (b'1541', 1)
2020-07-27 14:31:36,184 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:36,184 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:31:36,184 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:31:36,326 DEBUG sendRcv: received response: (b'1528', 1)
2020-07-27 14:31:36,326 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:31:36,326 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.2573368016411277, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:32:39,492 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:39,492 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:39,492 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:32:39,619 DEBUG sendRcv: received response: (b'1460', 1)
2020-07-27 14:32:39,619 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:32:39,619 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-27 14:32:39,619 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'I'}
2020-07-27 14:32:39,619 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -120}
2020-07-27 14:32:39,619 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:32:39,619 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:32:39,619 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:32:39,619 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:39,619 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-27 14:32:39,984 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:32:39,984 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:32:39,984 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:39,984 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:39,984 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:39,984 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:32:40,117 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:32:40,117 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:40,117 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:40,117 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:32:40,252 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:32:40,252 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:40,252 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:40,252 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:32:40,386 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:32:40,386 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:40,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:40,386 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:32:40,517 DEBUG sendRcv: received response: (b'1479', 1)
2020-07-27 14:32:40,517 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:40,517 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:40,517 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:32:40,649 DEBUG sendRcv: received response: (b'1468', 1)
2020-07-27 14:32:40,649 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:40,649 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.7811443693497602, 'polling_interval': 0.3, 'delay': None}
2020-07-27 14:32:43,665 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:43,665 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:43,666 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:32:43,798 DEBUG sendRcv: received response: (b'1340', 1)
2020-07-27 14:32:43,798 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'speed_code': 20}
2020-07-27 14:32:43,799 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E', 'volume_ul': 10.0}
2020-07-27 14:32:43,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'E'}
2020-07-27 14:32:43,799 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'rel_position': -60}
2020-07-27 14:32:43,799 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'delay_ms': 1000}
2020-07-27 14:32:43,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'to_port': 'O'}
2020-07-27 14:32:43,799 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'minimal_reset': False}
2020-07-27 14:32:43,800 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': 'S20ED60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:43,800 DEBUG sendRcv: sending cmd_string: S20ED60M1000OR
2020-07-27 14:32:43,949 DEBUG sendRcv: received response: (None, 0)
2020-07-27 14:32:43,949 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 14:32:43,949 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:43,950 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:43,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:43,950 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 14:32:44,099 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:32:44,099 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:44,099 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:44,099 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 14:32:44,247 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:32:44,247 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:44,248 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:44,248 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 14:32:44,380 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 14:32:44,380 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:44,380 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:44,381 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 14:32:44,514 DEBUG sendRcv: received response: (b'1360', 1)
2020-07-27 14:32:44,515 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:44,515 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 14:32:44,515 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 14:32:44,647 DEBUG sendRcv: received response: (b'1349', 1)
2020-07-27 14:32:44,647 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>}
2020-07-27 14:32:44,647 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000027A143D5A58>, 'timeout': 0.258985466115615, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:18:29,442 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'on': False}
2020-07-27 15:18:29,443 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:29,443 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:18:29,578 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:18:29,578 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:29,578 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:29,578 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:29,578 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:18:29,700 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:18:29,700 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:29,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:29,700 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:18:29,828 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:18:29,828 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:29,828 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:29,828 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:18:29,958 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:18:29,958 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:29,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:29,958 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:18:30,079 DEBUG sendRcv: received response: (b'8142', 1)
2020-07-27 15:18:30,079 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:30,079 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:18:30,079 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:30,079 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:18:30,212 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:18:30,212 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:18:41,226 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'speed_code': 12}
2020-07-27 15:18:41,226 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'speed_code': 10}
2020-07-27 15:18:41,226 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'O'}
2020-07-27 15:18:41,226 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'delay_ms': 1000}
2020-07-27 15:18:41,226 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'abs_position': 2000}
2020-07-27 15:18:41,226 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'delay_ms': 1000}
2020-07-27 15:18:41,226 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'minimal_reset': False}
2020-07-27 15:18:41,226 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:41,226 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 15:18:41,364 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:18:41,364 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:18:41,364 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:41,364 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:41,364 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:41,364 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:18:41,496 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:18:41,496 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:41,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:41,496 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:18:41,627 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:18:41,627 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:41,627 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:41,627 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:18:41,749 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:18:41,749 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:41,749 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:41,749 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:18:41,881 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:18:41,881 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:41,881 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:41,881 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:18:42,012 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:18:42,012 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:42,012 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'timeout': 7.100518259357997, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:18:42,012 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:42,012 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:42,012 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:18:42,140 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:18:50,164 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,164 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,164 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:18:50,290 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:18:50,290 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'speed_code': 20}
2020-07-27 15:18:50,290 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:18:50,290 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'I'}
2020-07-27 15:18:50,290 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'rel_position': -180}
2020-07-27 15:18:50,291 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'delay_ms': 1000}
2020-07-27 15:18:50,291 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'O'}
2020-07-27 15:18:50,291 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'minimal_reset': False}
2020-07-27 15:18:50,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,291 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:18:50,438 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:18:50,438 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:18:50,438 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,438 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,438 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,438 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:18:50,570 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:18:50,570 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,570 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,570 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:18:50,709 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:18:50,709 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,709 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,709 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:18:50,840 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:18:50,840 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,840 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,840 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:18:50,975 DEBUG sendRcv: received response: (b'2039', 1)
2020-07-27 15:18:50,975 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:50,975 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:18:50,975 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:18:51,117 DEBUG sendRcv: received response: (b'2027', 1)
2020-07-27 15:18:51,117 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:18:51,117 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'timeout': 1.6918556998757759, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:19:15,169 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,169 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,169 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:15,300 DEBUG sendRcv: received response: (b'1820', 1)
2020-07-27 15:19:15,300 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'speed_code': 20}
2020-07-27 15:19:15,300 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:19:15,300 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'I'}
2020-07-27 15:19:15,300 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'rel_position': -180}
2020-07-27 15:19:15,301 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'delay_ms': 1000}
2020-07-27 15:19:15,301 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'to_port': 'O'}
2020-07-27 15:19:15,301 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'minimal_reset': False}
2020-07-27 15:19:15,301 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,301 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:19:15,442 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:19:15,442 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:19:15,442 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,442 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,442 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:19:15,574 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:15,574 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,574 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,574 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:19:15,704 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:15,704 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,704 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,704 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:19:15,829 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:15,829 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,829 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,829 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:19:15,951 DEBUG sendRcv: received response: (b'1861', 1)
2020-07-27 15:19:15,951 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:15,951 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:15,951 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:16,086 DEBUG sendRcv: received response: (b'1850', 1)
2020-07-27 15:19:16,086 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>}
2020-07-27 15:19:16,086 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002893DA30D68>, 'timeout': 1.7329025577096382, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:19:22,925 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'on': False}
2020-07-27 15:19:22,925 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:22,925 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:19:23,058 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:19:23,058 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:23,058 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:23,058 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:23,058 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:19:23,182 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:23,182 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:23,182 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:23,182 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:19:23,331 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:23,331 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:23,331 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:23,331 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:19:23,463 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:23,463 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:23,463 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:23,463 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:23,597 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-27 15:19:23,597 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:23,597 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:19:23,597 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:23,597 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:19:23,738 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:19:23,738 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:19:36,050 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'speed_code': 12}
2020-07-27 15:19:36,050 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'speed_code': 10}
2020-07-27 15:19:36,050 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'O'}
2020-07-27 15:19:36,050 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'delay_ms': 1000}
2020-07-27 15:19:36,050 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'abs_position': 2000}
2020-07-27 15:19:36,050 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'delay_ms': 1000}
2020-07-27 15:19:36,050 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'minimal_reset': False}
2020-07-27 15:19:36,050 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,050 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 15:19:36,192 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:19:36,192 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:19:36,192 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,192 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,192 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,193 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:19:36,325 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:19:36,325 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,325 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,325 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:19:36,451 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:19:36,451 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,451 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,451 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:19:36,570 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:19:36,570 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,570 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,570 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:19:36,702 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:19:36,702 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,702 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,702 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:36,829 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:19:36,829 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,829 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:19:36,830 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:36,830 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:36,830 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:36,968 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:19:44,974 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:44,974 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:44,974 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:45,108 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:19:45,108 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'speed_code': 20}
2020-07-27 15:19:45,108 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:19:45,108 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'I'}
2020-07-27 15:19:45,108 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'rel_position': -180}
2020-07-27 15:19:45,108 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'delay_ms': 1000}
2020-07-27 15:19:45,108 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'O'}
2020-07-27 15:19:45,108 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'minimal_reset': False}
2020-07-27 15:19:45,108 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:45,108 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:19:45,263 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:19:45,263 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:19:45,263 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,263 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,263 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:45,263 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:19:45,388 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:45,388 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,388 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:45,388 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:19:45,518 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:45,518 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,518 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:45,519 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:19:45,657 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:19:45,657 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,657 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:45,657 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:19:45,788 DEBUG sendRcv: received response: (b'2039', 1)
2020-07-27 15:19:45,788 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,788 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:19:45,788 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:19:45,917 DEBUG sendRcv: received response: (b'2028', 1)
2020-07-27 15:19:45,917 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:19:45,917 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'timeout': 1.7087583850411812, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:20:09,962 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:09,962 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:09,962 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:20:10,093 DEBUG sendRcv: received response: (b'1820', 1)
2020-07-27 15:20:10,093 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'speed_code': 20}
2020-07-27 15:20:10,093 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:20:10,093 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'I'}
2020-07-27 15:20:10,093 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'rel_position': -180}
2020-07-27 15:20:10,094 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'delay_ms': 1000}
2020-07-27 15:20:10,094 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'O'}
2020-07-27 15:20:10,094 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'minimal_reset': False}
2020-07-27 15:20:10,094 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:10,094 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:20:10,251 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:20:10,251 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:20:10,251 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,251 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,251 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:10,251 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:20:10,382 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:10,382 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,382 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:10,382 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:20:10,512 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:10,512 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:10,512 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:20:10,643 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:10,643 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,643 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:10,643 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:20:10,772 DEBUG sendRcv: received response: (b'1859', 1)
2020-07-27 15:20:10,772 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,772 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:10,772 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:20:10,903 DEBUG sendRcv: received response: (b'1848', 1)
2020-07-27 15:20:10,903 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:10,903 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'timeout': 1.7085528682259956, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:20:42,974 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:42,974 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:42,974 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:20:43,123 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-27 15:20:43,123 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'speed_code': 20}
2020-07-27 15:20:43,123 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:20:43,124 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'I'}
2020-07-27 15:20:43,124 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'rel_position': -180}
2020-07-27 15:20:43,124 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'delay_ms': 1000}
2020-07-27 15:20:43,124 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'to_port': 'O'}
2020-07-27 15:20:43,124 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'minimal_reset': False}
2020-07-27 15:20:43,125 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:43,125 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:20:43,279 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:20:43,279 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:20:43,279 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:43,279 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:43,279 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:43,280 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:20:43,432 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:43,432 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:43,432 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:43,432 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:20:43,572 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:43,572 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:43,572 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:43,572 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:20:43,712 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:43,712 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:43,712 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:43,712 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:20:43,860 DEBUG sendRcv: received response: (b'1676', 1)
2020-07-27 15:20:43,860 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:43,860 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:43,860 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:20:44,005 DEBUG sendRcv: received response: (b'1663', 1)
2020-07-27 15:20:44,005 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>}
2020-07-27 15:20:44,005 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001667777D2E8>, 'timeout': 1.6373029063729683, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:20:53,761 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'on': False}
2020-07-27 15:20:53,762 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:53,762 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:20:53,894 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:20:53,894 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:20:53,894 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:20:53,894 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:53,894 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:20:54,028 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:54,028 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:20:54,028 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:54,028 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:20:54,159 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:54,159 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:20:54,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:54,159 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:20:54,290 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:20:54,290 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:20:54,290 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:54,290 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:20:54,427 DEBUG sendRcv: received response: (b'1460', 1)
2020-07-27 15:20:54,427 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:20:54,427 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:20:54,427 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:20:54,427 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:20:54,562 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:20:54,562 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:21:06,002 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'speed_code': 12}
2020-07-27 15:21:06,002 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'speed_code': 10}
2020-07-27 15:21:06,002 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'O'}
2020-07-27 15:21:06,002 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'delay_ms': 1000}
2020-07-27 15:21:06,002 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'abs_position': 2000}
2020-07-27 15:21:06,002 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'delay_ms': 1000}
2020-07-27 15:21:06,002 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'minimal_reset': False}
2020-07-27 15:21:06,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,002 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 15:21:06,163 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:21:06,163 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:21:06,163 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,163 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,163 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,163 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:21:06,292 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:21:06,292 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,292 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,292 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:21:06,425 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:21:06,425 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,425 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,425 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:21:06,556 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:21:06,556 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,556 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,556 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:21:06,679 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:21:06,679 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,679 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,679 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:21:06,811 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:21:06,811 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,811 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'timeout': 0.10257852183750704, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:21:06,811 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:06,811 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:06,811 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:21:06,939 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:21:14,951 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:14,951 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:14,951 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:21:15,084 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:21:15,084 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'speed_code': 20}
2020-07-27 15:21:15,084 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:21:15,084 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I'}
2020-07-27 15:21:15,084 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'rel_position': -180}
2020-07-27 15:21:15,084 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'delay_ms': 1000}
2020-07-27 15:21:15,084 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'O'}
2020-07-27 15:21:15,084 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'minimal_reset': False}
2020-07-27 15:21:15,084 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:15,084 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:21:15,241 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:21:15,241 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:21:15,241 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,241 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,241 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:15,241 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:21:15,370 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:21:15,370 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,370 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:15,370 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:21:15,501 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:21:15,501 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,501 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:15,501 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:21:15,634 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:21:15,634 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,634 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:15,634 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:21:15,759 DEBUG sendRcv: received response: (b'2039', 1)
2020-07-27 15:21:15,759 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:15,759 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:21:15,886 DEBUG sendRcv: received response: (b'2028', 1)
2020-07-27 15:21:15,887 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:15,887 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'timeout': 1.714471609452192, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:21:39,939 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:39,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:39,939 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:21:40,068 DEBUG sendRcv: received response: (b'1820', 1)
2020-07-27 15:21:40,068 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'speed_code': 20}
2020-07-27 15:21:40,068 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:21:40,068 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I'}
2020-07-27 15:21:40,068 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'rel_position': -180}
2020-07-27 15:21:40,068 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'delay_ms': 1000}
2020-07-27 15:21:40,068 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'O'}
2020-07-27 15:21:40,068 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'minimal_reset': False}
2020-07-27 15:21:40,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:40,068 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:21:40,219 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:21:40,219 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:21:40,219 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,219 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:40,219 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:21:40,356 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:21:40,356 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:40,356 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:21:40,494 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:21:40,494 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,494 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:40,494 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:21:40,629 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:21:40,629 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,629 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:40,629 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:21:40,772 DEBUG sendRcv: received response: (b'1858', 1)
2020-07-27 15:21:40,772 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,772 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:21:40,772 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:21:40,904 DEBUG sendRcv: received response: (b'1846', 1)
2020-07-27 15:21:40,904 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:21:40,904 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'timeout': 1.6823454211739937, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:22:12,982 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:12,982 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:12,982 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:22:13,117 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-27 15:22:13,117 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'speed_code': 20}
2020-07-27 15:22:13,117 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:22:13,117 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I'}
2020-07-27 15:22:13,117 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'rel_position': -180}
2020-07-27 15:22:13,117 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'delay_ms': 1000}
2020-07-27 15:22:13,117 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'O'}
2020-07-27 15:22:13,117 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'minimal_reset': False}
2020-07-27 15:22:13,117 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:13,117 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:22:13,262 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:22:13,262 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:22:13,262 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,262 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,262 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:13,262 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:22:13,387 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:22:13,387 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,387 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:13,387 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:22:13,516 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:22:13,516 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:13,516 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:22:13,647 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:22:13,647 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,647 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:13,647 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:22:13,780 DEBUG sendRcv: received response: (b'1680', 1)
2020-07-27 15:22:13,780 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,780 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:13,780 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:22:13,903 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-27 15:22:13,903 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:13,903 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'timeout': 1.7314548800973335, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:22:45,982 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:45,982 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:45,982 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:22:46,116 DEBUG sendRcv: received response: (b'1460', 1)
2020-07-27 15:22:46,116 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'speed_code': 20}
2020-07-27 15:22:46,116 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:22:46,116 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'I'}
2020-07-27 15:22:46,116 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'rel_position': -180}
2020-07-27 15:22:46,116 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'delay_ms': 1000}
2020-07-27 15:22:46,116 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'to_port': 'O'}
2020-07-27 15:22:46,116 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'minimal_reset': False}
2020-07-27 15:22:46,116 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:46,116 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:22:46,264 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:22:46,264 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:22:46,264 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,264 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:46,264 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:22:46,391 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:22:46,391 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,391 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:46,391 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:22:46,516 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:22:46,516 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:46,516 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:22:46,644 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:22:46,644 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:46,644 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:22:46,793 DEBUG sendRcv: received response: (b'1502', 1)
2020-07-27 15:22:46,793 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,793 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:22:46,793 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:22:46,921 DEBUG sendRcv: received response: (b'1489', 1)
2020-07-27 15:22:46,921 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>}
2020-07-27 15:22:46,921 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B6805C6A90>, 'timeout': 1.7131188224343696, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:23:05,348 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'on': False}
2020-07-27 15:23:05,349 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:05,349 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:23:05,480 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:23:05,480 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:05,480 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:05,480 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:05,480 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:23:05,608 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:23:05,608 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:05,608 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:05,608 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:23:05,740 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:23:05,740 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:05,740 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:05,740 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:23:05,872 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:23:05,872 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:05,872 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:05,872 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:23:06,007 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-27 15:23:06,007 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:06,007 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:23:06,007 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:06,007 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:23:06,141 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:23:06,141 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:23:17,150 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'speed_code': 12}
2020-07-27 15:23:17,150 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'speed_code': 10}
2020-07-27 15:23:17,150 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'to_port': 'O'}
2020-07-27 15:23:17,150 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'delay_ms': 1000}
2020-07-27 15:23:17,150 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'abs_position': 2000}
2020-07-27 15:23:17,150 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'delay_ms': 1000}
2020-07-27 15:23:17,150 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'minimal_reset': False}
2020-07-27 15:23:17,150 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,150 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 15:23:17,296 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:23:17,296 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:23:17,296 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,296 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,297 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,297 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:23:17,435 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:23:17,435 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,435 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,435 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:23:17,561 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:23:17,561 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,561 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,561 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:23:17,693 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:23:17,693 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,693 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,693 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:23:17,812 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:23:17,812 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,812 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,812 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:23:17,946 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:23:17,946 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,946 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'timeout': 0.3397834073202952, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:23:17,946 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:17,946 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:17,946 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:23:18,074 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:23:26,084 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,084 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,084 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:23:26,213 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:23:26,213 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'speed_code': 20}
2020-07-27 15:23:26,213 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-27 15:23:26,213 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'to_port': 'I'}
2020-07-27 15:23:26,213 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'rel_position': -180}
2020-07-27 15:23:26,213 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'delay_ms': 1000}
2020-07-27 15:23:26,213 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'to_port': 'O'}
2020-07-27 15:23:26,213 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'minimal_reset': False}
2020-07-27 15:23:26,213 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': 'S20ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,213 DEBUG sendRcv: sending cmd_string: S20ID180M1000OR
2020-07-27 15:23:26,362 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:23:26,362 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:23:26,362 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,362 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,363 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:23:26,503 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:23:26,503 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,503 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,503 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:23:26,623 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:23:26,623 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,623 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:23:26,752 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:23:26,752 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,752 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,752 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:23:26,884 DEBUG sendRcv: received response: (b'2040', 1)
2020-07-27 15:23:26,884 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:26,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:23:26,884 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:23:27,017 DEBUG sendRcv: received response: (b'2029', 1)
2020-07-27 15:23:27,017 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>}
2020-07-27 15:23:27,017 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020546B06AC8>, 'timeout': 1.7140055011300483, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:24:33,775 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on': False}
2020-07-27 15:24:33,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:33,775 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:24:33,902 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:24:33,902 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:33,902 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:33,902 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:33,902 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:24:34,039 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:24:34,039 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:34,039 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:34,039 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:24:34,162 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:24:34,162 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:34,162 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:34,162 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:24:34,289 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:24:34,289 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:34,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:34,289 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:24:34,420 DEBUG sendRcv: received response: (b'1820', 1)
2020-07-27 15:24:34,420 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:34,420 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:24:34,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:34,420 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:24:34,540 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:24:34,540 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:24:47,758 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 12}
2020-07-27 15:24:47,758 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 10}
2020-07-27 15:24:47,758 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'O'}
2020-07-27 15:24:47,758 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:24:47,758 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'abs_position': 2000}
2020-07-27 15:24:47,759 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:24:47,759 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'minimal_reset': False}
2020-07-27 15:24:47,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:47,759 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 15:24:47,905 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:24:47,905 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:24:47,905 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:47,905 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:47,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:47,905 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:24:48,036 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:24:48,036 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:48,036 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:48,036 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:24:48,169 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:24:48,169 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:48,169 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:48,169 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:24:48,308 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:24:48,308 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:48,308 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:48,308 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:24:48,442 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:24:48,442 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:48,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:48,442 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:24:48,573 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:24:48,573 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:48,573 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:24:48,573 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:48,573 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:48,573 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:24:48,701 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:24:56,717 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:56,717 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:56,717 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:24:56,848 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:24:56,848 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 20}
2020-07-27 15:24:56,848 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:24:56,848 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I'}
2020-07-27 15:24:56,848 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'rel_position': -480}
2020-07-27 15:24:56,848 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:24:56,848 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'O'}
2020-07-27 15:24:56,848 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'minimal_reset': False}
2020-07-27 15:24:56,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'S20ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:56,848 DEBUG sendRcv: sending cmd_string: S20ID480M1000OR
2020-07-27 15:24:56,998 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:24:56,998 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:24:56,998 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:56,998 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:56,998 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:56,998 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:24:57,130 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:24:57,130 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:57,130 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:57,130 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:24:57,260 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:24:57,261 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:57,261 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:57,261 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:24:57,386 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:24:57,386 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:57,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:57,387 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:24:57,528 DEBUG sendRcv: received response: (b'2040', 1)
2020-07-27 15:24:57,528 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:57,528 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:24:57,528 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:24:57,664 DEBUG sendRcv: received response: (b'2028', 1)
2020-07-27 15:24:57,664 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:24:57,664 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'timeout': 5.2308898000156185, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:25:21,734 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:21,734 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:21,734 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:25:21,869 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-27 15:25:21,869 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 20}
2020-07-27 15:25:21,869 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:25:21,869 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I'}
2020-07-27 15:25:21,869 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'rel_position': -480}
2020-07-27 15:25:21,869 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:25:21,869 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'O'}
2020-07-27 15:25:21,869 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'minimal_reset': False}
2020-07-27 15:25:21,869 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'S20ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:21,869 DEBUG sendRcv: sending cmd_string: S20ID480M1000OR
2020-07-27 15:25:22,005 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:25:22,005 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:25:22,005 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,005 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,005 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:22,005 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:25:22,134 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:25:22,134 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,134 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:22,134 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:25:22,262 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:25:22,262 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,262 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:22,262 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:25:22,387 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:25:22,387 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,387 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:22,387 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:25:22,511 DEBUG sendRcv: received response: (b'1562', 1)
2020-07-27 15:25:22,511 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,511 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:22,511 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:25:22,644 DEBUG sendRcv: received response: (b'1551', 1)
2020-07-27 15:25:22,644 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:22,644 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'timeout': 5.27226591390722, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:25:54,716 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:54,716 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:54,716 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:25:54,846 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-27 15:25:54,846 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 20}
2020-07-27 15:25:54,846 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:25:54,846 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I'}
2020-07-27 15:25:54,846 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'rel_position': -480}
2020-07-27 15:25:54,847 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:25:54,847 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'O'}
2020-07-27 15:25:54,847 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'minimal_reset': False}
2020-07-27 15:25:54,847 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'S20ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:54,847 DEBUG sendRcv: sending cmd_string: S20ID480M1000OR
2020-07-27 15:25:55,001 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:25:55,001 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:25:55,001 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,001 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,001 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:55,001 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:25:55,133 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:25:55,133 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,133 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:55,133 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:25:55,264 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:25:55,264 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:55,264 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:25:55,397 DEBUG sendRcv: received response: (b'170', 1)
2020-07-27 15:25:55,397 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:55,397 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:25:55,545 DEBUG sendRcv: received response: (b'1079', 1)
2020-07-27 15:25:55,545 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,545 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:25:55,545 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:25:55,673 DEBUG sendRcv: received response: (b'1066', 1)
2020-07-27 15:25:55,673 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:25:55,673 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'timeout': 5.221381428662469, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:26:27,738 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:27,738 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:27,738 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:26:27,874 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:26:27,874 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 10}
2020-07-27 15:26:27,874 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'O'}
2020-07-27 15:26:27,874 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:26:27,875 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'abs_position': 2000}
2020-07-27 15:26:27,875 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:26:27,875 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'minimal_reset': False}
2020-07-27 15:26:27,875 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:27,875 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-07-27 15:26:28,011 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:26:28,011 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:26:28,011 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,011 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,011 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,011 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:26:28,142 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:26:28,142 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,142 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,142 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:26:28,279 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:26:28,279 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,279 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,279 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:26:28,408 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:26:28,408 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,408 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,408 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:26:28,539 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:26:28,539 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,539 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,539 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:26:28,671 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:26:28,671 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,671 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'timeout': 0.6082120476858957, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:26:28,671 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:26:28,671 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,671 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:26:28,799 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:26:28,799 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'speed_code': 20}
2020-07-27 15:26:28,799 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:26:28,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'I'}
2020-07-27 15:26:28,799 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'rel_position': -480}
2020-07-27 15:26:28,799 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'delay_ms': 1000}
2020-07-27 15:26:28,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'to_port': 'O'}
2020-07-27 15:26:28,799 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'minimal_reset': False}
2020-07-27 15:26:28,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'cmd_string': 'S20ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:26:28,799 DEBUG sendRcv: sending cmd_string: S20ID480M1000OR
2020-07-27 15:26:28,942 DEBUG ErrorHandler: caught error code 15
2020-07-27 15:26:28,942 DEBUG ErrorHandler: error not in [7, 9, 10], re-raising [15]
2020-07-27 15:26:28,942 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>, 'on_execute': False, 'minimal_reset': False}
2020-07-27 15:26:28,942 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F90CC9B3C8>}
2020-07-27 15:28:49,083 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'on': False}
2020-07-27 15:28:49,083 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:28:49,083 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:28:49,227 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:28:49,227 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>}
2020-07-27 15:28:49,227 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>}
2020-07-27 15:28:49,227 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:28:49,227 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:28:49,354 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:28:49,354 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>}
2020-07-27 15:28:49,354 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:28:49,354 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:28:49,491 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:28:49,491 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>}
2020-07-27 15:28:49,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:28:49,491 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:28:49,614 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:28:49,614 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>}
2020-07-27 15:28:49,614 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:28:49,614 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:28:49,759 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:28:49,759 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>}
2020-07-27 15:28:49,760 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:28:49,760 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:28:49,760 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:28:49,893 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:28:49,893 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001561653C2B0>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:29:10,021 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on': False}
2020-07-27 15:29:10,021 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:10,021 DEBUG sendRcv: sending cmd_string: N0R
2020-07-27 15:29:10,147 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:29:10,147 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:10,147 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:10,147 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:10,147 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:29:10,279 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:29:10,279 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:10,279 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:10,279 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:29:10,412 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-27 15:29:10,412 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:10,412 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:10,412 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:29:10,537 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:29:10,537 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:10,537 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:10,537 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:29:10,671 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:29:10,671 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:10,671 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-27 15:29:10,672 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:10,672 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-27 15:29:10,803 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:29:10,803 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:29:16,606 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 12}
2020-07-27 15:29:16,606 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 10}
2020-07-27 15:29:16,606 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'O'}
2020-07-27 15:29:16,606 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:29:16,606 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'abs_position': 2000}
2020-07-27 15:29:16,606 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:29:16,606 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'minimal_reset': False}
2020-07-27 15:29:16,606 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:16,606 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-27 15:29:16,754 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:29:16,754 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:29:16,754 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:16,754 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:16,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:16,754 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:29:16,881 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:29:16,881 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:16,881 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:16,881 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:29:17,000 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:29:17,000 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:17,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:17,000 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:29:17,130 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:29:17,130 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:17,130 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:17,130 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:29:17,270 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:29:17,270 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:17,270 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:17,270 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:29:17,397 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:29:17,397 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:17,397 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'timeout': 1.9178672259565084, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:29:17,397 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:17,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:17,397 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:29:17,530 DEBUG sendRcv: received response: (b'0', 1)
2020-07-27 15:29:32,547 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:32,547 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:32,547 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:29:32,679 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-27 15:29:32,679 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 8}
2020-07-27 15:29:32,679 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:29:32,679 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I'}
2020-07-27 15:29:32,679 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'rel_position': -480}
2020-07-27 15:29:32,679 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:29:32,680 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'O'}
2020-07-27 15:29:32,680 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'minimal_reset': False}
2020-07-27 15:29:32,680 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:32,680 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-27 15:29:32,817 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:29:32,817 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:29:32,817 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:32,817 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:32,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:32,818 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:29:32,951 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:29:32,951 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:32,951 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:32,951 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:29:33,082 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-27 15:29:33,082 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:33,082 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:33,082 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:29:33,218 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:29:33,218 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:33,218 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:33,218 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:29:33,346 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-27 15:29:33,346 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:33,346 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:29:33,346 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:29:33,475 DEBUG sendRcv: received response: (b'1637', 1)
2020-07-27 15:29:33,475 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:29:33,476 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'timeout': 0.10144908416442866, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:30:03,509 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:03,509 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:03,509 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:30:03,643 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-27 15:30:03,643 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 8}
2020-07-27 15:30:03,643 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:30:03,643 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I'}
2020-07-27 15:30:03,644 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'rel_position': -480}
2020-07-27 15:30:03,644 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:30:03,644 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'O'}
2020-07-27 15:30:03,644 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'minimal_reset': False}
2020-07-27 15:30:03,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:03,644 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-27 15:30:03,791 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:30:03,791 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:30:03,791 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:03,791 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:03,791 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:03,791 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:30:03,923 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:30:03,923 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:03,923 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:03,923 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:30:04,055 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-27 15:30:04,055 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:04,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:04,055 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:30:04,175 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:30:04,175 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:04,175 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:04,175 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:30:04,307 DEBUG sendRcv: received response: (b'1190', 1)
2020-07-27 15:30:04,307 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:04,307 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:04,307 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:30:04,440 DEBUG sendRcv: received response: (b'1158', 1)
2020-07-27 15:30:04,440 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:04,440 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'timeout': 0.10127599227600093, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:30:34,482 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:34,482 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:34,482 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:30:34,613 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-27 15:30:34,613 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 8}
2020-07-27 15:30:34,613 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:30:34,613 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I'}
2020-07-27 15:30:34,614 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'rel_position': -480}
2020-07-27 15:30:34,614 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:30:34,614 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'O'}
2020-07-27 15:30:34,614 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'minimal_reset': False}
2020-07-27 15:30:34,614 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:34,614 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-27 15:30:34,755 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:30:34,755 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:30:34,755 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:34,755 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:34,755 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:34,756 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:30:34,883 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:30:34,883 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:34,883 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:34,883 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:30:35,017 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-27 15:30:35,017 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:35,017 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:35,017 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:30:35,139 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:30:35,139 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:35,139 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:35,139 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:30:35,271 DEBUG sendRcv: received response: (b'716', 1)
2020-07-27 15:30:35,271 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:35,271 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:30:35,271 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:30:35,400 DEBUG sendRcv: received response: (b'683', 1)
2020-07-27 15:30:35,400 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:30:35,400 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'timeout': 0.11108524787597651, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:31:05,433 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:05,433 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:05,433 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:31:05,562 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:31:05,562 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 10}
2020-07-27 15:31:05,562 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'O'}
2020-07-27 15:31:05,562 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:31:05,562 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'abs_position': 2000}
2020-07-27 15:31:05,563 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:31:05,563 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'minimal_reset': False}
2020-07-27 15:31:05,563 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:05,563 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-07-27 15:31:05,705 DEBUG sendRcv: received response: (None, 0)
2020-07-27 15:31:05,705 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-27 15:31:05,705 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:05,705 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:05,705 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:05,705 DEBUG sendRcv: sending cmd_string: ?1
2020-07-27 15:31:05,838 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:31:05,838 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:05,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:05,838 DEBUG sendRcv: sending cmd_string: ?2
2020-07-27 15:31:05,972 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-27 15:31:05,972 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:05,972 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:05,972 DEBUG sendRcv: sending cmd_string: ?3
2020-07-27 15:31:06,091 DEBUG sendRcv: received response: (b'901', 1)
2020-07-27 15:31:06,091 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:06,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:06,091 DEBUG sendRcv: sending cmd_string: ?6
2020-07-27 15:31:06,219 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:31:06,219 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:06,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:06,219 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:31:06,350 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:31:06,350 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:06,350 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'timeout': 1.0682924121137347, 'polling_interval': 0.3, 'delay': None}
2020-07-27 15:31:06,350 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-27 15:31:06,350 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:06,350 DEBUG sendRcv: sending cmd_string: ?
2020-07-27 15:31:06,480 DEBUG sendRcv: received response: (b'560', 1)
2020-07-27 15:31:06,480 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'speed_code': 8}
2020-07-27 15:31:06,480 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-27 15:31:06,480 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'I'}
2020-07-27 15:31:06,480 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'rel_position': -480}
2020-07-27 15:31:06,480 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'delay_ms': 1000}
2020-07-27 15:31:06,480 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'to_port': 'O'}
2020-07-27 15:31:06,480 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'minimal_reset': False}
2020-07-27 15:31:06,480 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-27 15:31:06,480 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-27 15:31:06,616 DEBUG ErrorHandler: caught error code 15
2020-07-27 15:31:06,616 DEBUG ErrorHandler: error not in [7, 9, 10], re-raising [15]
2020-07-27 15:31:06,616 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>, 'on_execute': False, 'minimal_reset': False}
2020-07-27 15:31:06,616 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001651E345A20>}
2020-07-29 12:19:17,803 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'on': False}
2020-07-29 12:19:17,804 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:17,804 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 12:19:17,931 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:19:17,931 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:17,931 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:17,931 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:17,931 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:19:18,064 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:18,064 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:18,064 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:18,064 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:19:18,194 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:18,194 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:18,194 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:18,194 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:19:18,323 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:18,323 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:18,323 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:18,323 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:19:18,454 DEBUG sendRcv: received response: (b'8142', 1)
2020-07-29 12:19:18,454 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:18,454 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 12:19:18,454 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:18,454 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 12:19:18,582 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:19:18,582 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:19:32,754 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'speed_code': 12}
2020-07-29 12:19:32,754 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'speed_code': 10}
2020-07-29 12:19:32,754 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'O'}
2020-07-29 12:19:32,754 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'delay_ms': 1000}
2020-07-29 12:19:32,754 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'abs_position': 2000}
2020-07-29 12:19:32,754 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'delay_ms': 1000}
2020-07-29 12:19:32,754 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'minimal_reset': False}
2020-07-29 12:19:32,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:32,754 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 12:19:32,903 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:19:32,903 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:19:32,903 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:32,903 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:32,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:32,903 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:19:33,032 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:33,032 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:33,032 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:33,032 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:19:33,163 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 12:19:33,163 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:33,163 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:33,163 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:19:33,291 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:33,291 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:33,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:33,291 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:19:33,419 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 12:19:33,419 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:33,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:33,419 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:19:33,545 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 12:19:33,545 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:33,545 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'timeout': 7.095341715168544, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:19:38,545 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:38,545 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:38,545 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:19:38,677 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 12:19:48,678 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:48,678 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:48,678 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:19:48,810 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 12:19:48,810 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'speed_code': 8}
2020-07-29 12:19:48,810 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-29 12:19:48,810 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'I'}
2020-07-29 12:19:48,810 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'rel_position': -480}
2020-07-29 12:19:48,810 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'delay_ms': 1000}
2020-07-29 12:19:48,810 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'O'}
2020-07-29 12:19:48,810 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'minimal_reset': False}
2020-07-29 12:19:48,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:48,810 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-29 12:19:48,950 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:19:48,950 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:19:48,950 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:48,950 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:48,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:48,950 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:19:49,079 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:49,079 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:49,079 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:49,079 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:19:49,210 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-29 12:19:49,210 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:49,210 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:49,210 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:19:49,338 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:19:49,338 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:49,338 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:49,338 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:19:49,471 DEBUG sendRcv: received response: (b'1671', 1)
2020-07-29 12:19:49,471 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:49,471 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:19:49,471 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:19:49,600 DEBUG sendRcv: received response: (b'1638', 1)
2020-07-29 12:19:49,600 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:19:49,600 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'timeout': 0.10741717803649897, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:20:09,603 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:09,603 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:09,603 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:20:09,733 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-29 12:20:09,733 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'speed_code': 8}
2020-07-29 12:20:09,733 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-29 12:20:09,733 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'I'}
2020-07-29 12:20:09,733 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'rel_position': -480}
2020-07-29 12:20:09,733 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'delay_ms': 1000}
2020-07-29 12:20:09,733 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'O'}
2020-07-29 12:20:09,733 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'minimal_reset': False}
2020-07-29 12:20:09,734 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:09,734 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-29 12:20:09,873 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:20:09,873 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:20:09,873 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:09,873 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:09,873 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:09,873 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:20:10,006 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:20:10,006 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:10,006 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:10,006 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:20:10,137 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-29 12:20:10,137 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:10,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:10,137 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:20:10,266 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:20:10,266 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:10,266 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:10,266 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:20:10,397 DEBUG sendRcv: received response: (b'1190', 1)
2020-07-29 12:20:10,397 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:10,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:10,397 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:20:10,527 DEBUG sendRcv: received response: (b'1158', 1)
2020-07-29 12:20:10,527 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:10,527 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'timeout': 0.10340483176879878, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:20:40,529 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:40,529 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:40,529 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:20:40,657 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-29 12:20:40,657 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'speed_code': 8}
2020-07-29 12:20:40,657 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'I', 'volume_ul': 80.0}
2020-07-29 12:20:40,657 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'I'}
2020-07-29 12:20:40,657 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'rel_position': -480}
2020-07-29 12:20:40,657 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'delay_ms': 1000}
2020-07-29 12:20:40,657 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'to_port': 'O'}
2020-07-29 12:20:40,657 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'minimal_reset': False}
2020-07-29 12:20:40,658 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': 'S8ID480M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:40,658 DEBUG sendRcv: sending cmd_string: S8ID480M1000OR
2020-07-29 12:20:40,798 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:20:40,798 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:20:40,798 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:40,798 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:40,798 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:40,798 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:20:40,926 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:20:40,926 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:40,926 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:40,926 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:20:41,057 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-29 12:20:41,057 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:41,057 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:41,057 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:20:41,187 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:20:41,187 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:41,187 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:41,187 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:20:41,317 DEBUG sendRcv: received response: (b'715', 1)
2020-07-29 12:20:41,317 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>}
2020-07-29 12:20:41,317 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AF9057E240>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:20:41,317 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:20:41,623 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:52:59,391 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'on': False}
2020-07-29 12:52:59,414 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:52:59,414 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 12:52:59,565 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:52:59,565 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:52:59,565 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:52:59,565 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:52:59,565 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:52:59,695 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:52:59,695 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:52:59,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:52:59,695 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:52:59,826 DEBUG sendRcv: received response: (b'2001', 1)
2020-07-29 12:52:59,826 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:52:59,826 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:52:59,826 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:52:59,956 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:52:59,956 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:52:59,956 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:52:59,956 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:53:00,086 DEBUG sendRcv: received response: (b'560', 1)
2020-07-29 12:53:00,086 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:00,086 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 12:53:00,086 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:00,086 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 12:53:00,212 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:53:00,223 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:53:10,023 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'speed_code': 12}
2020-07-29 12:53:10,023 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'speed_code': 10}
2020-07-29 12:53:10,023 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'O'}
2020-07-29 12:53:10,023 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'delay_ms': 1000}
2020-07-29 12:53:10,023 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'abs_position': 2000}
2020-07-29 12:53:10,023 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'delay_ms': 1000}
2020-07-29 12:53:10,023 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'minimal_reset': False}
2020-07-29 12:53:10,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:10,023 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 12:53:10,171 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:53:10,171 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:53:10,171 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,171 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,171 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:10,171 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:53:10,299 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:53:10,299 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,299 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:10,299 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:53:10,430 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 12:53:10,430 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,430 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:10,430 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:53:10,559 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:53:10,559 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,559 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:10,559 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:53:10,688 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 12:53:10,688 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,688 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:10,688 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:53:10,812 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 12:53:10,812 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:10,812 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'timeout': 1.2200919097181049, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:53:15,813 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:15,813 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:15,813 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:53:15,944 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 12:53:25,946 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:25,946 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:25,946 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:53:26,073 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 12:53:26,073 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'speed_code': 10}
2020-07-29 12:53:26,073 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-29 12:53:26,073 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I'}
2020-07-29 12:53:26,073 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'rel_position': -180}
2020-07-29 12:53:26,073 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'delay_ms': 1000}
2020-07-29 12:53:26,073 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'O'}
2020-07-29 12:53:26,073 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'minimal_reset': False}
2020-07-29 12:53:26,073 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'S10ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:26,073 DEBUG sendRcv: sending cmd_string: S10ID180M1000OR
2020-07-29 12:53:26,214 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:53:26,214 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:53:26,214 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,214 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,214 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:26,214 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:53:26,348 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:53:26,348 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,348 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:26,348 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:53:26,477 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 12:53:26,477 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:26,477 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:53:26,606 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:53:26,606 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,606 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:26,606 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:53:26,739 DEBUG sendRcv: received response: (b'1897', 1)
2020-07-29 12:53:26,739 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,739 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:53:26,739 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:53:26,868 DEBUG sendRcv: received response: (b'1870', 1)
2020-07-29 12:53:26,868 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:53:26,868 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:54:16,872 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:16,872 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:16,872 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:54:16,999 DEBUG sendRcv: received response: (b'1820', 1)
2020-07-29 12:54:16,999 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'speed_code': 10}
2020-07-29 12:54:16,999 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-29 12:54:16,999 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I'}
2020-07-29 12:54:16,999 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'rel_position': -180}
2020-07-29 12:54:17,000 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'delay_ms': 1000}
2020-07-29 12:54:17,000 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'O'}
2020-07-29 12:54:17,000 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'minimal_reset': False}
2020-07-29 12:54:17,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'S10ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:17,000 DEBUG sendRcv: sending cmd_string: S10ID180M1000OR
2020-07-29 12:54:17,142 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:54:17,142 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:54:17,142 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,142 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,142 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:17,142 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:54:17,274 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:54:17,274 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,274 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:17,274 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:54:17,405 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 12:54:17,405 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:17,405 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:54:17,534 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:54:17,534 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,534 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:17,534 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:54:17,665 DEBUG sendRcv: received response: (b'1716', 1)
2020-07-29 12:54:17,665 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,665 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:54:17,665 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:54:17,795 DEBUG sendRcv: received response: (b'1691', 1)
2020-07-29 12:54:17,795 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:54:17,795 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:55:17,799 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:17,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:17,799 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:55:17,931 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-29 12:55:17,931 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'speed_code': 10}
2020-07-29 12:55:17,931 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-29 12:55:17,931 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I'}
2020-07-29 12:55:17,931 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'rel_position': -180}
2020-07-29 12:55:17,931 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'delay_ms': 1000}
2020-07-29 12:55:17,931 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'O'}
2020-07-29 12:55:17,931 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'minimal_reset': False}
2020-07-29 12:55:17,931 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'S10ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:17,931 DEBUG sendRcv: sending cmd_string: S10ID180M1000OR
2020-07-29 12:55:18,073 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:55:18,073 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:55:18,073 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,073 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,073 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:18,073 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:55:18,205 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:55:18,205 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,205 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:18,205 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:55:18,337 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 12:55:18,337 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,337 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:18,337 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:55:18,466 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:55:18,466 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,466 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:18,466 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 12:55:18,596 DEBUG sendRcv: received response: (b'1539', 1)
2020-07-29 12:55:18,596 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,596 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:55:18,596 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:55:18,726 DEBUG sendRcv: received response: (b'1515', 1)
2020-07-29 12:55:18,726 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:55:18,726 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-29 12:56:18,731 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:56:18,731 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:56:18,731 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 12:56:18,862 DEBUG sendRcv: received response: (b'1460', 1)
2020-07-29 12:56:18,862 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'speed_code': 10}
2020-07-29 12:56:18,862 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I', 'volume_ul': 30.0}
2020-07-29 12:56:18,862 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'I'}
2020-07-29 12:56:18,862 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'rel_position': -180}
2020-07-29 12:56:18,863 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'delay_ms': 1000}
2020-07-29 12:56:18,863 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'to_port': 'O'}
2020-07-29 12:56:18,863 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'minimal_reset': False}
2020-07-29 12:56:18,863 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': 'S10ID180M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:56:18,863 DEBUG sendRcv: sending cmd_string: S10ID180M1000OR
2020-07-29 12:56:19,002 DEBUG sendRcv: received response: (None, 0)
2020-07-29 12:56:19,002 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 12:56:19,002 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:56:19,002 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:56:19,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:56:19,002 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 12:56:19,130 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 12:56:19,130 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:56:19,130 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:56:19,130 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 12:56:19,262 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 12:56:19,262 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>}
2020-07-29 12:56:19,262 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000023E29F1E320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 12:56:19,262 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 12:56:19,568 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:00:31,331 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on': False}
2020-07-29 13:00:31,331 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:31,331 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 13:00:31,459 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:00:31,459 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:31,459 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:31,459 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:31,459 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:00:31,588 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:00:31,588 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:31,588 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:31,588 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:00:31,720 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:00:31,720 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:31,720 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:31,720 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:00:31,848 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:00:31,848 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:31,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:31,848 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:00:31,979 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-29 13:00:31,979 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:31,979 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 13:00:31,979 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:31,979 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 13:00:32,279 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:00:32,279 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:00:45,054 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 12}
2020-07-29 13:00:45,054 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 10}
2020-07-29 13:00:45,054 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:00:45,054 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:00:45,054 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'abs_position': 2000}
2020-07-29 13:00:45,055 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:00:45,055 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:00:45,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:45,055 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 13:00:45,203 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:00:45,203 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:00:45,203 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,203 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:45,203 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:00:45,331 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:00:45,331 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,331 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:45,331 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:00:45,462 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:00:45,462 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,462 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:45,462 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:00:45,591 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:00:45,591 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,591 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:45,591 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:00:45,719 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:00:45,719 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,719 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:45,719 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:00:45,844 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:00:45,844 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:45,844 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 0.31974334175545827, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:00:50,845 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:00:50,845 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:00:50,845 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:00:50,976 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:01:00,977 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:00,977 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:00,977 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:01:01,105 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:01:01,105 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:01:01,105 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:01:01,105 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:01:01,105 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:01:01,105 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:01:01,105 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:01:01,105 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:01:01,105 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:01,105 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:01:01,246 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:01:01,246 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:01:01,246 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,246 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,246 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:01,246 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:01:01,374 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:01:01,374 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,374 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:01,374 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:01:01,504 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:01:01,504 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,504 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:01,504 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:01:01,634 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:01:01,634 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,634 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:01,634 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:01:01,765 DEBUG sendRcv: received response: (b'2041', 1)
2020-07-29 13:01:01,765 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,765 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:01,765 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:01:01,894 DEBUG sendRcv: received response: (b'2030', 1)
2020-07-29 13:01:01,894 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:01,894 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.0224428064682904, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:01:31,897 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:31,897 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:31,897 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:01:32,025 DEBUG sendRcv: received response: (b'1880', 1)
2020-07-29 13:01:32,025 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:01:32,025 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:01:32,025 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:01:32,025 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:01:32,025 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:01:32,026 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:01:32,026 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:01:32,026 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:32,026 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:01:32,166 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:01:32,166 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:01:32,166 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,166 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,166 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:32,166 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:01:32,294 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:01:32,294 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,294 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:32,294 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:01:32,425 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:01:32,425 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,425 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:32,425 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:01:32,554 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:01:32,554 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,554 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:32,554 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:01:32,685 DEBUG sendRcv: received response: (b'1922', 1)
2020-07-29 13:01:32,685 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,685 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:01:32,685 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:01:32,815 DEBUG sendRcv: received response: (b'1911', 1)
2020-07-29 13:01:32,815 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:01:32,815 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.022984016642851, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:02:12,820 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:12,820 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:12,820 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:02:12,950 DEBUG sendRcv: received response: (b'1760', 1)
2020-07-29 13:02:12,950 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:02:12,950 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:02:12,950 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:02:12,950 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:02:12,950 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:02:12,950 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:02:12,950 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:02:12,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:12,950 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:02:13,090 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:02:13,090 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:02:13,090 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,090 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,090 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:13,090 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:02:13,219 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:02:13,219 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:13,219 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:02:13,348 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:02:13,348 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,348 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:13,348 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:02:13,479 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:02:13,479 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,479 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:13,479 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:02:13,609 DEBUG sendRcv: received response: (b'1801', 1)
2020-07-29 13:02:13,609 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,609 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:13,609 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:02:13,739 DEBUG sendRcv: received response: (b'1790', 1)
2020-07-29 13:02:13,739 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:13,739 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.0228209383347455, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:02:53,743 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:53,743 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:53,743 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:02:53,874 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-29 13:02:53,874 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:02:53,874 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:02:53,874 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:02:53,874 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:02:53,874 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:02:53,874 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:02:53,874 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:02:53,874 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:53,874 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:02:54,014 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:02:54,014 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:02:54,014 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,014 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:54,014 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:02:54,147 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:02:54,147 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,147 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:54,147 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:02:54,277 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:02:54,277 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,277 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:54,277 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:02:54,407 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:02:54,407 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,407 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:54,407 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:02:54,538 DEBUG sendRcv: received response: (b'1680', 1)
2020-07-29 13:02:54,538 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,538 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:02:54,538 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:02:54,668 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-29 13:02:54,668 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:02:54,668 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.0181980020859662, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:03:34,671 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:34,671 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:34,671 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:03:34,802 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-29 13:03:34,802 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:03:34,802 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:03:34,802 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:03:34,802 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:03:34,802 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:03:34,802 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:03:34,802 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:03:34,802 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:34,802 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:03:34,943 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:03:34,943 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:03:34,943 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:34,943 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:34,943 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:34,943 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:03:35,076 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:03:35,076 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:35,076 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:35,076 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:03:35,207 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:03:35,207 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:35,207 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:35,207 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:03:35,336 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:03:35,336 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:35,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:35,336 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:03:35,467 DEBUG sendRcv: received response: (b'1560', 1)
2020-07-29 13:03:35,467 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:35,467 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:03:35,467 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:03:35,598 DEBUG sendRcv: received response: (b'1549', 1)
2020-07-29 13:03:35,598 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:03:35,598 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.0156800634720746, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:04:15,603 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:15,603 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:15,603 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:04:15,731 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-29 13:04:15,731 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:04:15,731 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:04:15,731 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:04:15,731 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:04:15,731 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:04:15,732 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:04:15,732 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:04:15,732 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:15,732 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:04:15,872 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:04:15,872 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:04:15,872 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:15,872 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:15,872 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:15,872 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:04:16,001 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:04:16,001 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:16,001 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:16,001 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:04:16,130 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:04:16,130 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:16,130 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:16,130 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:04:16,260 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:04:16,260 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:16,260 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:16,260 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:04:16,391 DEBUG sendRcv: received response: (b'1441', 1)
2020-07-29 13:04:16,391 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:16,391 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:16,391 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:04:16,522 DEBUG sendRcv: received response: (b'1430', 1)
2020-07-29 13:04:16,522 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:16,522 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.021974790797514, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:04:56,528 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:56,528 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:56,528 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:04:56,655 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-29 13:04:56,655 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:04:56,655 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:04:56,655 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:04:56,655 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:04:56,655 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:04:56,655 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:04:56,655 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:04:56,656 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:56,656 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:04:56,796 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:04:56,796 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:04:56,796 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:56,796 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:56,796 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:56,796 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:04:56,924 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:04:56,924 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:56,924 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:56,924 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:04:57,055 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:04:57,055 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:57,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:57,055 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:04:57,184 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:04:57,184 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:57,184 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:57,184 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:04:57,315 DEBUG sendRcv: received response: (b'1322', 1)
2020-07-29 13:04:57,315 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:57,315 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:04:57,315 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:04:57,445 DEBUG sendRcv: received response: (b'1311', 1)
2020-07-29 13:04:57,445 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:04:57,445 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.0229143984177533, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:05:37,448 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:37,448 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:37,448 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:05:37,579 DEBUG sendRcv: received response: (b'1160', 1)
2020-07-29 13:05:37,579 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'speed_code': 20}
2020-07-29 13:05:37,579 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:05:37,579 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'I'}
2020-07-29 13:05:37,579 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'rel_position': -120}
2020-07-29 13:05:37,579 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'delay_ms': 1000}
2020-07-29 13:05:37,580 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'to_port': 'O'}
2020-07-29 13:05:37,580 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'minimal_reset': False}
2020-07-29 13:05:37,580 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:37,580 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:05:37,720 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:05:37,720 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:05:37,720 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:37,720 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:37,720 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:37,720 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:05:37,848 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:05:37,848 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:37,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:37,848 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:05:37,978 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:05:37,978 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:37,978 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:37,978 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:05:38,109 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:05:38,109 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:38,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:38,109 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:05:38,239 DEBUG sendRcv: received response: (b'1201', 1)
2020-07-29 13:05:38,239 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:38,239 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:05:38,239 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:05:38,369 DEBUG sendRcv: received response: (b'1190', 1)
2020-07-29 13:05:38,369 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:05:38,369 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'timeout': 1.0228733904221479, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:06:18,374 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>}
2020-07-29 13:06:18,374 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AB5C8BF320>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:06:18,374 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:06:18,679 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:12:07,477 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'on': False}
2020-07-29 13:12:07,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:07,477 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 13:12:07,607 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:12:07,607 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:07,607 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:07,607 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:07,607 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:12:07,736 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:12:07,736 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:07,736 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:07,736 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:12:07,865 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:12:07,865 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:07,865 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:07,865 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:12:07,996 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:12:07,996 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:07,996 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:07,996 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:12:08,127 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-29 13:12:08,127 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:08,127 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 13:12:08,127 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:08,127 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 13:12:08,256 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:12:08,256 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:12:20,182 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'speed_code': 12}
2020-07-29 13:12:20,182 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'speed_code': 10}
2020-07-29 13:12:20,182 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'to_port': 'O'}
2020-07-29 13:12:20,182 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'delay_ms': 1000}
2020-07-29 13:12:20,182 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'abs_position': 2000}
2020-07-29 13:12:20,182 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'delay_ms': 1000}
2020-07-29 13:12:20,183 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'minimal_reset': False}
2020-07-29 13:12:20,183 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:20,183 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 13:12:20,330 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:12:20,330 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:12:20,330 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:20,330 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:20,330 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:20,330 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:12:20,459 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:12:20,459 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:20,459 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:20,459 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:12:20,590 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:12:20,590 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>}
2020-07-29 13:12:20,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F742DFB668>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:12:20,590 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:12:20,896 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:13:54,087 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on': False}
2020-07-29 13:13:54,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:13:54,087 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 13:13:54,216 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:13:54,216 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:13:54,216 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:13:54,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:13:54,216 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:13:54,344 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:13:54,344 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:13:54,344 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:13:54,344 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:13:54,475 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:13:54,475 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:13:54,475 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:13:54,475 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:13:54,605 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:13:54,605 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:13:54,605 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:13:54,605 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:13:54,735 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:13:54,735 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:13:54,735 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 13:13:54,735 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:13:54,735 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 13:13:54,862 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:13:54,862 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:14:10,611 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 12}
2020-07-29 13:14:10,611 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 10}
2020-07-29 13:14:10,611 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:14:10,611 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:14:10,611 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'abs_position': 2000}
2020-07-29 13:14:10,611 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:14:10,611 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:14:10,612 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:10,612 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 13:14:10,759 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:14:10,759 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:14:10,759 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:10,759 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:10,760 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:10,760 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:14:10,893 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:14:10,893 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:10,893 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:10,893 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:14:11,023 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:14:11,023 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:11,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:11,023 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:14:11,153 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:14:11,153 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:11,153 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:11,153 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:14:11,280 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:14:11,280 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:11,280 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:11,280 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:14:11,405 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:14:11,405 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:11,405 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:14:16,405 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:16,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:16,405 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:14:16,537 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:14:26,539 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:26,539 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:26,539 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:14:26,672 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:14:26,672 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:14:26,672 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:14:26,672 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:14:26,672 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:14:26,672 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:14:26,672 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:14:26,673 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:14:26,673 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:26,673 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:14:26,812 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:14:26,812 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:14:26,812 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:26,812 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:26,812 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:26,812 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:14:26,945 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:14:26,945 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:26,945 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:26,945 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:14:27,074 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:14:27,074 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:27,074 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:27,074 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:14:27,205 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:14:27,205 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:27,205 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:27,205 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:14:27,335 DEBUG sendRcv: received response: (b'2040', 1)
2020-07-29 13:14:27,335 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:27,335 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:27,335 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:14:27,466 DEBUG sendRcv: received response: (b'2029', 1)
2020-07-29 13:14:27,466 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:27,466 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0181827432969037, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:14:57,469 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:57,469 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:57,469 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:14:57,602 DEBUG sendRcv: received response: (b'1880', 1)
2020-07-29 13:14:57,602 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:14:57,602 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:14:57,602 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:14:57,602 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:14:57,602 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:14:57,602 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:14:57,602 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:14:57,602 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:57,603 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:14:57,742 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:14:57,742 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:14:57,742 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:57,742 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:57,742 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:57,742 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:14:57,870 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:14:57,870 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:57,870 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:57,870 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:14:58,000 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:14:58,000 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:58,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:58,000 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:14:58,130 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:14:58,130 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:58,130 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:58,130 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:14:58,261 DEBUG sendRcv: received response: (b'1921', 1)
2020-07-29 13:14:58,261 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:58,261 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:14:58,261 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:14:58,392 DEBUG sendRcv: received response: (b'1910', 1)
2020-07-29 13:14:58,392 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:14:58,392 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0216395742752973, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:15:38,397 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:38,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:38,397 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:15:38,526 DEBUG sendRcv: received response: (b'1760', 1)
2020-07-29 13:15:38,526 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:15:38,526 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:15:38,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:15:38,527 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:15:38,527 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:15:38,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:15:38,527 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:15:38,527 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:38,527 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:15:38,666 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:15:38,666 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:15:38,666 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:38,666 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:38,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:38,666 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:15:38,795 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:15:38,795 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:38,795 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:38,795 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:15:38,923 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:15:38,923 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:38,923 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:38,923 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:15:39,055 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:15:39,055 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:39,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:39,055 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:15:39,185 DEBUG sendRcv: received response: (b'1801', 1)
2020-07-29 13:15:39,185 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:39,185 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:15:39,185 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:15:39,315 DEBUG sendRcv: received response: (b'1790', 1)
2020-07-29 13:15:39,315 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:15:39,315 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0235082990982953, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:16:19,318 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:19,318 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:19,318 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:16:19,449 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-29 13:16:19,449 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:16:19,449 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:16:19,449 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:16:19,449 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:16:19,449 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:16:19,449 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:16:19,449 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:16:19,449 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:19,449 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:16:19,590 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:16:19,590 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:16:19,590 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:19,590 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:19,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:19,590 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:16:19,719 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:16:19,719 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:19,719 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:19,719 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:16:19,848 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:16:19,848 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:19,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:19,848 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:16:19,978 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:16:19,978 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:19,978 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:19,978 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:16:20,109 DEBUG sendRcv: received response: (b'1680', 1)
2020-07-29 13:16:20,109 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:20,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:16:20,109 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:16:20,239 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-29 13:16:20,239 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:16:20,239 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0209612734177533, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:17:00,243 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:00,243 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:00,243 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:17:00,373 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-29 13:17:00,373 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:17:00,373 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:17:00,373 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:17:00,373 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:17:00,373 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:17:00,373 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:17:00,373 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:17:00,373 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:00,373 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:17:00,514 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:17:00,514 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:17:00,514 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:00,514 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:00,514 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:00,514 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:17:00,642 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:17:00,642 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:00,642 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:00,642 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:17:00,772 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:17:00,772 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:00,772 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:00,772 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:17:00,903 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:17:00,903 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:00,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:00,903 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:17:01,033 DEBUG sendRcv: received response: (b'1562', 1)
2020-07-29 13:17:01,033 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:01,033 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:01,033 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:17:01,164 DEBUG sendRcv: received response: (b'1551', 1)
2020-07-29 13:17:01,164 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:01,164 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0206899530747358, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:17:41,168 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,168 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,168 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:17:41,297 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-29 13:17:41,297 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:17:41,297 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:17:41,297 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:17:41,297 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:17:41,297 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:17:41,297 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:17:41,297 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:17:41,297 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,297 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:17:41,438 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:17:41,438 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:17:41,438 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,438 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,438 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,438 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:17:41,566 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:17:41,566 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,566 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,566 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:17:41,696 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:17:41,696 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,696 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,696 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:17:41,826 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:17:41,826 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,826 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,826 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:17:41,957 DEBUG sendRcv: received response: (b'1441', 1)
2020-07-29 13:17:41,957 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:41,957 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:17:41,957 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:17:42,087 DEBUG sendRcv: received response: (b'1430', 1)
2020-07-29 13:17:42,087 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:17:42,087 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0217683203080121, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:18:22,091 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,091 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:18:22,221 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-29 13:18:22,221 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:18:22,221 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:18:22,221 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:18:22,221 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:18:22,221 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:18:22,221 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:18:22,221 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:18:22,221 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,222 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:18:22,362 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:18:22,362 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:18:22,362 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,362 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,362 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,362 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:18:22,495 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:18:22,495 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,495 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,495 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:18:22,626 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:18:22,626 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,626 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,626 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:18:22,755 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:18:22,755 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,755 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,755 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:18:22,886 DEBUG sendRcv: received response: (b'1320', 1)
2020-07-29 13:18:22,886 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:22,886 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:18:22,886 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:18:23,016 DEBUG sendRcv: received response: (b'1309', 1)
2020-07-29 13:18:23,016 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:18:23,016 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'timeout': 1.0158927328446332, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:19:03,022 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,022 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,022 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:19:03,151 DEBUG sendRcv: received response: (b'1160', 1)
2020-07-29 13:19:03,151 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'speed_code': 20}
2020-07-29 13:19:03,151 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:19:03,151 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'I'}
2020-07-29 13:19:03,151 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'rel_position': -120}
2020-07-29 13:19:03,151 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'delay_ms': 1000}
2020-07-29 13:19:03,152 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'to_port': 'O'}
2020-07-29 13:19:03,152 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'minimal_reset': False}
2020-07-29 13:19:03,152 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,152 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:19:03,291 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:19:03,291 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:19:03,291 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,291 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,291 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:19:03,424 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:19:03,424 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,424 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,424 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:19:03,554 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:19:03,554 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,554 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,554 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:19:03,684 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:19:03,684 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,684 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,684 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:19:03,815 DEBUG sendRcv: received response: (b'1200', 1)
2020-07-29 13:19:03,815 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>}
2020-07-29 13:19:03,815 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021FF05EF198>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:19:03,815 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:19:04,121 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:21:14,712 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on': False}
2020-07-29 13:21:14,712 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:14,712 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 13:21:14,842 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:21:14,842 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:14,842 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:14,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:14,842 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:21:14,974 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:21:14,974 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:14,974 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:14,974 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:21:15,105 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:21:15,105 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:15,105 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:15,105 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:21:15,234 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:21:15,234 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:15,234 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:15,234 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:21:15,366 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-29 13:21:15,366 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:15,366 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 13:21:15,366 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:15,366 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 13:21:15,496 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:21:15,496 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:21:25,422 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 12}
2020-07-29 13:21:25,422 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 10}
2020-07-29 13:21:25,422 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:21:25,422 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:21:25,422 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'abs_position': 2000}
2020-07-29 13:21:25,422 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:21:25,422 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:21:25,422 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:25,422 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 13:21:25,571 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:21:25,571 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:21:25,571 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:25,571 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:25,571 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:25,571 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:21:25,703 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:21:25,703 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:25,703 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:25,703 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:21:25,834 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:21:25,834 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:25,834 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:25,834 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:21:25,964 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:21:25,964 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:25,964 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:25,964 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:21:26,091 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:21:26,091 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:26,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:26,091 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:21:26,216 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:21:26,216 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:26,216 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 0.6420419465201241, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:21:36,216 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:36,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:36,216 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:21:36,348 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:21:51,349 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:51,349 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:51,349 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:21:51,480 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:21:51,480 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:21:51,480 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:21:51,480 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:21:51,480 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:21:51,480 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:21:51,480 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:21:51,481 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:21:51,481 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:51,481 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:21:51,622 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:21:51,622 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:21:51,622 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:51,622 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:51,622 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:51,622 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:21:51,754 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:21:51,754 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:51,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:51,754 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:21:51,884 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:21:51,884 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:51,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:51,884 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:21:52,013 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:21:52,013 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:52,013 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:52,013 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:21:52,145 DEBUG sendRcv: received response: (b'2040', 1)
2020-07-29 13:21:52,145 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:52,145 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:21:52,145 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:21:52,276 DEBUG sendRcv: received response: (b'2029', 1)
2020-07-29 13:21:52,276 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:21:52,276 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0172362215378705, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:22:22,279 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:22,279 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:22,279 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:22:22,411 DEBUG sendRcv: received response: (b'1880', 1)
2020-07-29 13:22:22,411 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:22:22,411 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:22:22,411 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:22:22,411 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:22:22,411 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:22:22,411 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:22:22,411 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:22:22,411 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:22,411 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:22:22,552 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:22:22,552 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:22:22,552 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:22,552 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:22,552 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:22,552 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:22:22,684 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:22:22,684 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:22,684 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:22,684 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:22:22,815 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:22:22,815 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:22,815 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:22,815 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:22:22,945 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:22:22,945 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:22,945 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:22,945 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:22:23,076 DEBUG sendRcv: received response: (b'1920', 1)
2020-07-29 13:22:23,076 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:23,076 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:23,076 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:22:23,205 DEBUG sendRcv: received response: (b'1909', 1)
2020-07-29 13:22:23,205 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:23,205 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0171115286210004, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:22:53,207 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:53,207 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:53,207 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:22:53,336 DEBUG sendRcv: received response: (b'1760', 1)
2020-07-29 13:22:53,336 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:22:53,336 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:22:53,336 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:22:53,336 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:22:53,336 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:22:53,336 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:22:53,336 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:22:53,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:53,336 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:22:53,478 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:22:53,478 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:22:53,478 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:53,478 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:53,478 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:53,478 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:22:53,610 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:22:53,610 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:53,610 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:53,610 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:22:53,740 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:22:53,740 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:53,740 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:53,740 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:22:53,871 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:22:53,871 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:53,871 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:53,871 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:22:54,000 DEBUG sendRcv: received response: (b'1800', 1)
2020-07-29 13:22:54,000 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:54,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:22:54,000 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:22:54,131 DEBUG sendRcv: received response: (b'1789', 1)
2020-07-29 13:22:54,131 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:22:54,131 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0165834314682904, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:23:39,134 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,134 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,134 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:23:39,264 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-29 13:23:39,264 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:23:39,264 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:23:39,264 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:23:39,264 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:23:39,264 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:23:39,264 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:23:39,264 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:23:39,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,264 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:23:39,404 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:23:39,404 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:23:39,404 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,404 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,404 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,404 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:23:39,534 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:23:39,534 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,534 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,534 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:23:39,663 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:23:39,663 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,663 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,663 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:23:39,793 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:23:39,793 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,793 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,793 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:23:39,925 DEBUG sendRcv: received response: (b'1681', 1)
2020-07-29 13:23:39,925 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:39,925 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:23:39,925 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:23:40,054 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-29 13:23:40,054 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:23:40,054 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0222687609055463, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:24:10,056 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,056 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,056 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:24:10,185 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-29 13:24:10,185 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:24:10,185 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:24:10,185 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:24:10,185 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:24:10,185 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:24:10,185 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:24:10,185 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:24:10,185 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,185 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:24:10,326 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:24:10,326 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:24:10,326 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,326 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,326 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,326 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:24:10,459 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:24:10,459 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,459 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,459 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:24:10,588 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:24:10,588 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,588 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,588 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:24:10,719 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:24:10,719 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,719 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,719 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:24:10,849 DEBUG sendRcv: received response: (b'1562', 1)
2020-07-29 13:24:10,849 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,849 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:10,849 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:24:10,979 DEBUG sendRcv: received response: (b'1551', 1)
2020-07-29 13:24:10,979 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:10,979 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0174176580765668, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:24:55,983 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:55,983 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:55,983 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:24:56,113 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-29 13:24:56,113 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:24:56,113 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:24:56,113 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:24:56,113 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:24:56,113 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:24:56,113 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:24:56,114 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:24:56,114 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:56,114 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:24:56,254 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:24:56,254 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:24:56,254 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,254 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,254 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:56,254 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:24:56,387 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:24:56,387 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,387 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:56,387 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:24:56,517 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:24:56,517 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,517 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:56,517 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:24:56,647 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:24:56,647 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,647 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:56,647 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:24:56,777 DEBUG sendRcv: received response: (b'1440', 1)
2020-07-29 13:24:56,777 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,777 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:24:56,777 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:24:56,908 DEBUG sendRcv: received response: (b'1429', 1)
2020-07-29 13:24:56,908 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:24:56,908 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0179116613724652, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:25:41,910 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:41,910 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:41,910 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:25:42,041 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-29 13:25:42,041 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:25:42,041 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:25:42,041 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:25:42,041 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:25:42,041 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:25:42,041 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:25:42,041 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:25:42,041 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:42,041 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:25:42,182 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:25:42,182 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:25:42,182 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,182 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,182 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:42,182 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:25:42,315 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:25:42,315 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,315 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:42,315 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:25:42,444 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:25:42,444 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,444 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:42,444 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:25:42,575 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:25:42,575 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,575 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:42,575 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:25:42,706 DEBUG sendRcv: received response: (b'1320', 1)
2020-07-29 13:25:42,706 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,706 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:25:42,706 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:25:42,838 DEBUG sendRcv: received response: (b'1309', 1)
2020-07-29 13:25:42,838 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:25:42,838 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.015394438014311, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:26:12,838 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:12,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:12,838 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:26:12,966 DEBUG sendRcv: received response: (b'1160', 1)
2020-07-29 13:26:12,966 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:26:12,966 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:26:12,966 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:26:12,966 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:26:12,966 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:26:12,966 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:26:12,967 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:26:12,967 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:12,967 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:26:13,107 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:26:13,107 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:26:13,107 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,107 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,107 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:13,107 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:26:13,235 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:26:13,235 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,235 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:13,235 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:26:13,366 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:26:13,366 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,366 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:13,366 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:26:13,495 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:26:13,495 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,495 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:13,495 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:26:13,626 DEBUG sendRcv: received response: (b'1201', 1)
2020-07-29 13:26:13,626 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,626 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:13,626 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:26:13,757 DEBUG sendRcv: received response: (b'1190', 1)
2020-07-29 13:26:13,757 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:13,757 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.021169412837309, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:26:58,760 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:58,760 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:58,760 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:26:58,890 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-29 13:26:58,890 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:26:58,890 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:26:58,890 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:26:58,890 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:26:58,890 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:26:58,890 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:26:58,890 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:26:58,890 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:58,890 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:26:59,030 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:26:59,030 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:26:59,030 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,030 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,030 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:59,030 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:26:59,159 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:26:59,159 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:59,159 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:26:59,289 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:26:59,289 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:59,289 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:26:59,419 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:26:59,419 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:59,419 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:26:59,550 DEBUG sendRcv: received response: (b'1081', 1)
2020-07-29 13:26:59,550 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,550 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:26:59,550 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:26:59,680 DEBUG sendRcv: received response: (b'1070', 1)
2020-07-29 13:26:59,680 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:26:59,680 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0220954305985395, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:27:44,682 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:44,682 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:44,682 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:27:44,813 DEBUG sendRcv: received response: (b'920', 1)
2020-07-29 13:27:44,813 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:27:44,813 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:27:44,813 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:27:44,813 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:27:44,813 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:27:44,813 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:27:44,814 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:27:44,814 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:44,814 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:27:44,954 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:27:44,954 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:27:44,954 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:44,954 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:44,954 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:44,954 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:27:45,087 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:27:45,087 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:45,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:45,087 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:27:45,217 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:27:45,217 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:45,217 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:45,217 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:27:45,348 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:27:45,348 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:45,348 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:45,348 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:27:45,477 DEBUG sendRcv: received response: (b'961', 1)
2020-07-29 13:27:45,477 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:45,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:27:45,477 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:27:45,606 DEBUG sendRcv: received response: (b'951', 1)
2020-07-29 13:27:45,606 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:27:45,606 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0189304239609662, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:28:15,608 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:15,608 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:15,608 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:28:15,738 DEBUG sendRcv: received response: (b'800', 1)
2020-07-29 13:28:15,738 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:28:15,738 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:28:15,738 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:28:15,738 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:28:15,738 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:28:15,738 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:28:15,738 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:28:15,738 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:15,738 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:28:15,880 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:28:15,880 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:28:15,880 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:15,880 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:15,880 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:15,880 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:28:16,012 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:28:16,012 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:16,012 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:16,012 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:28:16,142 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:28:16,142 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:16,142 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:16,142 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:28:16,273 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:28:16,273 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:16,273 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:16,273 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:28:16,403 DEBUG sendRcv: received response: (b'840', 1)
2020-07-29 13:28:16,403 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:16,403 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:28:16,403 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:28:16,533 DEBUG sendRcv: received response: (b'829', 1)
2020-07-29 13:28:16,533 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:28:16,533 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0175018198349897, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:29:01,536 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:01,536 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:01,536 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:29:01,666 DEBUG sendRcv: received response: (b'680', 1)
2020-07-29 13:29:01,666 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:29:01,666 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:29:01,666 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:29:01,666 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:29:01,666 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:29:01,666 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:29:01,666 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:29:01,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:01,666 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:29:01,807 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:29:01,807 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:29:01,807 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:01,807 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:01,807 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:01,807 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:29:01,934 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:29:01,934 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:01,934 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:01,934 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:29:02,066 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:29:02,066 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:02,066 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:02,066 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:29:02,196 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:29:02,196 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:02,196 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:02,196 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:29:02,326 DEBUG sendRcv: received response: (b'720', 1)
2020-07-29 13:29:02,326 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:02,326 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:02,326 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:29:02,456 DEBUG sendRcv: received response: (b'710', 1)
2020-07-29 13:29:02,456 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:02,456 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0211572534897748, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:29:32,457 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:32,457 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:32,457 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:29:32,587 DEBUG sendRcv: received response: (b'560', 1)
2020-07-29 13:29:32,587 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:29:32,587 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:29:32,587 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:29:32,587 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:29:32,587 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:29:32,587 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:29:32,587 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:29:32,587 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:32,587 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:29:32,727 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:29:32,727 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:29:32,727 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:32,727 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:32,727 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:32,727 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:29:32,856 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:29:32,856 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:32,856 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:32,856 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:29:32,986 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:29:32,986 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:32,986 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:32,986 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:29:33,117 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:29:33,117 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:33,117 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:33,117 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:29:33,246 DEBUG sendRcv: received response: (b'601', 1)
2020-07-29 13:29:33,246 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:33,246 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:29:33,246 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:29:33,376 DEBUG sendRcv: received response: (b'590', 1)
2020-07-29 13:29:33,376 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:29:33,376 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0230059511521283, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:30:18,378 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:18,378 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:18,379 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:30:18,509 DEBUG sendRcv: received response: (b'440', 1)
2020-07-29 13:30:18,509 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:30:18,509 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:30:18,509 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:30:18,509 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:30:18,509 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:30:18,509 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:30:18,509 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:30:18,509 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:18,509 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:30:18,652 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:30:18,652 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:30:18,652 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:18,652 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:18,652 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:18,652 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:30:18,784 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:30:18,784 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:18,784 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:18,784 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:30:18,914 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:30:18,914 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:18,914 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:18,914 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:30:19,044 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:30:19,044 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:19,044 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:19,044 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:30:19,173 DEBUG sendRcv: received response: (b'480', 1)
2020-07-29 13:30:19,173 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:19,173 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:30:19,173 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:30:19,304 DEBUG sendRcv: received response: (b'469', 1)
2020-07-29 13:30:19,304 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:30:19,304 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0171966440537397, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:31:04,307 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:04,307 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:04,307 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:31:04,437 DEBUG sendRcv: received response: (b'320', 1)
2020-07-29 13:31:04,437 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:31:04,437 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:31:04,437 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:31:04,437 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:31:04,437 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:31:04,437 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:31:04,437 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:31:04,438 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:04,438 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:31:04,579 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:31:04,579 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:31:04,579 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:04,579 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:04,579 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:04,579 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:31:04,707 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:31:04,707 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:04,707 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:04,707 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:31:04,838 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:31:04,838 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:04,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:04,838 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:31:04,968 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:31:04,968 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:04,968 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:04,968 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:31:05,097 DEBUG sendRcv: received response: (b'362', 1)
2020-07-29 13:31:05,097 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:05,097 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:05,097 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:31:05,227 DEBUG sendRcv: received response: (b'351', 1)
2020-07-29 13:31:05,227 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:05,227 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0226917154648725, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:31:35,228 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:35,228 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:35,228 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:31:35,358 DEBUG sendRcv: received response: (b'200', 1)
2020-07-29 13:31:35,358 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 20}
2020-07-29 13:31:35,358 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:31:35,358 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'I'}
2020-07-29 13:31:35,358 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'rel_position': -120}
2020-07-29 13:31:35,358 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:31:35,359 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:31:35,359 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:31:35,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:35,359 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:31:35,501 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:31:35,501 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:31:35,501 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:35,501 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:35,501 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:35,501 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:31:35,632 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:31:35,632 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:35,632 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:35,632 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:31:35,763 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:31:35,763 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:35,763 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:35,763 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:31:35,893 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:31:35,893 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:35,893 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:35,893 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:31:36,023 DEBUG sendRcv: received response: (b'240', 1)
2020-07-29 13:31:36,023 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:36,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:31:36,023 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:31:36,153 DEBUG sendRcv: received response: (b'229', 1)
2020-07-29 13:31:36,153 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:31:36,153 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'timeout': 1.0177130586960736, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:32:21,156 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:32:21,156 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:32:21,156 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:32:21,285 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:32:21,285 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'speed_code': 10}
2020-07-29 13:32:21,285 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'to_port': 'O'}
2020-07-29 13:32:21,285 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:32:21,285 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'abs_position': 2000}
2020-07-29 13:32:21,286 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'delay_ms': 1000}
2020-07-29 13:32:21,286 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'minimal_reset': False}
2020-07-29 13:32:21,286 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:32:21,286 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-07-29 13:32:21,434 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:32:21,434 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:32:21,434 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:32:21,434 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:32:21,434 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:32:21,434 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:32:21,566 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:32:21,566 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:32:21,566 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:32:21,566 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:32:21,698 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:32:21,698 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>}
2020-07-29 13:32:21,698 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002A77FB06A20>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:32:21,698 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:32:22,003 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:35:55,690 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on': False}
2020-07-29 13:35:55,690 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:35:55,690 DEBUG sendRcv: sending cmd_string: N0R
2020-07-29 13:35:55,817 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:35:55,817 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:35:55,817 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:35:55,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:35:55,817 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:35:55,949 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:35:55,949 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:35:55,949 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:35:55,949 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:35:56,080 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:35:56,080 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:35:56,080 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:35:56,080 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:35:56,209 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:35:56,209 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:35:56,209 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:35:56,209 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:35:56,340 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:35:56,340 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:35:56,340 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-07-29 13:35:56,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:35:56,340 DEBUG sendRcv: sending cmd_string: Z0R
2020-07-29 13:35:56,465 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:35:56,527 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:36:10,275 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 12}
2020-07-29 13:36:10,275 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 10}
2020-07-29 13:36:10,275 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:36:10,275 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:36:10,275 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'abs_position': 2000}
2020-07-29 13:36:10,275 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:36:10,275 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:36:10,276 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:10,276 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-07-29 13:36:10,424 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:36:10,424 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:36:10,424 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:10,424 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:10,424 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:10,424 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:36:10,558 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:36:10,558 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:10,558 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:10,558 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:36:10,688 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:36:10,688 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:10,688 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:10,688 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:36:10,817 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:36:10,817 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:10,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:10,817 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:36:10,945 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:36:10,945 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:10,945 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:10,945 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:36:11,070 DEBUG sendRcv: received response: (b'0', 1)
2020-07-29 13:36:11,070 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:11,070 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:36:21,070 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:21,070 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:21,070 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:36:21,202 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:36:36,203 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:36,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:36,203 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:36:36,335 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:36:36,335 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:36:36,335 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:36:36,335 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:36:36,335 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:36:36,335 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:36:36,335 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:36:36,335 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:36:36,335 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:36,335 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:36:36,476 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:36:36,476 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:36:36,476 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:36,476 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:36,476 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:36,476 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:36:36,608 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:36:36,608 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:36,608 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:36,608 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:36:36,738 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:36:36,738 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:36,738 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:36,738 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:36:36,868 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:36:36,868 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:36,868 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:36,868 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:36:37,000 DEBUG sendRcv: received response: (b'2040', 1)
2020-07-29 13:36:37,000 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:37,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:36:37,000 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:36:37,130 DEBUG sendRcv: received response: (b'2029', 1)
2020-07-29 13:36:37,130 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:36:37,130 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0173134691574994, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:37:07,132 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,132 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,132 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:37:07,260 DEBUG sendRcv: received response: (b'1880', 1)
2020-07-29 13:37:07,260 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:37:07,260 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:37:07,260 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:37:07,260 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:37:07,260 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:37:07,260 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:37:07,260 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:37:07,260 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,260 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:37:07,401 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:37:07,401 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:37:07,401 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,401 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,401 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,401 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:37:07,529 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:37:07,529 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,529 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,529 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:37:07,660 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:37:07,660 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,660 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,660 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:37:07,789 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:37:07,789 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,789 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,789 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:37:07,920 DEBUG sendRcv: received response: (b'1921', 1)
2020-07-29 13:37:07,920 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:07,920 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:07,920 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:37:08,050 DEBUG sendRcv: received response: (b'1910', 1)
2020-07-29 13:37:08,050 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:08,050 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0215902216294233, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:37:38,052 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,052 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,052 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:37:38,180 DEBUG sendRcv: received response: (b'1760', 1)
2020-07-29 13:37:38,180 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:37:38,180 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:37:38,180 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:37:38,180 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:37:38,180 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:37:38,181 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:37:38,181 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:37:38,181 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,181 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:37:38,321 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:37:38,321 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:37:38,321 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,321 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,321 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,321 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:37:38,450 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:37:38,450 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,450 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,450 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:37:38,579 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:37:38,579 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,579 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,579 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:37:38,709 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:37:38,709 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,709 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,709 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:37:38,840 DEBUG sendRcv: received response: (b'1801', 1)
2020-07-29 13:37:38,840 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,840 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:37:38,840 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:37:38,970 DEBUG sendRcv: received response: (b'1789', 1)
2020-07-29 13:37:38,970 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:37:38,970 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0223424322464887, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:38:23,973 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:23,973 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:23,973 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:38:24,103 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-29 13:38:24,103 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:38:24,103 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:38:24,103 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:38:24,103 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:38:24,103 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:38:24,103 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:38:24,104 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:38:24,104 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:24,104 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:38:24,244 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:38:24,244 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:38:24,244 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,244 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,244 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:24,244 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:38:24,377 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:38:24,377 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,377 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:24,377 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:38:24,507 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:38:24,507 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,507 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:24,507 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:38:24,637 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:38:24,637 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,637 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:24,637 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:38:24,768 DEBUG sendRcv: received response: (b'1680', 1)
2020-07-29 13:38:24,768 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,768 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:38:24,768 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:38:24,899 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-29 13:38:24,899 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:38:24,899 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.016948688731474, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:39:09,902 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:09,902 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:09,902 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:39:10,032 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-29 13:39:10,032 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:39:10,032 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:39:10,032 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:39:10,032 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:39:10,032 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:39:10,032 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:39:10,033 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:39:10,033 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:10,033 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:39:10,172 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:39:10,172 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:39:10,172 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,172 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,172 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:10,172 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:39:10,300 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:39:10,300 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,300 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:10,300 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:39:10,431 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:39:10,431 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,431 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:10,431 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:39:10,560 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:39:10,560 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,560 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:10,560 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:39:10,692 DEBUG sendRcv: received response: (b'1561', 1)
2020-07-29 13:39:10,692 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,692 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:10,692 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:39:10,822 DEBUG sendRcv: received response: (b'1550', 1)
2020-07-29 13:39:10,822 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:10,822 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0225410349228803, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:39:40,825 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:40,825 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:40,825 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:39:40,953 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-29 13:39:40,953 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:39:40,953 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:39:40,953 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:39:40,953 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:39:40,953 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:39:40,954 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:39:40,954 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:39:40,954 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:40,954 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:39:41,093 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:39:41,093 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:39:41,093 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,093 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,093 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:41,093 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:39:41,221 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:39:41,221 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,221 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:41,221 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:39:41,351 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:39:41,351 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,351 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:41,351 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:39:41,481 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:39:41,481 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,481 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:41,481 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:39:41,612 DEBUG sendRcv: received response: (b'1441', 1)
2020-07-29 13:39:41,612 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,612 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:39:41,612 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:39:41,743 DEBUG sendRcv: received response: (b'1430', 1)
2020-07-29 13:39:41,743 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:39:41,743 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0228872186997358, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:40:26,747 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:26,747 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:26,747 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:40:26,876 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-29 13:40:26,876 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:40:26,876 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:40:26,876 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:40:26,876 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:40:26,876 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:40:26,876 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:40:26,876 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:40:26,876 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:26,876 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:40:27,017 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:40:27,017 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:40:27,017 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,017 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,017 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:27,017 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:40:27,149 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:40:27,149 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,149 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:27,149 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:40:27,279 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:40:27,279 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,279 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:27,279 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:40:27,409 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:40:27,409 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,409 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:27,409 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:40:27,540 DEBUG sendRcv: received response: (b'1320', 1)
2020-07-29 13:40:27,540 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,540 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:27,540 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:40:27,670 DEBUG sendRcv: received response: (b'1309', 1)
2020-07-29 13:40:27,670 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:27,670 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.017286527858061, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:40:57,671 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:57,671 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:57,671 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:40:57,801 DEBUG sendRcv: received response: (b'1160', 1)
2020-07-29 13:40:57,801 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:40:57,801 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:40:57,801 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:40:57,801 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:40:57,801 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:40:57,802 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:40:57,802 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:40:57,802 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:57,802 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:40:57,941 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:40:57,941 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:40:57,941 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:57,941 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:57,941 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:57,941 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:40:58,069 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:40:58,069 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:58,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:58,069 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:40:58,199 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:40:58,199 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:58,199 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:58,199 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:40:58,329 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:40:58,329 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:58,329 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:58,329 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:40:58,462 DEBUG sendRcv: received response: (b'1201', 1)
2020-07-29 13:40:58,462 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:58,462 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:40:58,462 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:40:58,591 DEBUG sendRcv: received response: (b'1189', 1)
2020-07-29 13:40:58,591 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:40:58,591 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.022378195033354, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:41:43,595 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:43,595 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:43,595 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:41:43,724 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-29 13:41:43,724 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:41:43,724 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:41:43,724 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:41:43,725 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:41:43,725 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:41:43,725 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:41:43,725 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:41:43,725 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:43,725 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:41:43,864 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:41:43,864 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:41:43,864 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:43,864 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:43,864 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:43,864 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:41:43,993 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:41:43,993 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:43,993 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:43,993 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:41:44,122 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:41:44,122 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:44,122 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:44,122 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:41:44,254 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:41:44,254 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:44,254 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:44,254 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:41:44,384 DEBUG sendRcv: received response: (b'1081', 1)
2020-07-29 13:41:44,384 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:44,384 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:41:44,384 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:41:44,514 DEBUG sendRcv: received response: (b'1070', 1)
2020-07-29 13:41:44,514 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:41:44,514 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0224294550278608, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:42:29,517 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:29,517 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:29,517 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:42:29,645 DEBUG sendRcv: received response: (b'920', 1)
2020-07-29 13:42:29,645 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:42:29,645 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:42:29,645 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:42:29,645 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:42:29,645 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:42:29,645 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:42:29,645 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:42:29,645 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:29,645 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:42:29,788 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:42:29,788 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:42:29,788 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:29,788 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:29,788 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:29,788 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:42:29,921 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:42:29,921 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:29,921 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:29,921 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:42:30,052 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:42:30,052 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:30,052 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:30,052 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:42:30,182 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:42:30,182 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:30,182 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:30,182 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:42:30,311 DEBUG sendRcv: received response: (b'960', 1)
2020-07-29 13:42:30,311 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:30,311 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:42:30,311 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:42:30,441 DEBUG sendRcv: received response: (b'949', 1)
2020-07-29 13:42:30,441 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:42:30,441 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.015795934901518, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:43:00,442 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:00,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:00,442 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:43:00,571 DEBUG sendRcv: received response: (b'800', 1)
2020-07-29 13:43:00,571 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:43:00,571 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:43:00,571 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:43:00,571 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:43:00,571 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:43:00,571 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:43:00,572 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:43:00,572 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:00,572 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:43:00,713 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:43:00,713 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:43:00,713 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:00,713 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:00,713 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:00,713 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:43:00,842 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:43:00,842 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:00,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:00,842 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:43:00,973 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:43:00,973 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:00,973 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:00,973 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:43:01,101 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:43:01,101 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:01,101 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:01,101 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:43:01,231 DEBUG sendRcv: received response: (b'840', 1)
2020-07-29 13:43:01,231 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:01,231 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:01,231 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:43:01,362 DEBUG sendRcv: received response: (b'830', 1)
2020-07-29 13:43:01,362 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:01,362 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.022063959346098, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:43:46,363 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:46,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:46,363 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:43:46,490 DEBUG sendRcv: received response: (b'680', 1)
2020-07-29 13:43:46,490 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:43:46,490 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:43:46,490 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:43:46,490 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:43:46,490 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:43:46,490 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:43:46,491 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:43:46,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:46,491 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:43:46,632 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:43:46,632 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:43:46,632 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:46,632 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:46,632 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:46,632 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:43:46,760 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:43:46,760 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:46,760 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:46,760 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:43:46,890 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:43:46,890 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:46,890 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:46,890 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:43:47,019 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:43:47,019 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:47,019 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:47,019 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:43:47,150 DEBUG sendRcv: received response: (b'721', 1)
2020-07-29 13:43:47,150 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:47,150 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:43:47,150 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:43:47,279 DEBUG sendRcv: received response: (b'710', 1)
2020-07-29 13:43:47,279 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:43:47,279 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0234599001267377, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:44:17,281 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:17,281 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:17,281 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:44:17,410 DEBUG sendRcv: received response: (b'560', 1)
2020-07-29 13:44:17,410 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:44:17,410 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:44:17,410 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:44:17,410 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:44:17,410 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:44:17,410 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:44:17,411 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:44:17,411 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:17,411 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:44:17,552 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:44:17,552 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:44:17,552 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:17,552 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:17,552 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:17,552 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:44:17,681 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:44:17,681 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:17,681 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:17,681 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:44:17,810 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:44:17,810 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:17,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:17,810 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:44:17,940 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:44:17,940 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:17,940 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:17,940 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:44:18,070 DEBUG sendRcv: received response: (b'601', 1)
2020-07-29 13:44:18,070 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:18,070 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:44:18,070 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:44:18,201 DEBUG sendRcv: received response: (b'590', 1)
2020-07-29 13:44:18,201 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:44:18,201 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0220148451188031, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:45:03,204 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,204 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,204 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:45:03,334 DEBUG sendRcv: received response: (b'440', 1)
2020-07-29 13:45:03,334 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:45:03,334 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:45:03,334 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:45:03,334 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:45:03,334 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:45:03,334 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:45:03,334 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:45:03,334 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,334 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:45:03,475 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:45:03,475 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:45:03,475 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,475 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,475 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,475 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:45:03,604 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:45:03,604 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,604 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,604 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:45:03,734 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:45:03,734 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,734 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,734 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:45:03,863 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:45:03,863 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,863 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,863 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:45:03,994 DEBUG sendRcv: received response: (b'481', 1)
2020-07-29 13:45:03,994 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:03,994 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:03,994 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:45:04,123 DEBUG sendRcv: received response: (b'470', 1)
2020-07-29 13:45:04,123 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:04,123 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0233569033005658, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:45:49,127 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,127 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,127 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:45:49,257 DEBUG sendRcv: received response: (b'320', 1)
2020-07-29 13:45:49,257 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:45:49,257 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:45:49,257 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:45:49,257 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:45:49,257 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:45:49,257 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:45:49,257 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:45:49,257 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,257 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:45:49,398 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:45:49,398 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:45:49,398 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,398 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,398 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,398 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:45:49,527 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:45:49,527 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,527 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,527 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:45:49,657 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:45:49,657 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,657 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,657 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:45:49,787 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:45:49,787 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,787 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,787 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:45:49,916 DEBUG sendRcv: received response: (b'360', 1)
2020-07-29 13:45:49,916 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:49,916 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:45:49,916 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:45:50,047 DEBUG sendRcv: received response: (b'350', 1)
2020-07-29 13:45:50,047 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:45:50,047 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0213706381180707, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:46:20,049 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,049 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,049 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:46:20,177 DEBUG sendRcv: received response: (b'200', 1)
2020-07-29 13:46:20,177 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:46:20,177 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:46:20,177 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:46:20,177 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:46:20,177 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:46:20,177 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:46:20,177 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:46:20,177 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,177 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:46:20,320 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:46:20,320 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:46:20,320 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,320 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,320 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,320 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:46:20,453 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:46:20,453 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,453 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,453 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:46:20,582 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:46:20,582 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,582 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,582 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:46:20,713 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:46:20,713 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,713 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,713 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:46:20,842 DEBUG sendRcv: received response: (b'240', 1)
2020-07-29 13:46:20,842 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:46:20,842 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:46:20,973 DEBUG sendRcv: received response: (b'229', 1)
2020-07-29 13:46:20,973 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:46:20,973 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0159435160019819, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:47:05,976 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:05,976 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:05,976 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:47:06,104 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:47:06,104 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 10}
2020-07-29 13:47:06,104 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:47:06,104 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:47:06,104 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'abs_position': 2000}
2020-07-29 13:47:06,104 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:47:06,104 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:47:06,105 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:06,105 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-07-29 13:47:06,253 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:47:06,253 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:47:06,253 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,253 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,253 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:06,253 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:47:06,385 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:47:06,385 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,385 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:06,385 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:47:06,516 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:47:06,516 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:06,516 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:47:06,646 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:47:06,646 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,646 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:06,646 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:47:06,774 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:47:06,774 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,774 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:06,774 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:47:06,904 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:47:06,904 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:06,904 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.6513745270865305, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:47:16,905 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:16,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:16,905 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:47:17,034 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:47:17,034 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:47:17,034 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:47:17,034 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:47:17,034 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:47:17,034 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:47:17,034 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:47:17,034 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:47:17,034 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:17,034 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:47:17,175 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:47:17,175 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:47:17,175 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,175 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,175 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:17,175 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:47:17,304 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:47:17,304 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,304 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:17,304 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:47:17,434 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:47:17,434 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,434 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:17,434 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:47:17,564 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:47:17,564 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:17,564 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:47:17,695 DEBUG sendRcv: received response: (b'2041', 1)
2020-07-29 13:47:17,695 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:17,695 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:47:17,825 DEBUG sendRcv: received response: (b'2029', 1)
2020-07-29 13:47:17,825 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:17,825 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.02050041030435, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:47:47,827 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:47,827 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:47,827 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:47:47,955 DEBUG sendRcv: received response: (b'1880', 1)
2020-07-29 13:47:47,955 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:47:47,955 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:47:47,955 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:47:47,955 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:47:47,955 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:47:47,955 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:47:47,955 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:47:47,955 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:47,955 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:47:48,096 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:47:48,096 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:47:48,096 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,096 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,096 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:48,096 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:47:48,229 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:47:48,229 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,229 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:48,229 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:47:48,359 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:47:48,359 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:48,359 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:47:48,489 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:47:48,489 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,489 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:48,489 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:47:48,621 DEBUG sendRcv: received response: (b'1920', 1)
2020-07-29 13:47:48,621 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,621 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:47:48,621 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:47:48,750 DEBUG sendRcv: received response: (b'1909', 1)
2020-07-29 13:47:48,750 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:47:48,750 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0168354399064008, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:48:18,753 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:18,753 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:18,753 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:48:18,881 DEBUG sendRcv: received response: (b'1760', 1)
2020-07-29 13:48:18,881 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:48:18,881 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:48:18,881 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:48:18,881 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:48:18,881 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:48:18,882 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:48:18,882 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:48:18,882 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:18,882 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:48:19,022 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:48:19,022 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:48:19,022 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,022 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,022 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:19,022 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:48:19,154 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:48:19,154 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,154 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:19,154 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:48:19,285 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:48:19,285 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,285 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:19,285 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:48:19,416 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:48:19,416 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,416 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:19,416 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:48:19,545 DEBUG sendRcv: received response: (b'1800', 1)
2020-07-29 13:48:19,545 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,545 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:48:19,545 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:48:19,675 DEBUG sendRcv: received response: (b'1789', 1)
2020-07-29 13:48:19,675 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:48:19,675 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0188834555008832, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:49:04,678 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:04,678 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:04,678 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:49:04,808 DEBUG sendRcv: received response: (b'1640', 1)
2020-07-29 13:49:04,808 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:49:04,808 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:49:04,808 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:49:04,808 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:49:04,808 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:49:04,808 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:49:04,808 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:49:04,808 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:04,808 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:49:04,949 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:49:04,949 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:49:04,949 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:04,949 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:04,949 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:04,949 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:49:05,078 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:49:05,078 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:05,078 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:05,078 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:49:05,208 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:49:05,208 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:05,208 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:05,208 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:49:05,338 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:49:05,338 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:05,338 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:05,338 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:49:05,469 DEBUG sendRcv: received response: (b'1680', 1)
2020-07-29 13:49:05,469 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:05,469 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:05,469 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:49:05,599 DEBUG sendRcv: received response: (b'1669', 1)
2020-07-29 13:49:05,599 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:05,599 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0208771116593305, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:49:35,601 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:35,634 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:35,634 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:49:35,765 DEBUG sendRcv: received response: (b'1520', 1)
2020-07-29 13:49:35,765 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:49:35,765 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:49:35,765 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:49:35,765 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:49:35,765 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:49:35,765 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:49:35,765 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:49:35,765 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:35,765 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:49:35,905 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:49:35,965 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:49:35,966 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:35,966 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:35,966 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:35,966 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:49:36,098 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:49:36,155 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:36,155 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:36,155 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:49:36,283 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:49:36,333 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:36,334 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:36,334 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:49:36,463 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:49:36,499 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:36,500 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:36,500 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:49:36,630 DEBUG sendRcv: received response: (b'1544', 1)
2020-07-29 13:49:36,688 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:36,688 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:49:36,689 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:49:36,819 DEBUG sendRcv: received response: (b'1528', 1)
2020-07-29 13:49:36,916 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:49:36,916 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 0.6608724481919233, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:50:21,918 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:22,008 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:22,008 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:50:22,137 DEBUG sendRcv: received response: (b'1400', 1)
2020-07-29 13:50:22,214 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:50:22,214 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:50:22,214 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:50:22,214 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:50:22,214 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:50:22,214 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:50:22,214 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:50:22,214 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:22,214 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:50:22,353 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:50:22,428 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:50:22,428 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:22,428 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:22,428 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:22,429 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:50:22,562 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:50:22,644 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:22,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:22,644 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:50:22,776 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:50:22,859 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:22,859 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:22,859 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:50:22,992 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:50:23,042 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:23,042 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:23,042 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:50:23,172 DEBUG sendRcv: received response: (b'1415', 1)
2020-07-29 13:50:23,261 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:23,262 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:50:23,262 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:50:23,392 DEBUG sendRcv: received response: (b'1397', 1)
2020-07-29 13:50:23,469 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:50:23,469 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 0.5561241991379682, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:51:08,472 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:08,502 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:08,502 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:51:08,631 DEBUG sendRcv: received response: (b'1280', 1)
2020-07-29 13:51:08,711 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:51:08,711 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:51:08,711 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:51:08,711 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:51:08,711 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:51:08,711 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:51:08,711 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:51:08,712 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:08,712 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:51:08,851 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:51:08,950 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:51:08,950 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:08,950 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:08,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:08,950 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:51:09,079 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:51:09,079 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:09,079 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:09,079 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:51:09,209 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:51:09,219 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:09,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:09,219 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:51:09,350 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:51:09,433 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:09,433 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:09,433 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:51:09,565 DEBUG sendRcv: received response: (b'1304', 1)
2020-07-29 13:51:09,683 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:09,683 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:09,683 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:51:09,810 DEBUG sendRcv: received response: (b'1283', 1)
2020-07-29 13:51:09,897 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:09,897 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 0.6269345171311322, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:51:39,899 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:39,938 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:39,938 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:51:40,071 DEBUG sendRcv: received response: (b'1160', 1)
2020-07-29 13:51:40,150 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:51:40,150 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:51:40,150 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:51:40,150 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:51:40,150 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:51:40,151 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:51:40,151 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:51:40,151 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:40,151 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:51:40,291 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:51:40,394 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:51:40,394 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:40,394 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:40,394 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:40,394 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:51:40,524 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:51:40,594 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:40,594 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:40,594 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:51:40,725 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:51:40,827 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:40,827 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:40,827 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:51:40,959 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:51:41,030 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:41,030 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:41,030 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:51:41,161 DEBUG sendRcv: received response: (b'1171', 1)
2020-07-29 13:51:41,268 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:41,268 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:51:41,268 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:51:41,401 DEBUG sendRcv: received response: (b'1151', 1)
2020-07-29 13:51:41,485 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:51:41,485 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 0.47833131621865665, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:52:26,491 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:26,503 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:26,503 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:52:26,634 DEBUG sendRcv: received response: (b'1040', 1)
2020-07-29 13:52:26,715 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:52:26,716 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:52:26,716 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:52:26,716 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:52:26,716 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:52:26,716 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:52:26,716 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:52:26,716 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:26,716 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:52:26,860 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:52:26,910 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:52:26,910 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:26,910 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:26,910 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:26,910 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:52:27,043 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:52:27,113 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:27,113 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:27,113 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:52:27,243 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:52:27,338 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:27,338 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:27,338 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:52:27,467 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:52:27,552 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:27,552 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:27,552 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:52:27,684 DEBUG sendRcv: received response: (b'1054', 1)
2020-07-29 13:52:27,737 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:27,737 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:27,741 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:52:27,868 DEBUG sendRcv: received response: (b'1039', 1)
2020-07-29 13:52:27,963 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:27,964 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 0.5641009695389692, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:52:57,966 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:57,966 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:57,966 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:52:58,093 DEBUG sendRcv: received response: (b'920', 1)
2020-07-29 13:52:58,093 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:52:58,093 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:52:58,093 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:52:58,093 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:52:58,093 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:52:58,093 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:52:58,093 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:52:58,093 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:58,093 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:52:58,234 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:52:58,234 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:52:58,234 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,234 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,234 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:58,234 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:52:58,363 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:52:58,363 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:58,363 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:52:58,493 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:52:58,493 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,493 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:58,493 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:52:58,623 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:52:58,623 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:58,623 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:52:58,753 DEBUG sendRcv: received response: (b'962', 1)
2020-07-29 13:52:58,753 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,753 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:52:58,753 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:52:58,883 DEBUG sendRcv: received response: (b'951', 1)
2020-07-29 13:52:58,883 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:52:58,883 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0208306200364057, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:53:43,886 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:43,886 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:43,886 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:53:44,016 DEBUG sendRcv: received response: (b'800', 1)
2020-07-29 13:53:44,016 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:53:44,016 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:53:44,016 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:53:44,016 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:53:44,016 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:53:44,016 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:53:44,016 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:53:44,016 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:44,016 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:53:44,157 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:53:44,157 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:53:44,157 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,157 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,157 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:44,157 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:53:44,287 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:53:44,287 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,287 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:44,287 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:53:44,417 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:53:44,417 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,417 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:44,417 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:53:44,546 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:53:44,546 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,546 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:44,546 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:53:44,676 DEBUG sendRcv: received response: (b'840', 1)
2020-07-29 13:53:44,676 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,676 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:53:44,676 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:53:44,806 DEBUG sendRcv: received response: (b'829', 1)
2020-07-29 13:53:44,806 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:53:44,806 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0218772775986615, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:54:29,808 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:29,808 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:29,808 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:54:29,939 DEBUG sendRcv: received response: (b'680', 1)
2020-07-29 13:54:29,939 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:54:29,939 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:54:29,939 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:54:29,939 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:54:29,939 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:54:29,939 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:54:29,939 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:54:29,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:29,939 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:54:30,081 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:54:30,081 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:54:30,081 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,081 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,081 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:30,081 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:54:30,209 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:54:30,209 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,209 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:30,209 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:54:30,340 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:54:30,340 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:30,340 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:54:30,470 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:54:30,470 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,470 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:30,470 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:54:30,599 DEBUG sendRcv: received response: (b'720', 1)
2020-07-29 13:54:30,599 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,599 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:54:30,599 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:54:30,730 DEBUG sendRcv: received response: (b'709', 1)
2020-07-29 13:54:30,730 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:54:30,730 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0208799726822797, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:55:00,732 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:00,732 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:00,732 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:55:00,859 DEBUG sendRcv: received response: (b'560', 1)
2020-07-29 13:55:00,859 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:55:00,859 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:55:00,859 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:55:00,859 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:55:00,859 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:55:00,860 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:55:00,860 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:55:00,860 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:00,860 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:55:01,002 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:55:01,002 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:55:01,002 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,002 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:01,002 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:55:01,135 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:55:01,135 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,135 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:01,135 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:55:01,265 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:55:01,265 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,265 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:01,265 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:55:01,395 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:55:01,395 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,395 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:01,395 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:55:01,524 DEBUG sendRcv: received response: (b'600', 1)
2020-07-29 13:55:01,524 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,524 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:01,524 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:55:01,654 DEBUG sendRcv: received response: (b'589', 1)
2020-07-29 13:55:01,654 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:01,654 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0178832895615522, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:55:46,657 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:46,657 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:46,657 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:55:46,783 DEBUG sendRcv: received response: (b'440', 1)
2020-07-29 13:55:46,783 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:55:46,783 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:55:46,783 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:55:46,783 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:55:46,783 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:55:46,783 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:55:46,783 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:55:46,783 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:46,783 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:55:46,924 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:55:46,924 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:55:46,924 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:46,924 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:46,924 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:46,924 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:55:47,053 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:55:47,053 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:47,053 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:47,053 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:55:47,183 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:55:47,183 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:47,183 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:47,183 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:55:47,313 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:55:47,313 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:47,313 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:47,313 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:55:47,443 DEBUG sendRcv: received response: (b'480', 1)
2020-07-29 13:55:47,443 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:47,443 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:55:47,443 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:55:47,572 DEBUG sendRcv: received response: (b'469', 1)
2020-07-29 13:55:47,572 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:55:47,572 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.021873462901396, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:56:17,574 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:17,574 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:17,574 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:56:17,703 DEBUG sendRcv: received response: (b'320', 1)
2020-07-29 13:56:17,703 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:56:17,703 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:56:17,703 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:56:17,703 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:56:17,703 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:56:17,703 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:56:17,703 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:56:17,703 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:17,703 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:56:17,844 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:56:17,844 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:56:17,844 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:17,844 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:17,844 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:17,844 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:56:17,973 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:56:17,973 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:17,973 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:17,973 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:56:18,103 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:56:18,103 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:18,103 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:18,103 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:56:18,233 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:56:18,233 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:18,233 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:18,233 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:56:18,363 DEBUG sendRcv: received response: (b'362', 1)
2020-07-29 13:56:18,363 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:18,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:56:18,363 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:56:18,493 DEBUG sendRcv: received response: (b'351', 1)
2020-07-29 13:56:18,493 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:56:18,493 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0218789465287152, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:57:03,496 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:03,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:03,496 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:57:03,626 DEBUG sendRcv: received response: (b'200', 1)
2020-07-29 13:57:03,626 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:57:03,626 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:57:03,626 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:57:03,626 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:57:03,626 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:57:03,626 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:57:03,626 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:57:03,626 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:03,626 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:57:03,768 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:57:03,768 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:57:03,768 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:03,768 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:03,768 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:03,768 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:57:03,896 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:57:03,896 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:03,896 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:03,896 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:57:04,027 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:57:04,027 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:04,027 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:04,027 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:57:04,156 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:57:04,156 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:04,156 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:04,156 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:57:04,286 DEBUG sendRcv: received response: (b'241', 1)
2020-07-29 13:57:04,286 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:04,286 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:04,286 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:57:04,415 DEBUG sendRcv: received response: (b'229', 1)
2020-07-29 13:57:04,415 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:04,415 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.022969949946684, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:57:49,418 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:49,418 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:49,418 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:57:49,543 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:57:49,543 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 10}
2020-07-29 13:57:49,543 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:57:49,543 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:57:49,543 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'abs_position': 2000}
2020-07-29 13:57:49,543 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:57:49,543 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:57:49,543 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:49,543 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-07-29 13:57:49,692 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:57:49,692 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:57:49,692 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:49,692 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:49,692 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:49,692 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:57:49,820 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:57:49,820 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:49,820 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:49,820 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:57:49,950 DEBUG sendRcv: received response: (b'1600', 1)
2020-07-29 13:57:49,950 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:49,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:49,950 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:57:50,079 DEBUG sendRcv: received response: (b'901', 1)
2020-07-29 13:57:50,079 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:50,079 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:50,079 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:57:50,209 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:57:50,209 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:50,209 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:57:50,209 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:57:50,338 DEBUG sendRcv: received response: (b'80', 1)
2020-07-29 13:57:50,338 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:57:50,338 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.6549729787009104, 'polling_interval': 0.3, 'delay': None}
2020-07-29 13:58:00,338 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:00,338 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:00,338 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:58:00,469 DEBUG sendRcv: received response: (b'2000', 1)
2020-07-29 13:58:00,469 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'speed_code': 20}
2020-07-29 13:58:00,469 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I', 'volume_ul': 20.0}
2020-07-29 13:58:00,469 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'I'}
2020-07-29 13:58:00,469 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'rel_position': -120}
2020-07-29 13:58:00,469 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'delay_ms': 1000}
2020-07-29 13:58:00,469 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'to_port': 'O'}
2020-07-29 13:58:00,469 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'minimal_reset': False}
2020-07-29 13:58:00,469 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:00,469 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-07-29 13:58:00,610 DEBUG sendRcv: received response: (None, 0)
2020-07-29 13:58:00,610 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'on_execute': True, 'minimal_reset': False}
2020-07-29 13:58:00,610 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:00,610 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:00,610 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:00,610 DEBUG sendRcv: sending cmd_string: ?1
2020-07-29 13:58:00,738 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:58:00,738 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:00,738 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:00,738 DEBUG sendRcv: sending cmd_string: ?2
2020-07-29 13:58:00,867 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:58:00,867 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:00,867 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:00,867 DEBUG sendRcv: sending cmd_string: ?3
2020-07-29 13:58:00,998 DEBUG sendRcv: received response: (b'170', 1)
2020-07-29 13:58:00,998 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:00,998 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:00,998 DEBUG sendRcv: sending cmd_string: ?6
2020-07-29 13:58:01,129 DEBUG sendRcv: received response: (b'2041', 1)
2020-07-29 13:58:01,129 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:01,129 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-07-29 13:58:01,129 DEBUG sendRcv: sending cmd_string: ?
2020-07-29 13:58:01,259 DEBUG sendRcv: received response: (b'2029', 1)
2020-07-29 13:58:01,259 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>}
2020-07-29 13:58:01,259 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E7CB8C5978>, 'timeout': 1.0211634523728315, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:12:30,805 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on': False}
2020-09-21 15:12:30,823 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:30,823 DEBUG sendRcv: sending cmd_string: N0R
2020-09-21 15:12:30,952 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:12:30,952 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:30,952 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:30,952 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:30,952 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:12:31,080 DEBUG sendRcv: received response: (b'901', 1)
2020-09-21 15:12:31,080 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:31,080 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:31,080 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:12:31,210 DEBUG sendRcv: received response: (b'901', 1)
2020-09-21 15:12:31,210 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:31,210 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:31,210 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:12:31,340 DEBUG sendRcv: received response: (b'901', 1)
2020-09-21 15:12:31,340 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:31,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:31,340 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:12:31,471 DEBUG sendRcv: received response: (b'8142', 1)
2020-09-21 15:12:31,471 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:31,471 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-09-21 15:12:31,471 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:31,471 DEBUG sendRcv: sending cmd_string: Z0R
2020-09-21 15:12:31,597 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:12:31,597 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:12:45,401 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 12}
2020-09-21 15:12:45,401 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 10}
2020-09-21 15:12:45,401 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:12:45,401 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:12:45,401 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'abs_position': 2000}
2020-09-21 15:12:45,401 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:12:45,401 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:12:45,401 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:45,401 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-09-21 15:12:45,550 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:12:45,550 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:12:45,550 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:45,550 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:45,550 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:45,550 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:12:45,678 DEBUG sendRcv: received response: (b'901', 1)
2020-09-21 15:12:45,678 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:45,678 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:45,678 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:12:45,809 DEBUG sendRcv: received response: (b'1600', 1)
2020-09-21 15:12:45,809 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:45,809 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:45,809 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:12:45,939 DEBUG sendRcv: received response: (b'901', 1)
2020-09-21 15:12:45,939 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:45,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:45,939 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:12:46,066 DEBUG sendRcv: received response: (b'0', 1)
2020-09-21 15:12:46,066 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:46,066 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:46,066 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:12:46,190 DEBUG sendRcv: received response: (b'0', 1)
2020-09-21 15:12:46,190 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:46,190 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 7.096654924702236, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:12:56,191 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:12:56,191 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:12:56,191 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:12:56,323 DEBUG sendRcv: received response: (b'2000', 1)
2020-09-21 15:13:11,324 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:11,324 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:11,324 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:13:11,455 DEBUG sendRcv: received response: (b'2000', 1)
2020-09-21 15:13:11,455 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:13:11,455 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:13:11,455 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:13:11,455 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:13:11,455 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:13:11,455 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:13:11,455 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:13:11,455 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:11,455 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:13:11,596 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:13:11,596 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:13:11,596 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:11,596 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:11,596 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:11,596 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:13:11,725 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:13:11,725 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:11,725 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:11,725 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:13:11,855 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:13:11,855 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:11,855 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:11,855 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:13:11,983 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:13:11,983 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:11,983 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:11,983 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:13:12,115 DEBUG sendRcv: received response: (b'2041', 1)
2020-09-21 15:13:12,115 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:12,115 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:12,115 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:13:12,245 DEBUG sendRcv: received response: (b'2030', 1)
2020-09-21 15:13:12,245 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:12,245 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 1.0220327265122358, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:13:42,247 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:42,247 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:42,247 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:13:42,375 DEBUG sendRcv: received response: (b'1880', 1)
2020-09-21 15:13:42,375 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:13:42,375 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:13:42,375 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:13:42,375 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:13:42,375 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:13:42,375 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:13:42,375 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:13:42,375 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:42,375 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:13:42,516 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:13:42,516 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:13:42,516 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:42,516 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:42,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:42,516 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:13:42,644 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:13:42,644 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:42,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:42,644 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:13:42,775 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:13:42,775 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:42,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:42,775 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:13:42,904 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:13:42,904 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:42,904 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:42,904 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:13:43,035 DEBUG sendRcv: received response: (b'1921', 1)
2020-09-21 15:13:43,035 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:43,035 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:13:43,035 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:13:43,166 DEBUG sendRcv: received response: (b'1910', 1)
2020-09-21 15:13:43,166 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:13:43,166 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 1.02131246398477, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:14:13,167 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,167 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,167 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:14:13,296 DEBUG sendRcv: received response: (b'1760', 1)
2020-09-21 15:14:13,296 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:14:13,296 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:14:13,296 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:14:13,296 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:14:13,296 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:14:13,296 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:14:13,296 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:14:13,296 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,296 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:14:13,437 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:14:13,437 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:14:13,437 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,437 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,437 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,437 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:14:13,565 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:14:13,565 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,565 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,565 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:14:13,694 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:14:13,694 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,694 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,694 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:14:13,825 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:14:13,825 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,825 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,825 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:14:13,955 DEBUG sendRcv: received response: (b'1802', 1)
2020-09-21 15:14:13,955 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:13,955 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:13,955 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:14:14,086 DEBUG sendRcv: received response: (b'1791', 1)
2020-09-21 15:14:14,086 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:14,086 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 1.0221373922684613, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:14:59,090 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,090 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,090 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:14:59,219 DEBUG sendRcv: received response: (b'1640', 1)
2020-09-21 15:14:59,219 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:14:59,219 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:14:59,219 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:14:59,219 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:14:59,219 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:14:59,219 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:14:59,219 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:14:59,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,219 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:14:59,359 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:14:59,359 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:14:59,359 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,359 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,359 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:14:59,488 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:14:59,488 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,488 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,488 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:14:59,618 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:14:59,618 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,618 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,618 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:14:59,749 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:14:59,749 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,749 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,749 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:14:59,879 DEBUG sendRcv: received response: (b'1681', 1)
2020-09-21 15:14:59,879 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:14:59,879 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:14:59,879 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:15:00,008 DEBUG sendRcv: received response: (b'1670', 1)
2020-09-21 15:15:00,008 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:00,008 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 1.0223419554093305, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:15:30,010 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,010 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,010 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:15:30,139 DEBUG sendRcv: received response: (b'1520', 1)
2020-09-21 15:15:30,139 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:15:30,139 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:15:30,139 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:15:30,139 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:15:30,139 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:15:30,139 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:15:30,140 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:15:30,140 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,140 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:15:30,280 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:15:30,280 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:15:30,280 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,280 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,280 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,280 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:15:30,409 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:15:30,409 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,409 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,409 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:15:30,538 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:15:30,538 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,538 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,538 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:15:30,668 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:15:30,668 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,668 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,668 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:15:30,799 DEBUG sendRcv: received response: (b'1561', 1)
2020-09-21 15:15:30,799 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:15:30,799 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:15:30,929 DEBUG sendRcv: received response: (b'1550', 1)
2020-09-21 15:15:30,929 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:15:30,929 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 1.022178877101225, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:16:15,933 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:15,933 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:15,933 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:16:16,063 DEBUG sendRcv: received response: (b'1400', 1)
2020-09-21 15:16:16,063 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:16:16,063 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:16:16,063 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:16:16,063 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:16:16,063 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:16:16,063 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:16:16,063 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:16:16,063 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:16,063 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:16:16,203 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:16:16,203 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:16:16,203 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,203 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:16,203 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:16:16,331 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:16:16,331 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,331 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:16,331 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:16:16,462 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:16:16,462 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,462 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:16,462 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:16:16,591 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:16:16,591 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,591 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:16,591 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:16:16,723 DEBUG sendRcv: received response: (b'1441', 1)
2020-09-21 15:16:16,723 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,723 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:16:16,723 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:16:16,852 DEBUG sendRcv: received response: (b'1429', 1)
2020-09-21 15:16:16,852 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:16:16,852 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 1.02204488585977, 'polling_interval': 0.3, 'delay': None}
2020-09-21 15:17:01,856 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:01,856 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:01,856 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:17:01,985 DEBUG sendRcv: received response: (b'1280', 1)
2020-09-21 15:17:01,985 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'speed_code': 20}
2020-09-21 15:17:01,985 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I', 'volume_ul': 20.0}
2020-09-21 15:17:01,985 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'I'}
2020-09-21 15:17:01,985 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'rel_position': -120}
2020-09-21 15:17:01,985 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'delay_ms': 1000}
2020-09-21 15:17:01,985 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'to_port': 'O'}
2020-09-21 15:17:01,985 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'minimal_reset': False}
2020-09-21 15:17:01,986 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:01,986 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-09-21 15:17:02,316 DEBUG sendRcv: received response: (None, 0)
2020-09-21 15:17:02,316 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'on_execute': True, 'minimal_reset': False}
2020-09-21 15:17:02,316 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,316 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,316 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:02,316 DEBUG sendRcv: sending cmd_string: ?1
2020-09-21 15:17:02,444 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:17:02,444 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,444 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:02,444 DEBUG sendRcv: sending cmd_string: ?2
2020-09-21 15:17:02,575 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:17:02,575 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,575 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:02,575 DEBUG sendRcv: sending cmd_string: ?3
2020-09-21 15:17:02,704 DEBUG sendRcv: received response: (b'170', 1)
2020-09-21 15:17:02,704 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,704 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:02,704 DEBUG sendRcv: sending cmd_string: ?6
2020-09-21 15:17:02,835 DEBUG sendRcv: received response: (b'1304', 1)
2020-09-21 15:17:02,835 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,835 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-09-21 15:17:02,835 DEBUG sendRcv: sending cmd_string: ?
2020-09-21 15:17:02,966 DEBUG sendRcv: received response: (b'1293', 1)
2020-09-21 15:17:02,966 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>}
2020-09-21 15:17:02,966 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F0E090E358>, 'timeout': 0.8323850519516889, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:25:24,235 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on': False}
2020-10-20 18:25:24,235 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:24,236 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 18:25:24,364 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:25:24,364 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:24,364 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:24,364 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:24,364 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:25:24,491 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:25:24,491 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:24,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:24,491 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:25:24,622 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:25:24,622 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:24,622 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:24,622 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:25:24,752 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:25:24,752 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:24,752 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:24,752 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:25:24,882 DEBUG sendRcv: received response: (b'8142', 1)
2020-10-20 18:25:24,882 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:24,882 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 18:25:24,882 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:24,882 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 18:25:25,010 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:25:25,010 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:25:35,784 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 12}
2020-10-20 18:25:35,784 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 10}
2020-10-20 18:25:35,784 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:25:35,784 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:25:35,784 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'abs_position': 2000}
2020-10-20 18:25:35,784 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:25:35,784 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:25:35,784 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:35,784 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 18:25:35,933 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:25:35,933 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:25:35,933 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:35,933 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:35,933 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:35,933 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:25:36,066 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:25:36,066 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:36,066 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:36,066 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:25:36,196 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 18:25:36,196 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:36,196 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:36,196 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:25:36,325 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:25:36,325 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:36,325 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:36,325 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:25:36,453 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:25:36,453 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:36,453 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:36,453 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:25:36,578 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:25:36,578 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:36,578 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 7.091806206059047, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:25:46,580 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:25:46,580 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:25:46,580 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:25:46,710 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:26:01,712 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:01,712 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:01,712 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:26:01,844 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:26:01,844 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:26:01,844 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:26:01,844 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:26:01,844 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:26:01,844 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:26:01,844 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:26:01,844 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:26:01,844 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:01,844 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:26:01,984 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:26:01,984 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:26:01,984 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:01,984 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:01,984 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:01,984 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:26:02,116 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:26:02,116 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:02,116 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:02,116 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:26:02,247 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:26:02,247 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:02,247 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:02,247 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:26:02,378 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:26:02,378 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:02,378 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:02,378 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:26:02,507 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-20 18:26:02,507 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:02,507 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:02,507 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:26:02,638 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 18:26:02,638 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:02,638 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0176494009354535, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:26:32,641 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:32,641 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:32,641 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:26:32,768 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 18:26:32,768 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:26:32,768 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:26:32,768 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:26:32,768 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:26:32,768 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:26:32,768 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:26:32,769 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:26:32,769 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:32,769 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:26:32,909 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:26:32,909 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:26:32,909 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:32,909 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:32,909 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:32,909 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:26:33,038 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:26:33,038 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:33,038 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:33,038 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:26:33,166 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:26:33,166 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:33,166 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:33,166 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:26:33,298 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:26:33,298 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:33,298 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:33,298 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:26:33,428 DEBUG sendRcv: received response: (b'1921', 1)
2020-10-20 18:26:33,428 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:33,428 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:26:33,428 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:26:33,559 DEBUG sendRcv: received response: (b'1910', 1)
2020-10-20 18:26:33,559 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:26:33,559 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0218636877396527, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:27:03,561 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:03,561 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:03,561 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:27:03,689 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 18:27:03,689 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:27:03,689 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:27:03,689 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:27:03,689 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:27:03,689 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:27:03,689 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:27:03,689 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:27:03,689 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:03,690 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:27:03,830 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:27:03,830 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:27:03,830 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:03,830 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:03,830 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:03,830 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:27:03,958 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:27:03,958 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:03,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:03,958 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:27:04,089 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:27:04,089 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:04,089 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:04,089 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:27:04,219 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:27:04,219 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:04,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:04,219 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:27:04,349 DEBUG sendRcv: received response: (b'1802', 1)
2020-10-20 18:27:04,349 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:04,349 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:04,349 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:27:04,479 DEBUG sendRcv: received response: (b'1791', 1)
2020-10-20 18:27:04,479 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:04,479 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0216867811539594, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:27:49,484 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:49,484 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:49,484 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:27:49,613 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 18:27:49,613 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:27:49,613 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:27:49,613 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:27:49,613 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:27:49,613 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:27:49,614 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:27:49,614 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:27:49,614 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:49,614 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:27:49,755 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:27:49,755 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:27:49,755 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:49,755 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:49,755 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:49,755 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:27:49,888 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:27:49,888 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:49,888 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:49,888 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:27:50,018 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:27:50,018 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:50,018 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:50,018 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:27:50,149 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:27:50,149 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:50,149 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:50,149 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:27:50,278 DEBUG sendRcv: received response: (b'1680', 1)
2020-10-20 18:27:50,278 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:50,278 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:27:50,278 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:27:50,408 DEBUG sendRcv: received response: (b'1669', 1)
2020-10-20 18:27:50,408 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:27:50,408 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0172870046952192, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:28:20,411 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:20,411 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:20,411 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:28:20,539 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 18:28:20,539 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:28:20,539 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:28:20,539 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:28:20,539 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:28:20,539 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:28:20,539 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:28:20,539 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:28:20,539 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:20,539 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:28:20,680 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:28:20,680 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:28:20,680 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:20,680 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:20,680 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:20,680 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:28:20,808 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:28:20,808 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:20,808 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:20,808 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:28:20,939 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:28:20,939 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:20,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:20,939 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:28:21,068 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:28:21,068 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:21,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:21,068 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:28:21,199 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 18:28:21,199 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:21,199 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:28:21,199 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:28:21,329 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 18:28:21,329 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:28:21,329 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0220553762772504, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:29:06,334 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:06,334 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:06,334 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:29:06,463 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 18:29:06,463 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:29:06,463 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:29:06,463 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:29:06,463 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:29:06,463 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:29:06,463 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:29:06,463 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:29:06,463 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:06,463 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:29:06,604 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:29:06,604 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:29:06,604 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:06,604 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:06,604 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:06,604 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:29:06,733 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:29:06,733 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:06,733 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:06,733 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:29:06,862 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:29:06,862 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:06,862 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:06,862 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:29:06,992 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:29:06,992 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:06,992 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:06,992 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:29:07,123 DEBUG sendRcv: received response: (b'1441', 1)
2020-10-20 18:29:07,123 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:07,123 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:07,123 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:29:07,253 DEBUG sendRcv: received response: (b'1430', 1)
2020-10-20 18:29:07,253 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:07,253 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0223812944748822, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:29:52,258 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:52,258 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:52,258 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:29:52,387 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 18:29:52,387 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:29:52,387 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:29:52,387 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:29:52,387 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:29:52,388 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:29:52,388 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:29:52,388 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:29:52,388 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:52,388 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:29:52,528 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:29:52,528 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:29:52,528 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:52,528 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:52,528 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:52,528 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:29:52,660 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:29:52,660 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:52,660 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:52,660 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:29:52,791 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:29:52,791 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:52,791 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:52,791 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:29:52,920 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:29:52,920 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:52,920 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:52,920 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:29:53,052 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 18:29:53,052 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:53,052 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:29:53,052 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:29:53,182 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 18:29:53,182 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:29:53,182 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0181817896225873, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:30:23,184 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,184 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,184 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:30:23,312 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 18:30:23,312 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:30:23,312 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:30:23,312 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:30:23,312 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:30:23,312 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:30:23,312 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:30:23,312 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:30:23,312 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,312 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:30:23,454 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:30:23,454 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:30:23,454 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,454 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,454 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,454 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:30:23,586 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:30:23,586 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,586 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,586 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:30:23,716 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:30:23,716 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,716 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,716 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:30:23,847 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:30:23,847 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,847 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,847 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:30:23,978 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 18:30:23,978 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:23,978 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:30:23,978 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:30:24,107 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-20 18:30:24,107 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:30:24,107 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0163276083329145, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:31:09,111 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,111 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,111 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:31:09,241 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 18:31:09,241 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:31:09,241 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:31:09,241 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:31:09,241 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:31:09,241 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:31:09,241 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:31:09,242 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:31:09,242 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,242 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:31:09,383 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:31:09,383 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:31:09,383 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,383 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,383 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,383 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:31:09,515 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:31:09,515 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,515 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,515 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:31:09,645 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:31:09,645 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,645 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,645 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:31:09,775 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:31:09,775 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,775 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:31:09,905 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-20 18:31:09,905 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:09,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:09,905 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:31:10,036 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-20 18:31:10,036 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:10,036 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0178210623124067, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:31:40,037 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,037 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,037 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:31:40,166 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 18:31:40,166 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:31:40,166 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:31:40,166 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:31:40,166 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:31:40,166 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:31:40,166 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:31:40,166 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:31:40,166 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,166 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:31:40,308 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:31:40,308 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:31:40,308 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,308 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,308 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,308 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:31:40,437 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:31:40,437 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,437 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,437 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:31:40,566 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:31:40,566 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,566 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,566 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:31:40,696 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:31:40,696 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,696 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,696 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:31:40,826 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 18:31:40,826 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,826 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:31:40,826 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:31:40,956 DEBUG sendRcv: received response: (b'949', 1)
2020-10-20 18:31:40,956 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:31:40,956 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0213615782120649, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:32:25,960 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:25,960 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:25,960 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:32:26,091 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 18:32:26,091 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:32:26,091 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:32:26,091 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:32:26,091 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:32:26,091 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:32:26,091 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:32:26,091 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:32:26,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:26,091 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:32:26,232 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:32:26,232 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:32:26,232 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,232 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,232 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:26,232 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:32:26,366 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:32:26,366 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,366 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:26,366 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:32:26,495 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:32:26,495 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,495 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:26,495 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:32:26,625 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:32:26,625 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,625 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:26,625 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:32:26,755 DEBUG sendRcv: received response: (b'840', 1)
2020-10-20 18:32:26,755 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,755 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:32:26,755 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:32:26,884 DEBUG sendRcv: received response: (b'829', 1)
2020-10-20 18:32:26,884 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:32:26,884 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.019335973964018, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:33:11,887 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:11,887 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:11,887 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:33:12,014 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 18:33:12,014 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:33:12,014 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:33:12,014 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:33:12,014 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:33:12,014 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:33:12,014 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:33:12,014 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:33:12,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:12,014 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:33:12,156 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:33:12,156 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:33:12,156 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,156 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,156 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:12,156 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:33:12,289 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:33:12,289 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:12,289 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:33:12,419 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:33:12,419 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:12,419 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:33:12,550 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:33:12,550 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,550 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:12,550 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:33:12,679 DEBUG sendRcv: received response: (b'720', 1)
2020-10-20 18:33:12,679 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,679 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:12,679 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:33:12,809 DEBUG sendRcv: received response: (b'709', 1)
2020-10-20 18:33:12,809 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:12,809 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'timeout': 1.0166275389054242, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:33:42,811 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>}
2020-10-20 18:33:42,811 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:42,811 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:33:42,940 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 18:33:42,940 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'speed_code': 20}
2020-10-20 18:33:42,940 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:33:42,940 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'I'}
2020-10-20 18:33:42,940 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'rel_position': -120}
2020-10-20 18:33:42,940 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'delay_ms': 1000}
2020-10-20 18:33:42,940 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'to_port': 'O'}
2020-10-20 18:33:42,940 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'minimal_reset': False}
2020-10-20 18:33:42,940 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002596EE76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:33:42,940 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:38:27,304 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000025615A16640>, 'on': False}
2020-10-20 18:38:27,304 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025615A16640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:38:27,304 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 18:41:27,592 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x00000256FA3F6640>, 'on': False}
2020-10-20 18:41:27,592 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000256FA3F6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:41:27,592 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 18:42:30,089 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'on': False}
2020-10-20 18:42:30,089 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:30,089 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 18:42:30,216 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:42:30,216 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:30,216 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:30,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:30,216 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:42:30,345 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:42:30,345 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:30,345 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:30,345 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:42:30,474 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:42:30,474 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:30,474 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:30,474 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:42:30,604 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:42:30,604 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:30,604 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:30,604 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:42:30,735 DEBUG sendRcv: received response: (b'8142', 1)
2020-10-20 18:42:30,735 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:30,735 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 18:42:30,735 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:30,736 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 18:42:30,860 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:42:30,860 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:42:38,660 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'speed_code': 12}
2020-10-20 18:42:38,660 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'speed_code': 10}
2020-10-20 18:42:38,660 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'O'}
2020-10-20 18:42:38,660 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'delay_ms': 1000}
2020-10-20 18:42:38,660 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'abs_position': 2000}
2020-10-20 18:42:38,660 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'delay_ms': 1000}
2020-10-20 18:42:38,660 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'minimal_reset': False}
2020-10-20 18:42:38,660 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:38,660 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 18:42:38,810 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:42:38,810 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:42:38,810 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:38,810 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:38,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:38,810 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:42:38,937 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:42:38,937 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:38,937 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:38,937 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:42:39,068 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 18:42:39,068 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:39,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:39,068 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:42:39,198 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:42:39,198 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:39,198 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:39,198 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:42:39,325 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:42:39,325 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:39,325 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:39,325 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:42:39,450 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:42:39,450 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:39,450 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'timeout': 7.096201929401943, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:42:49,451 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:42:49,451 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:42:49,451 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:42:49,582 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:43:04,583 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:04,583 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:04,583 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:43:04,715 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:43:04,715 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'speed_code': 20}
2020-10-20 18:43:04,715 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:43:04,715 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I'}
2020-10-20 18:43:04,715 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'rel_position': -120}
2020-10-20 18:43:04,716 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'delay_ms': 1000}
2020-10-20 18:43:04,716 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'O'}
2020-10-20 18:43:04,716 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'minimal_reset': False}
2020-10-20 18:43:04,716 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:04,716 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:43:04,856 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:43:04,856 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:43:04,856 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:04,856 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:04,856 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:04,856 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:43:04,984 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:43:04,984 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:04,984 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:04,984 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:43:05,114 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:43:05,114 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:05,114 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:05,114 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:43:05,245 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:43:05,245 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:05,245 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:05,245 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:43:05,376 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 18:43:05,376 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:05,376 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:05,376 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:43:05,505 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 18:43:05,505 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:05,505 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'timeout': 1.0228023416855756, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:43:35,507 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:35,507 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:35,507 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:43:35,635 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 18:43:35,635 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'speed_code': 20}
2020-10-20 18:43:35,635 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:43:35,635 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I'}
2020-10-20 18:43:35,635 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'rel_position': -120}
2020-10-20 18:43:35,636 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'delay_ms': 1000}
2020-10-20 18:43:35,636 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'O'}
2020-10-20 18:43:35,636 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'minimal_reset': False}
2020-10-20 18:43:35,636 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:35,636 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:43:35,776 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:43:35,776 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:43:35,776 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:35,776 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:35,776 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:35,776 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:43:35,904 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:43:35,904 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:35,904 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:35,904 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:43:36,035 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:43:36,035 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:36,035 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:36,035 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:43:36,165 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:43:36,165 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:36,165 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:36,165 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:43:36,296 DEBUG sendRcv: received response: (b'1921', 1)
2020-10-20 18:43:36,296 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:36,296 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:43:36,296 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:43:36,426 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 18:43:36,426 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:43:36,426 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'timeout': 1.0221557504990522, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:44:06,428 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:06,428 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:06,428 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:44:06,556 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 18:44:06,556 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'speed_code': 20}
2020-10-20 18:44:06,556 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:44:06,556 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I'}
2020-10-20 18:44:06,556 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'rel_position': -120}
2020-10-20 18:44:06,556 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'delay_ms': 1000}
2020-10-20 18:44:06,556 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'O'}
2020-10-20 18:44:06,557 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'minimal_reset': False}
2020-10-20 18:44:06,557 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:06,557 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:44:06,697 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:44:06,697 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:44:06,697 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:06,697 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:06,697 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:06,697 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:44:06,826 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:44:06,826 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:06,826 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:06,826 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:44:06,955 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:44:06,955 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:06,955 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:06,955 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:44:07,085 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:44:07,085 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:07,085 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:07,085 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:44:07,216 DEBUG sendRcv: received response: (b'1802', 1)
2020-10-20 18:44:07,216 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:07,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:07,216 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:44:07,347 DEBUG sendRcv: received response: (b'1791', 1)
2020-10-20 18:44:07,347 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:07,347 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'timeout': 1.0214648134568158, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:44:52,349 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:52,349 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:52,349 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:44:52,480 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 18:44:52,480 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'speed_code': 20}
2020-10-20 18:44:52,480 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:44:52,480 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'I'}
2020-10-20 18:44:52,480 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'rel_position': -120}
2020-10-20 18:44:52,480 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'delay_ms': 1000}
2020-10-20 18:44:52,481 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'to_port': 'O'}
2020-10-20 18:44:52,481 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'minimal_reset': False}
2020-10-20 18:44:52,481 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:52,481 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:44:52,621 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:44:52,621 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:44:52,621 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:52,621 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:52,621 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:52,621 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:44:52,754 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:44:52,754 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:52,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:52,754 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:44:52,884 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:44:52,884 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:52,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:52,884 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:44:53,014 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:44:53,014 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:53,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:53,014 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:44:53,145 DEBUG sendRcv: received response: (b'1680', 1)
2020-10-20 18:44:53,145 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>}
2020-10-20 18:44:53,145 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001456C666640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:44:53,145 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:44:53,450 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:45:30,917 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on': False}
2020-10-20 18:45:30,917 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:30,917 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 18:45:31,045 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:45:31,045 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:31,045 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:31,045 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:31,045 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:45:31,173 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:45:31,173 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:31,173 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:31,173 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:45:31,303 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:45:31,303 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:31,303 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:31,303 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:45:31,433 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:45:31,433 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:31,433 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:31,433 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:45:31,564 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 18:45:31,564 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:31,564 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 18:45:31,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:31,564 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 18:45:31,690 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:45:31,690 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:45:43,314 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 12}
2020-10-20 18:45:43,314 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 10}
2020-10-20 18:45:43,314 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:45:43,314 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:45:43,314 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'abs_position': 2000}
2020-10-20 18:45:43,314 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:45:43,314 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:45:43,315 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:43,315 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 18:45:43,464 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:45:43,464 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:45:43,464 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:43,464 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:43,464 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:43,464 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:45:43,597 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:45:43,597 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:43,597 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:43,597 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:45:43,728 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 18:45:43,728 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:43,728 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:43,728 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:45:43,856 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:45:43,856 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:43,856 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:43,856 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:45:43,985 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:45:43,985 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:43,985 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:43,985 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:45:44,109 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:45:44,109 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:44,109 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 0.04259436236790237, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:45:54,110 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:45:54,110 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:45:54,110 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:45:54,241 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:46:09,241 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:09,241 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:09,241 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:46:09,369 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:46:09,369 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:46:09,369 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:46:09,369 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:46:09,369 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:46:09,369 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:46:09,369 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:46:09,369 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:46:09,369 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:09,369 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:46:09,509 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:46:09,509 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:46:09,509 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:09,509 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:09,509 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:09,509 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:46:09,638 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:46:09,638 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:09,638 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:09,638 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:46:09,767 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:46:09,767 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:09,767 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:09,767 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:46:09,899 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:46:09,899 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:09,899 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:09,899 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:46:10,029 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 18:46:10,029 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:10,029 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:10,029 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:46:10,159 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-20 18:46:10,159 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:10,159 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0217580683091108, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:46:40,162 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,162 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,162 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:46:40,289 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 18:46:40,289 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:46:40,289 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:46:40,289 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:46:40,289 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:46:40,289 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:46:40,290 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:46:40,290 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:46:40,290 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,290 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:46:40,430 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:46:40,430 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:46:40,430 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,430 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,431 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,431 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:46:40,559 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:46:40,559 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,559 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,559 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:46:40,688 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:46:40,688 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,688 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,688 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:46:40,818 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:46:40,818 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,818 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,818 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:46:40,950 DEBUG sendRcv: received response: (b'1922', 1)
2020-10-20 18:46:40,950 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:40,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:46:40,950 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:46:41,081 DEBUG sendRcv: received response: (b'1911', 1)
2020-10-20 18:46:41,081 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:46:41,081 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0205712206223432, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:47:11,084 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,084 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,084 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:47:11,215 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 18:47:11,215 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:47:11,215 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:47:11,215 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:47:11,215 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:47:11,215 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:47:11,215 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:47:11,215 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:47:11,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,216 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:47:11,356 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:47:11,356 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:47:11,356 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,356 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,356 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:47:11,490 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:47:11,490 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,490 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,490 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:47:11,619 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:47:11,619 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,619 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,619 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:47:11,748 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:47:11,748 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,748 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,748 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:47:11,880 DEBUG sendRcv: received response: (b'1800', 1)
2020-10-20 18:47:11,880 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:11,880 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:11,880 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:47:12,010 DEBUG sendRcv: received response: (b'1789', 1)
2020-10-20 18:47:12,010 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:12,010 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.017399061427397, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:47:57,014 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,014 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:47:57,143 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 18:47:57,143 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:47:57,143 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:47:57,143 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:47:57,143 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:47:57,143 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:47:57,143 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:47:57,143 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:47:57,143 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,143 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:47:57,284 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:47:57,284 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:47:57,284 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,284 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,284 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,284 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:47:57,412 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:47:57,412 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,412 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,412 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:47:57,542 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:47:57,542 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,542 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,542 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:47:57,673 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:47:57,673 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,673 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,673 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:47:57,804 DEBUG sendRcv: received response: (b'1680', 1)
2020-10-20 18:47:57,804 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,804 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:47:57,804 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:47:57,934 DEBUG sendRcv: received response: (b'1669', 1)
2020-10-20 18:47:57,934 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:47:57,934 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0213451273301069, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:48:42,938 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:42,938 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:42,938 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:48:43,068 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 18:48:43,068 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:48:43,068 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:48:43,068 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:48:43,068 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:48:43,068 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:48:43,068 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:48:43,068 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:48:43,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:43,068 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:48:43,208 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:48:43,208 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:48:43,208 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,208 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,208 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:43,208 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:48:43,336 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:48:43,336 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:43,336 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:48:43,466 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:48:43,466 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,466 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:43,466 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:48:43,596 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:48:43,596 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,596 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:43,596 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:48:43,726 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 18:48:43,726 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,726 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:48:43,726 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:48:43,857 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 18:48:43,857 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:48:43,857 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0221490747788373, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:49:13,860 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:13,860 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:13,860 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:49:13,988 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 18:49:13,988 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:49:13,988 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:49:13,988 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:49:13,988 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:49:13,988 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:49:13,988 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:49:13,989 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:49:13,989 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:13,989 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:49:14,128 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:49:14,128 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:49:14,128 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,128 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,128 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:14,128 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:49:14,256 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:49:14,256 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,256 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:14,256 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:49:14,387 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:49:14,387 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,387 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:14,387 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:49:14,517 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:49:14,517 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,517 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:14,517 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:49:14,648 DEBUG sendRcv: received response: (b'1441', 1)
2020-10-20 18:49:14,648 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,648 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:14,648 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:49:14,777 DEBUG sendRcv: received response: (b'1429', 1)
2020-10-20 18:49:14,777 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:14,777 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0234126932480756, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:49:59,780 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:49:59,780 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:59,780 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:49:59,911 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 18:49:59,911 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:49:59,911 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:49:59,911 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:49:59,911 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:49:59,911 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:49:59,911 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:49:59,912 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:49:59,912 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:49:59,912 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:50:00,052 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:50:00,052 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:50:00,052 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,052 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,052 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:00,052 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:50:00,185 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:50:00,185 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,185 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:00,185 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:50:00,315 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:50:00,315 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,315 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:00,315 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:50:00,445 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:50:00,445 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,445 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:00,445 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:50:00,576 DEBUG sendRcv: received response: (b'1322', 1)
2020-10-20 18:50:00,576 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,576 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:00,576 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:50:00,706 DEBUG sendRcv: received response: (b'1311', 1)
2020-10-20 18:50:00,706 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:00,706 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0179753191330854, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:50:30,707 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:30,707 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:30,707 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:50:30,837 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 18:50:30,837 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:50:30,837 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:50:30,837 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:50:30,837 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:50:30,837 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:50:30,838 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:50:30,838 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:50:30,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:30,838 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:50:30,977 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:50:30,977 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:50:30,977 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:30,977 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:30,977 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:30,977 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:50:31,106 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:50:31,106 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:31,106 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:31,106 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:50:31,236 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:50:31,236 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:31,236 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:31,236 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:50:31,365 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:50:31,365 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:31,365 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:31,365 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:50:31,496 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 18:50:31,496 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:31,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:50:31,496 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:50:31,626 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-20 18:50:31,626 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:50:31,626 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0231480486252729, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:51:16,629 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:16,629 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:16,629 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:51:16,760 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 18:51:16,760 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:51:16,760 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:51:16,760 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:51:16,760 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:51:16,760 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:51:16,760 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:51:16,760 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:51:16,760 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:16,760 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:51:16,901 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:51:16,901 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:51:16,901 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:16,901 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:16,901 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:16,901 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:51:17,034 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:51:17,034 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:17,034 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:17,034 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:51:17,164 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:51:17,164 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:17,164 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:17,164 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:51:17,294 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:51:17,294 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:17,294 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:17,294 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:51:17,425 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-20 18:51:17,425 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:17,425 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:51:17,425 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:51:17,555 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-20 18:51:17,555 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:51:17,555 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0159053690293256, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:52:02,558 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:02,558 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:02,558 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:52:02,687 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 18:52:02,687 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:52:02,687 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:52:02,687 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:52:02,687 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:52:02,687 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:52:02,687 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:52:02,687 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:52:02,687 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:02,687 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:52:02,829 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:52:02,829 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:52:02,829 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:02,829 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:02,829 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:02,829 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:52:02,958 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:52:02,958 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:02,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:02,958 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:52:03,087 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:52:03,087 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:03,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:03,087 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:52:03,217 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:52:03,217 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:03,217 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:03,217 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:52:03,347 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 18:52:03,347 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:03,347 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:03,347 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:52:03,478 DEBUG sendRcv: received response: (b'949', 1)
2020-10-20 18:52:03,478 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:03,478 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0207478887894574, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:52:33,480 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:33,480 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:33,480 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:52:33,608 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 18:52:33,608 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:52:33,608 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:52:33,608 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:52:33,608 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:52:33,608 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:52:33,608 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:52:33,608 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:52:33,608 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:33,608 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:52:33,750 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:52:33,750 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:52:33,750 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:33,750 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:33,750 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:33,750 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:52:33,877 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:52:33,877 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:33,877 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:33,877 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:52:34,008 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:52:34,008 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:34,008 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:34,008 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:52:34,138 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:52:34,138 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:34,138 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:34,138 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:52:34,268 DEBUG sendRcv: received response: (b'840', 1)
2020-10-20 18:52:34,268 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:34,268 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:52:34,268 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:52:34,398 DEBUG sendRcv: received response: (b'830', 1)
2020-10-20 18:52:34,398 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:52:34,398 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0224425680497113, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:53:19,400 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:19,400 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:19,400 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:53:19,527 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 18:53:19,527 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:53:19,527 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:53:19,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:53:19,527 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:53:19,527 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:53:19,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:53:19,528 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:53:19,528 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:19,528 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:53:19,669 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:53:19,669 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:53:19,669 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:19,669 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:19,669 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:19,669 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:53:19,801 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:53:19,801 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:19,801 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:19,801 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:53:19,932 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:53:19,932 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:19,932 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:19,932 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:53:20,061 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:53:20,061 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:20,061 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:20,061 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:53:20,191 DEBUG sendRcv: received response: (b'722', 1)
2020-10-20 18:53:20,191 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:20,191 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:20,191 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:53:20,321 DEBUG sendRcv: received response: (b'711', 1)
2020-10-20 18:53:20,322 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:20,322 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.0176255590775434, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:53:50,325 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:50,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:50,356 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:53:50,482 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 18:53:50,551 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:53:50,551 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:53:50,551 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:53:50,551 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:53:50,551 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:53:50,551 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:53:50,551 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:53:50,551 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:50,552 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:53:50,693 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:53:50,746 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:53:50,746 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:50,746 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:50,747 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:50,747 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:53:50,877 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:53:50,919 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:50,919 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:50,919 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:53:51,047 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:53:51,145 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:51,146 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:51,146 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:53:51,278 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:53:51,318 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:51,318 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:51,318 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:53:51,446 DEBUG sendRcv: received response: (b'580', 1)
2020-10-20 18:53:51,533 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:51,533 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:53:51,533 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:53:51,661 DEBUG sendRcv: received response: (b'562', 1)
2020-10-20 18:53:51,723 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:53:51,724 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 0.6392152197220746, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:54:36,726 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:36,787 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:36,787 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:54:36,915 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 18:54:36,916 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:54:36,917 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:54:36,917 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:54:36,917 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:54:36,917 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:54:36,917 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:54:36,917 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:54:36,917 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:36,917 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:54:37,057 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:54:37,065 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:54:37,065 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:37,065 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:37,065 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:37,065 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:54:37,195 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:54:37,237 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:37,237 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:37,237 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:54:37,366 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:54:37,422 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:37,422 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:37,422 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:54:37,551 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:54:37,643 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:37,643 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:37,643 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:54:37,775 DEBUG sendRcv: received response: (b'464', 1)
2020-10-20 18:54:37,814 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:37,814 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:54:37,814 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:54:37,946 DEBUG sendRcv: received response: (b'449', 1)
2020-10-20 18:54:38,036 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:54:38,036 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 0.6924962885239545, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:55:08,038 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:08,104 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:08,104 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:55:08,231 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 18:55:08,309 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:55:08,309 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:55:08,310 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:55:08,310 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:55:08,310 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:55:08,310 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:55:08,310 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:55:08,310 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:08,310 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:55:08,454 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:55:08,474 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:55:08,474 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:08,474 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:08,474 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:08,474 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:55:08,605 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:55:08,656 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:08,656 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:08,656 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:55:08,787 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:55:08,837 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:08,837 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:08,838 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:55:08,966 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:55:09,036 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:09,036 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:09,037 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:55:09,166 DEBUG sendRcv: received response: (b'344', 1)
2020-10-20 18:55:09,293 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:09,294 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:09,294 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:55:09,421 DEBUG sendRcv: received response: (b'322', 1)
2020-10-20 18:55:09,561 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:09,562 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 0.5601446516373578, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:55:54,566 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:54,624 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:54,624 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:55:54,754 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 18:55:54,819 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:55:54,819 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:55:54,819 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:55:54,819 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:55:54,819 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:55:54,819 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:55:54,819 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:55:54,819 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:54,819 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:55:54,961 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:55:55,024 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:55:55,024 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:55,024 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:55,024 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:55,024 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:55:55,155 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:55:55,276 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:55,276 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:55,276 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:55:55,405 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:55:55,477 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:55,478 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:55,478 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:55:55,609 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:55:55,695 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:55,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:55,696 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:55:55,825 DEBUG sendRcv: received response: (b'211', 1)
2020-10-20 18:55:55,884 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:55,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:55:55,884 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:55:56,014 DEBUG sendRcv: received response: (b'195', 1)
2020-10-20 18:55:56,015 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:55:56,015 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 0.6159670240738813, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:56:41,019 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:41,042 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:41,043 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:56:41,171 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 18:56:41,224 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 10}
2020-10-20 18:56:41,224 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:56:41,224 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:56:41,225 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'abs_position': 2000}
2020-10-20 18:56:41,225 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:56:41,225 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:56:41,225 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:41,225 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 18:56:41,369 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:56:41,397 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:56:41,397 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:41,397 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:41,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:41,397 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:56:41,528 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:56:41,567 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:41,567 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:41,568 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:56:41,698 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 18:56:41,765 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:41,765 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:41,765 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:56:41,898 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:56:41,958 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:41,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:41,958 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:56:42,086 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 18:56:42,140 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:42,141 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:42,141 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:56:42,267 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 18:56:42,301 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:42,301 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 1.417245555986677, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:56:52,301 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:52,318 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:52,319 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:56:52,447 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:56:52,496 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'speed_code': 20}
2020-10-20 18:56:52,496 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:56:52,496 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'I'}
2020-10-20 18:56:52,496 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'rel_position': -120}
2020-10-20 18:56:52,496 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'delay_ms': 1000}
2020-10-20 18:56:52,496 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'to_port': 'O'}
2020-10-20 18:56:52,496 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'minimal_reset': False}
2020-10-20 18:56:52,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:52,497 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:56:52,638 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:56:52,689 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:56:52,690 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:52,690 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:52,690 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:52,690 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:56:52,821 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:56:52,882 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:52,883 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:52,883 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:56:53,011 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:56:53,013 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:53,013 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:53,013 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:56:53,140 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:56:53,187 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:53,187 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:53,193 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:56:53,322 DEBUG sendRcv: received response: (b'2026', 1)
2020-10-20 18:56:53,386 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:53,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:56:53,386 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:56:53,517 DEBUG sendRcv: received response: (b'2010', 1)
2020-10-20 18:56:53,553 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:56:53,553 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'timeout': 0.7550301439621869, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:57:08,556 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>}
2020-10-20 18:57:08,556 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002162D316640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:08,556 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:57:08,860 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:57:36,416 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on': False}
2020-10-20 18:57:36,417 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:36,417 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 18:57:36,547 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:57:36,547 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:36,547 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:36,547 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:36,547 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:57:36,675 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:57:36,675 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:36,675 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:36,675 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:57:36,805 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:57:36,805 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:36,805 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:36,805 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:57:36,935 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:57:36,935 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:36,935 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:36,935 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:57:37,066 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 18:57:37,066 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:37,066 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 18:57:37,066 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:37,066 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 18:57:37,192 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:57:37,192 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:57:50,520 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 12}
2020-10-20 18:57:50,520 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 10}
2020-10-20 18:57:50,520 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 18:57:50,520 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 18:57:50,521 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'abs_position': 2000}
2020-10-20 18:57:50,521 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 18:57:50,521 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 18:57:50,521 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:50,521 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 18:57:50,668 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:57:50,668 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:57:50,668 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:50,668 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:50,668 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:50,668 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:57:50,798 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:57:50,798 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:50,798 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:50,798 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:57:50,928 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 18:57:50,928 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:50,928 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:50,928 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:57:51,059 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 18:57:51,059 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:51,059 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:51,059 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:57:51,186 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:57:51,186 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:51,186 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:57:51,186 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:57:51,312 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 18:57:51,312 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:57:51,312 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:58:01,312 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:01,312 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:01,312 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:58:01,442 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:58:16,444 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:16,444 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:16,444 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:58:16,576 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 18:58:16,576 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 18:58:16,576 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:58:16,576 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 18:58:16,576 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 18:58:16,576 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 18:58:16,576 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 18:58:16,576 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 18:58:16,576 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:16,576 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:58:16,716 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:58:16,716 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:58:16,716 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:16,716 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:16,716 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:16,716 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:58:16,848 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:58:16,848 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:16,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:16,848 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:58:16,979 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:58:16,979 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:16,979 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:16,979 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:58:17,109 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:58:17,109 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:17,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:17,109 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:58:17,240 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-20 18:58:17,240 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:17,240 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:17,240 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:58:17,370 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 18:58:17,370 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:17,370 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.017598856196684, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:58:47,372 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:47,372 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:47,372 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:58:47,501 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 18:58:47,501 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 18:58:47,501 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:58:47,501 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 18:58:47,501 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 18:58:47,501 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 18:58:47,501 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 18:58:47,501 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 18:58:47,501 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:47,501 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:58:47,642 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:58:47,642 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:58:47,642 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:47,642 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:47,642 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:47,642 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:58:47,775 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:58:47,775 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:47,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:47,775 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:58:47,905 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:58:47,905 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:47,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:47,905 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:58:48,034 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:58:48,034 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:48,034 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:48,034 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:58:48,166 DEBUG sendRcv: received response: (b'1920', 1)
2020-10-20 18:58:48,166 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:48,166 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:58:48,166 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:58:48,297 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 18:58:48,297 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:58:48,297 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0161051637986127, 'polling_interval': 0.3, 'delay': None}
2020-10-20 18:59:18,300 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:18,300 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:18,300 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:59:18,431 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 18:59:18,431 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 18:59:18,431 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 18:59:18,431 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 18:59:18,431 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 18:59:18,431 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 18:59:18,431 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 18:59:18,431 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 18:59:18,431 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:18,431 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 18:59:18,573 DEBUG sendRcv: received response: (None, 0)
2020-10-20 18:59:18,573 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 18:59:18,573 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:18,573 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:18,573 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:18,573 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 18:59:18,705 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:59:18,705 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:18,705 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:18,705 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 18:59:18,837 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:59:18,837 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:18,837 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:18,837 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 18:59:18,965 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 18:59:18,965 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:18,965 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:18,965 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 18:59:19,096 DEBUG sendRcv: received response: (b'1800', 1)
2020-10-20 18:59:19,096 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:19,096 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 18:59:19,096 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 18:59:19,226 DEBUG sendRcv: received response: (b'1789', 1)
2020-10-20 18:59:19,226 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 18:59:19,226 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0169951803543988, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:00:04,230 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:04,230 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:04,230 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:00:04,359 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 19:00:04,359 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:00:04,359 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:00:04,359 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:00:04,359 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:00:04,359 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:00:04,359 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:00:04,359 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:00:04,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:04,359 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:00:04,500 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:00:04,500 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:00:04,500 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:04,500 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:04,500 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:04,500 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:00:04,629 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:00:04,629 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:04,629 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:04,629 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:00:04,759 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:00:04,759 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:04,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:04,759 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:00:04,888 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:00:04,888 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:04,888 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:04,888 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:00:05,020 DEBUG sendRcv: received response: (b'1681', 1)
2020-10-20 19:00:05,020 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:05,020 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:05,020 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:00:05,150 DEBUG sendRcv: received response: (b'1670', 1)
2020-10-20 19:00:05,150 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:05,150 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0209343321183149, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:00:35,152 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,152 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,152 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:00:35,280 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 19:00:35,280 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:00:35,280 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:00:35,280 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:00:35,280 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:00:35,280 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:00:35,280 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:00:35,280 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:00:35,280 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,280 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:00:35,421 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:00:35,421 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:00:35,421 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,421 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,421 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,421 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:00:35,549 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:00:35,549 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,549 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,549 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:00:35,679 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:00:35,679 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,679 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,679 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:00:35,810 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:00:35,810 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,810 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:00:35,940 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 19:00:35,940 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:35,940 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:00:35,940 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:00:36,070 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 19:00:36,070 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:00:36,070 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0218725092270795, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:01:21,074 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,074 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,074 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:01:21,203 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 19:01:21,203 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:01:21,203 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:01:21,203 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:01:21,203 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:01:21,203 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:01:21,203 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:01:21,203 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:01:21,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,203 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:01:21,345 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:01:21,345 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:01:21,345 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,345 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,345 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,345 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:01:21,478 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:01:21,478 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,478 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,478 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:01:21,608 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:01:21,608 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,608 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,608 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:01:21,737 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:01:21,737 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,737 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,737 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:01:21,869 DEBUG sendRcv: received response: (b'1440', 1)
2020-10-20 19:01:21,869 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,869 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:01:21,869 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:01:21,999 DEBUG sendRcv: received response: (b'1429', 1)
2020-10-20 19:01:21,999 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:01:21,999 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.015913236842436, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:02:07,001 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,001 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,001 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:02:07,132 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 19:02:07,132 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:02:07,132 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:02:07,132 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:02:07,132 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:02:07,133 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:02:07,133 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:02:07,133 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:02:07,133 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,133 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:02:07,274 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:02:07,274 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:02:07,274 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,274 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,274 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,274 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:02:07,406 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:02:07,406 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,406 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,406 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:02:07,536 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:02:07,536 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,536 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,536 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:02:07,666 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:02:07,666 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,666 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:02:07,798 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 19:02:07,798 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,798 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:07,798 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:02:07,928 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 19:02:07,928 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:07,928 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0172376520493451, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:02:37,930 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:37,930 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:37,930 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:02:38,057 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 19:02:38,057 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:02:38,057 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:02:38,057 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:02:38,057 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:02:38,057 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:02:38,058 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:02:38,058 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:02:38,058 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:38,058 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:02:38,199 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:02:38,199 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:02:38,199 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,199 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,199 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:38,199 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:02:38,331 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:02:38,331 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,331 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:38,331 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:02:38,462 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:02:38,462 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,462 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:38,462 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:02:38,592 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:02:38,592 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,592 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:38,592 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:02:38,722 DEBUG sendRcv: received response: (b'1200', 1)
2020-10-20 19:02:38,722 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,722 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:02:38,722 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:02:38,854 DEBUG sendRcv: received response: (b'1189', 1)
2020-10-20 19:02:38,854 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:02:38,854 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.01612709830789, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:03:23,858 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:23,858 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:23,858 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:03:23,986 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 19:03:23,986 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:03:23,986 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:03:23,986 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:03:23,986 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:03:23,986 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:03:23,986 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:03:23,986 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:03:23,986 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:23,986 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:03:24,127 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:03:24,127 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:03:24,127 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,127 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,127 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:24,127 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:03:24,256 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:03:24,256 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,256 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:24,256 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:03:24,385 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:03:24,385 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,385 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:24,385 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:03:24,515 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:03:24,515 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,515 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:24,515 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:03:24,646 DEBUG sendRcv: received response: (b'1081', 1)
2020-10-20 19:03:24,646 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,646 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:03:24,646 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:03:24,775 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-20 19:03:24,775 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:03:24,775 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0219867117264692, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:04:09,778 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:09,778 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:09,778 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:04:09,909 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 19:04:09,909 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:04:09,909 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:04:09,909 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:04:09,909 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:04:09,909 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:04:09,909 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:04:09,909 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:04:09,909 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:09,909 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:04:10,050 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:04:10,050 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:04:10,050 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,050 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,050 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:10,050 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:04:10,179 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:04:10,179 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,179 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:10,179 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:04:10,309 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:04:10,309 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,309 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:10,309 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:04:10,440 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:04:10,440 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,440 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:10,440 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:04:10,568 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 19:04:10,568 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,568 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:10,568 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:04:10,698 DEBUG sendRcv: received response: (b'950', 1)
2020-10-20 19:04:10,698 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:10,698 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0228235609391156, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:04:40,700 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:40,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:40,700 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:04:40,830 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 19:04:40,830 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:04:40,830 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:04:40,830 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:04:40,830 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:04:40,830 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:04:40,830 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:04:40,830 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:04:40,830 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:40,830 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:04:40,971 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:04:40,971 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:04:40,971 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:40,971 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:40,971 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:40,971 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:04:41,100 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:04:41,100 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:41,100 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:41,100 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:04:41,230 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:04:41,230 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:41,230 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:41,230 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:04:41,359 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:04:41,359 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:41,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:41,359 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:04:41,489 DEBUG sendRcv: received response: (b'841', 1)
2020-10-20 19:04:41,489 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:41,489 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:04:41,489 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:04:41,619 DEBUG sendRcv: received response: (b'830', 1)
2020-10-20 19:04:41,619 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:04:41,619 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.022974479899687, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:05:26,623 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:26,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:26,623 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:05:26,753 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 19:05:26,753 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:05:26,753 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:05:26,754 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:05:26,754 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:05:26,754 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:05:26,754 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:05:26,754 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:05:26,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:26,754 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:05:26,894 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:05:26,894 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:05:26,894 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:26,894 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:26,894 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:26,894 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:05:27,023 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:05:27,023 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:27,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:27,023 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:05:27,152 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:05:27,152 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:27,152 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:27,152 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:05:27,283 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:05:27,283 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:27,283 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:27,283 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:05:27,413 DEBUG sendRcv: received response: (b'721', 1)
2020-10-20 19:05:27,413 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:27,413 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:27,413 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:05:27,543 DEBUG sendRcv: received response: (b'710', 1)
2020-10-20 19:05:27,543 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:27,543 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0222644693711225, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:05:57,546 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:57,546 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:57,546 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:05:57,674 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 19:05:57,674 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:05:57,674 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:05:57,674 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:05:57,674 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:05:57,674 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:05:57,674 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:05:57,675 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:05:57,675 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:57,675 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:05:57,815 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:05:57,815 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:05:57,815 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:57,815 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:57,815 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:57,815 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:05:57,942 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:05:57,942 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:57,942 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:57,942 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:05:58,073 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:05:58,073 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:58,073 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:58,073 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:05:58,204 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:05:58,204 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:58,204 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:58,204 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:05:58,333 DEBUG sendRcv: received response: (b'601', 1)
2020-10-20 19:05:58,333 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:58,333 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:05:58,333 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:05:58,464 DEBUG sendRcv: received response: (b'590', 1)
2020-10-20 19:05:58,464 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:05:58,464 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0221588499405805, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:06:43,467 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:43,467 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:43,467 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:06:43,597 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 19:06:43,597 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:06:43,597 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:06:43,597 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:06:43,597 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:06:43,597 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:06:43,597 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:06:43,597 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:06:43,597 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:43,597 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:06:43,739 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:06:43,739 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:06:43,739 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:43,739 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:43,739 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:43,739 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:06:43,867 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:06:43,867 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:43,867 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:43,867 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:06:43,996 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:06:43,996 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:43,996 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:43,996 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:06:44,126 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:06:44,126 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:44,126 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:44,126 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:06:44,257 DEBUG sendRcv: received response: (b'481', 1)
2020-10-20 19:06:44,257 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:44,257 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:06:44,257 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:06:44,387 DEBUG sendRcv: received response: (b'470', 1)
2020-10-20 19:06:44,387 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:06:44,387 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0225229151108686, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:07:29,390 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:29,390 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:29,390 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:07:29,520 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 19:07:29,520 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:07:29,520 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:07:29,520 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:07:29,521 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:07:29,521 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:07:29,521 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:07:29,521 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:07:29,521 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:29,521 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:07:29,662 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:07:29,662 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:07:29,662 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:29,662 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:29,662 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:29,662 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:07:29,790 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:07:29,790 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:29,790 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:29,790 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:07:29,921 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:07:29,921 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:29,921 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:29,921 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:07:30,050 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:07:30,050 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:30,050 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:30,050 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:07:30,180 DEBUG sendRcv: received response: (b'360', 1)
2020-10-20 19:07:30,180 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:30,180 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:07:30,180 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:07:30,310 DEBUG sendRcv: received response: (b'350', 1)
2020-10-20 19:07:30,310 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:07:30,310 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0222837812760297, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:08:00,313 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:00,313 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:00,313 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:08:00,440 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 19:08:00,440 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:08:00,440 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:08:00,440 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:08:00,440 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:08:00,440 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:08:00,440 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:08:00,440 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:08:00,440 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:00,440 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:08:00,583 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:08:00,583 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:08:00,583 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:00,583 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:00,583 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:00,583 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:08:00,711 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:08:00,711 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:00,711 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:00,711 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:08:00,841 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:08:00,841 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:00,841 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:00,841 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:08:00,971 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:08:00,971 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:00,971 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:00,971 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:08:01,101 DEBUG sendRcv: received response: (b'240', 1)
2020-10-20 19:08:01,101 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:01,101 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:01,101 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:08:01,230 DEBUG sendRcv: received response: (b'229', 1)
2020-10-20 19:08:01,230 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:01,230 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0218796617844526, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:08:46,233 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:46,233 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:46,233 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:08:46,364 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:08:46,364 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 10}
2020-10-20 19:08:46,364 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:08:46,364 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:08:46,364 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'abs_position': 2000}
2020-10-20 19:08:46,364 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:08:46,365 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:08:46,365 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:46,365 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 19:08:46,511 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:08:46,511 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:08:46,511 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:46,511 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:46,511 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:46,511 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:08:46,644 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:08:46,644 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:46,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:46,644 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:08:46,776 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 19:08:46,776 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:46,776 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:46,777 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:08:46,910 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:08:46,910 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:46,910 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:46,910 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:08:47,038 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:08:47,038 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:47,038 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:47,038 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:08:47,168 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:08:47,168 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:47,168 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.6474089108603343, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:08:57,168 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,168 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,168 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:08:57,299 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 19:08:57,299 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:08:57,299 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:08:57,299 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:08:57,299 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:08:57,299 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:08:57,299 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:08:57,299 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:08:57,299 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,299 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:08:57,440 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:08:57,440 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:08:57,440 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,440 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,440 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,440 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:08:57,568 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:08:57,568 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,568 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,568 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:08:57,697 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:08:57,697 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,697 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,697 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:08:57,827 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:08:57,827 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,827 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,827 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:08:57,958 DEBUG sendRcv: received response: (b'2042', 1)
2020-10-20 19:08:57,958 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:57,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:08:57,958 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:08:58,089 DEBUG sendRcv: received response: (b'2031', 1)
2020-10-20 19:08:58,089 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:08:58,089 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0220422632553998, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:09:28,092 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,092 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,092 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:09:28,225 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 19:09:28,225 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:09:28,225 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:09:28,225 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:09:28,225 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:09:28,225 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:09:28,225 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:09:28,226 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:09:28,226 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,226 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:09:28,365 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:09:28,365 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:09:28,365 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,365 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,365 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,365 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:09:28,494 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:09:28,494 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,494 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,494 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:09:28,624 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:09:28,624 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,624 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,625 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:09:28,754 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:09:28,754 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,754 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,754 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:09:28,884 DEBUG sendRcv: received response: (b'1921', 1)
2020-10-20 19:09:28,884 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:28,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:28,884 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:09:29,014 DEBUG sendRcv: received response: (b'1910', 1)
2020-10-20 19:09:29,014 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:29,014 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0232663042405072, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:09:59,016 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,016 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,016 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:09:59,145 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 19:09:59,145 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:09:59,145 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:09:59,145 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:09:59,145 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:09:59,146 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:09:59,146 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:09:59,146 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:09:59,146 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,146 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:09:59,286 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:09:59,286 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:09:59,287 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,287 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,287 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,287 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:09:59,419 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:09:59,419 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,419 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:09:59,549 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:09:59,549 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,549 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,549 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:09:59,679 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:09:59,679 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,679 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,679 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:09:59,810 DEBUG sendRcv: received response: (b'1800', 1)
2020-10-20 19:09:59,810 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:09:59,810 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:09:59,941 DEBUG sendRcv: received response: (b'1789', 1)
2020-10-20 19:09:59,941 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:09:59,941 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0170926935532514, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:10:44,944 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:44,944 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:44,944 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:10:45,074 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 19:10:45,074 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:10:45,074 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:10:45,074 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:10:45,074 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:10:45,074 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:10:45,074 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:10:45,074 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:10:45,074 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:45,074 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:10:45,405 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:10:45,405 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:10:45,405 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:45,405 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:45,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:45,405 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:10:45,537 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:10:45,537 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:45,537 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:45,537 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:10:45,666 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:10:45,666 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:45,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:45,666 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:10:45,796 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:10:45,796 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:45,796 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:45,797 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:10:45,928 DEBUG sendRcv: received response: (b'1664', 1)
2020-10-20 19:10:45,928 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:45,928 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:10:45,928 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:10:46,058 DEBUG sendRcv: received response: (b'1653', 1)
2020-10-20 19:10:46,058 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:10:46,058 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 0.8273343927720014, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:11:16,060 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,060 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,060 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:11:16,199 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 19:11:16,199 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:11:16,199 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:11:16,199 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:11:16,199 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:11:16,199 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:11:16,200 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:11:16,200 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:11:16,200 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,200 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:11:16,340 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:11:16,340 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:11:16,340 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,340 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,340 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:11:16,473 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:11:16,473 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,473 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,473 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:11:16,603 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:11:16,603 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,603 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,603 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:11:16,733 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:11:16,733 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,733 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,733 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:11:16,864 DEBUG sendRcv: received response: (b'1560', 1)
2020-10-20 19:11:16,864 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,864 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:11:16,864 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:11:16,994 DEBUG sendRcv: received response: (b'1549', 1)
2020-10-20 19:11:16,994 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:11:16,994 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0178582556107465, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:12:01,997 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:01,997 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:01,997 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:12:02,129 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 19:12:02,129 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:12:02,129 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:12:02,129 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:12:02,129 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:12:02,129 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:12:02,129 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:12:02,129 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:12:02,129 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:02,129 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:12:02,268 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:12:02,268 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:12:02,268 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,268 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,268 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:02,268 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:12:02,396 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:12:02,396 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,396 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:02,396 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:12:02,526 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:12:02,526 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,526 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:02,526 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:12:02,657 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:12:02,657 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,657 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:02,657 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:12:02,787 DEBUG sendRcv: received response: (b'1442', 1)
2020-10-20 19:12:02,787 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,787 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:02,787 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:12:02,918 DEBUG sendRcv: received response: (b'1431', 1)
2020-10-20 19:12:02,918 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:02,918 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0234966165879194, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:12:47,919 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:47,919 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:47,919 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:12:48,051 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 19:12:48,051 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:12:48,051 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:12:48,051 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:12:48,051 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:12:48,051 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:12:48,051 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:12:48,051 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:12:48,051 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:48,051 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:12:48,191 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:12:48,191 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:12:48,191 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,191 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,191 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:48,191 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:12:48,320 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:12:48,320 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,320 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:48,320 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:12:48,450 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:12:48,450 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,451 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:48,451 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:12:48,580 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:12:48,580 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,580 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:48,580 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:12:48,711 DEBUG sendRcv: received response: (b'1321', 1)
2020-10-20 19:12:48,711 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,711 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:12:48,711 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:12:48,840 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 19:12:48,840 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:12:48,840 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0223731882431928, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:13:18,842 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:18,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:18,842 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:13:18,971 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 19:13:18,971 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'speed_code': 20}
2020-10-20 19:13:18,971 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:13:18,971 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'I'}
2020-10-20 19:13:18,971 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'rel_position': -120}
2020-10-20 19:13:18,971 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'delay_ms': 1000}
2020-10-20 19:13:18,971 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'to_port': 'O'}
2020-10-20 19:13:18,971 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'minimal_reset': False}
2020-10-20 19:13:18,971 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:18,971 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:13:19,111 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:13:19,111 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:13:19,111 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,111 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,112 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:19,112 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:13:19,241 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:13:19,241 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,241 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:19,241 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:13:19,370 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:13:19,370 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,370 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:19,370 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:13:19,500 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:13:19,500 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,500 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:19,500 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:13:19,631 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 19:13:19,631 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,631 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:13:19,631 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:13:19,762 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-20 19:13:19,762 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:13:19,762 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'timeout': 1.0215175039627973, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:14:04,766 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>}
2020-10-20 19:14:04,766 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000021DB8A66640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:14:04,766 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:14:05,070 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:24:44,104 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on': False}
2020-10-20 19:24:44,104 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:44,104 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 19:24:44,231 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:24:44,231 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:44,232 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:44,232 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:44,232 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:24:44,363 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:24:44,363 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:44,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:44,363 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:24:44,494 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:24:44,494 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:44,494 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:44,494 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:24:44,624 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:24:44,624 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:44,624 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:44,624 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:24:44,755 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 19:24:44,755 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:44,756 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 19:24:44,756 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:44,756 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 19:24:44,886 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:24:44,886 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:24:54,810 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 12}
2020-10-20 19:24:54,810 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 10}
2020-10-20 19:24:54,810 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:24:54,811 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:24:54,811 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'abs_position': 2000}
2020-10-20 19:24:54,811 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:24:54,811 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:24:54,811 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:54,811 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 19:24:54,959 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:24:54,959 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:24:54,960 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:54,960 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:54,960 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:54,961 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:24:55,092 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:24:55,092 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:55,092 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:55,092 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:24:55,223 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 19:24:55,223 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:55,223 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:55,223 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:24:55,353 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:24:55,353 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:55,353 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:55,353 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:24:55,481 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 19:24:55,481 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:55,481 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:24:55,481 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:24:55,610 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 19:24:55,610 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:24:55,610 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 0.6380787144797189, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:25:05,611 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:05,611 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:05,611 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:25:05,742 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 19:25:20,742 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:20,742 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:20,742 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:25:20,869 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 19:25:20,869 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:25:20,869 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:25:20,869 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:25:20,869 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:25:20,869 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:25:20,869 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:25:20,869 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:25:20,869 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:20,869 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:25:21,011 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:25:21,011 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:25:21,011 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,011 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,011 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:21,011 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:25:21,144 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:25:21,144 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,144 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:21,144 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:25:21,274 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:25:21,274 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,274 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:21,274 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:25:21,404 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:25:21,404 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,404 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:21,404 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:25:21,535 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 19:25:21,535 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,535 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:21,535 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:25:21,666 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-20 19:25:21,666 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:21,666 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.014807689891142, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:25:51,669 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:51,669 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:51,669 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:25:51,800 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 19:25:51,800 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:25:51,800 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:25:51,800 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:25:51,800 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:25:51,800 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:25:51,800 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:25:51,801 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:25:51,801 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:51,801 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:25:51,941 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:25:51,941 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:25:51,941 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:51,941 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:51,941 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:51,941 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:25:52,069 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:25:52,069 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:52,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:52,069 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:25:52,200 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:25:52,200 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:52,200 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:52,200 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:25:52,330 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:25:52,330 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:52,332 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:52,333 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:25:52,465 DEBUG sendRcv: received response: (b'1920', 1)
2020-10-20 19:25:52,465 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:52,465 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:25:52,466 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:25:52,595 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 19:25:52,595 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:25:52,595 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0177028066971723, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:26:22,596 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:22,596 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:22,596 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:26:22,726 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 19:26:22,726 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:26:22,726 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:26:22,726 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:26:22,726 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:26:22,726 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:26:22,726 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:26:22,726 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:26:22,726 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:22,726 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:26:22,865 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:26:22,865 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:26:22,865 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:22,865 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:22,865 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:22,866 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:26:22,995 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:26:22,995 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:22,995 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:22,995 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:26:23,125 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:26:23,125 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:23,125 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:23,125 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:26:23,255 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:26:23,255 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:23,255 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:23,255 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:26:23,385 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-20 19:26:23,385 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:23,385 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:26:23,385 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:26:23,516 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-20 19:26:23,516 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:26:23,516 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0224265940049115, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:27:08,520 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:08,520 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:08,520 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:27:08,649 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 19:27:08,649 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:27:08,649 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:27:08,649 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:27:08,649 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:27:08,649 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:27:08,649 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:27:08,649 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:27:08,649 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:08,650 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:27:08,789 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:27:08,789 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:27:08,789 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:08,789 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:08,789 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:08,789 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:27:08,918 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:27:08,918 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:08,918 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:08,918 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:27:09,048 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:27:09,048 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:09,048 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:09,048 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:27:09,177 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:27:09,177 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:09,177 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:09,177 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:27:09,309 DEBUG sendRcv: received response: (b'1681', 1)
2020-10-20 19:27:09,309 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:09,310 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:09,310 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:27:09,438 DEBUG sendRcv: received response: (b'1669', 1)
2020-10-20 19:27:09,438 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:09,438 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0221161730149213, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:27:39,441 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:39,441 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:39,441 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:27:39,570 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 19:27:39,570 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:27:39,570 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:27:39,570 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:27:39,570 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:27:39,570 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:27:39,571 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:27:39,571 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:27:39,571 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:39,571 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:27:39,710 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:27:39,710 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:27:39,710 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:39,710 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:39,710 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:39,710 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:27:39,843 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:27:39,843 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:39,843 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:39,843 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:27:39,973 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:27:39,973 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:39,973 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:39,973 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:27:40,103 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:27:40,103 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:40,103 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:40,103 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:27:40,233 DEBUG sendRcv: received response: (b'1560', 1)
2020-10-20 19:27:40,233 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:40,233 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:27:40,233 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:27:40,363 DEBUG sendRcv: received response: (b'1549', 1)
2020-10-20 19:27:40,363 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:27:40,363 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0190446264603559, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:28:25,368 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:25,368 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:25,368 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:28:25,498 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 19:28:25,498 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:28:25,498 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:28:25,498 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:28:25,498 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:28:25,498 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:28:25,498 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:28:25,498 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:28:25,498 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:25,498 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:28:25,639 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:28:25,639 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:28:25,639 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:25,639 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:25,639 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:25,639 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:28:25,772 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:28:25,772 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:25,772 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:25,772 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:28:25,901 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:28:25,901 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:25,901 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:25,901 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:28:26,032 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:28:26,032 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:26,032 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:26,032 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:28:26,161 DEBUG sendRcv: received response: (b'1441', 1)
2020-10-20 19:28:26,161 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:26,162 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:28:26,162 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:28:26,293 DEBUG sendRcv: received response: (b'1430', 1)
2020-10-20 19:28:26,293 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:28:26,293 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0162031538346235, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:29:11,298 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:11,298 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:11,298 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:29:11,425 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 19:29:11,425 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:29:11,425 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:29:11,425 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:29:11,425 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:29:11,425 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:29:11,425 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:29:11,426 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:29:11,426 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:11,426 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:29:11,566 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:29:11,566 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:29:11,566 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:11,567 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:11,568 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:11,568 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:29:11,700 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:29:11,700 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:11,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:11,700 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:29:11,829 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:29:11,829 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:11,829 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:11,830 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:29:11,959 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:29:11,959 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:11,959 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:11,959 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:29:12,091 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 19:29:12,091 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:12,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:12,091 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:29:12,221 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 19:29:12,221 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:12,221 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0164422876694623, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:29:42,223 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:42,223 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:42,223 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:29:42,351 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 19:29:42,351 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:29:42,351 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:29:42,351 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:29:42,351 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:29:42,351 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:29:42,351 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:29:42,352 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:29:42,352 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:42,352 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:29:42,492 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:29:42,492 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:29:42,492 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:42,492 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:42,492 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:42,493 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:29:42,624 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:29:42,624 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:42,624 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:42,624 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:29:42,756 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:29:42,756 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:42,756 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:42,756 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:29:42,885 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:29:42,885 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:42,885 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:42,885 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:29:43,016 DEBUG sendRcv: received response: (b'1200', 1)
2020-10-20 19:29:43,016 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:43,016 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:29:43,016 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:29:43,147 DEBUG sendRcv: received response: (b'1189', 1)
2020-10-20 19:29:43,147 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:29:43,147 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0167360193589154, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:30:28,151 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,151 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,151 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:30:28,279 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 19:30:28,279 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:30:28,279 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:30:28,279 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:30:28,279 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:30:28,279 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:30:28,279 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:30:28,279 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:30:28,279 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,279 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:30:28,420 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:30:28,420 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:30:28,420 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,420 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,420 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:30:28,549 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:30:28,549 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,549 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,549 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:30:28,678 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:30:28,678 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,678 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,678 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:30:28,809 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:30:28,809 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,810 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,810 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:30:28,939 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-20 19:30:28,939 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:28,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:28,939 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:30:29,070 DEBUG sendRcv: received response: (b'1070', 1)
2020-10-20 19:30:29,070 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:29,070 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0209562666275922, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:30:59,071 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,071 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,072 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:30:59,203 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 19:30:59,203 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:30:59,203 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:30:59,203 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:30:59,203 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:30:59,203 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:30:59,203 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:30:59,203 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:30:59,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,203 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:30:59,347 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:30:59,347 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:30:59,347 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,348 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,348 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,348 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:30:59,479 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:30:59,479 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,479 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,479 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:30:59,609 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:30:59,609 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,609 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,609 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:30:59,738 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:30:59,738 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,738 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,738 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:30:59,868 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 19:30:59,868 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,868 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:30:59,868 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:30:59,999 DEBUG sendRcv: received response: (b'949', 1)
2020-10-20 19:30:59,999 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:30:59,999 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0161754972794477, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:31:45,002 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,002 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:31:45,132 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 19:31:45,132 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:31:45,132 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:31:45,132 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:31:45,132 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:31:45,132 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:31:45,132 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:31:45,132 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:31:45,132 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,133 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:31:45,273 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:31:45,273 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:31:45,273 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,273 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,273 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,273 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:31:45,402 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:31:45,402 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,402 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,402 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:31:45,533 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:31:45,533 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,533 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,533 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:31:45,662 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:31:45,662 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,663 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,663 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:31:45,793 DEBUG sendRcv: received response: (b'842', 1)
2020-10-20 19:31:45,793 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,793 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:31:45,793 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:31:45,921 DEBUG sendRcv: received response: (b'831', 1)
2020-10-20 19:31:45,921 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:31:45,921 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0225970632889692, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:32:30,924 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:30,924 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:30,924 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:32:31,050 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 19:32:31,050 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:32:31,050 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:32:31,050 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:32:31,050 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:32:31,050 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:32:31,050 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:32:31,050 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:32:31,050 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:31,050 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:32:31,193 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:32:31,193 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:32:31,193 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,193 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,193 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:31,193 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:32:31,324 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:32:31,324 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,324 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:31,325 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:32:31,456 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:32:31,456 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,456 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:31,456 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:32:31,586 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:32:31,586 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,586 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:31,586 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:32:31,717 DEBUG sendRcv: received response: (b'720', 1)
2020-10-20 19:32:31,717 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,717 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:32:31,717 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:32:31,847 DEBUG sendRcv: received response: (b'709', 1)
2020-10-20 19:32:31,847 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:32:31,847 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0150270349839154, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:33:01,848 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:01,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:01,848 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:33:01,975 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 19:33:01,975 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:33:01,975 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:33:01,975 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:33:01,975 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:33:01,975 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:33:01,975 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:33:01,975 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:33:01,975 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:01,975 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:33:02,119 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:33:02,119 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:33:02,119 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,119 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,119 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:02,119 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:33:02,250 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:33:02,250 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,250 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:02,250 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:33:02,381 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:33:02,381 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,381 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:02,381 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:33:02,512 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:33:02,512 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:02,512 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:33:02,641 DEBUG sendRcv: received response: (b'600', 1)
2020-10-20 19:33:02,641 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,641 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:02,641 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:33:02,771 DEBUG sendRcv: received response: (b'589', 1)
2020-10-20 19:33:02,771 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:02,771 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.016141165004057, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:33:47,776 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:47,776 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:47,776 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:33:47,904 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 19:33:47,904 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:33:47,904 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:33:47,904 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:33:47,904 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:33:47,904 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:33:47,904 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:33:47,904 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:33:47,904 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:47,904 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:33:48,046 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:33:48,046 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:33:48,046 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,046 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,046 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:48,046 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:33:48,179 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:33:48,179 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,180 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:48,180 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:33:48,314 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:33:48,314 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,314 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:48,315 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:33:48,443 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:33:48,443 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,443 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:48,443 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:33:48,583 DEBUG sendRcv: received response: (b'479', 1)
2020-10-20 19:33:48,583 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,583 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:33:48,583 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:33:48,714 DEBUG sendRcv: received response: (b'468', 1)
2020-10-20 19:33:48,714 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:33:48,714 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0017688162186567, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:34:33,718 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:33,718 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:33,718 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:34:33,847 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 19:34:33,847 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:34:33,847 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:34:33,847 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:34:33,847 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:34:33,847 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:34:33,847 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:34:33,847 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:34:33,847 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:33,847 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:34:34,179 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:34:34,179 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:34:34,179 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,179 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,179 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:34,179 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:34:34,313 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:34:34,313 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,313 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:34,313 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:34:34,442 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:34:34,442 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:34,442 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:34:34,572 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:34:34,572 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,572 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:34,572 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:34:34,701 DEBUG sendRcv: received response: (b'344', 1)
2020-10-20 19:34:34,701 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,701 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:34:34,701 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:34:34,831 DEBUG sendRcv: received response: (b'333', 1)
2020-10-20 19:34:34,831 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:34:34,831 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 0.8285915739396039, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:35:04,833 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:04,833 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:04,833 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:35:04,962 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 19:35:04,962 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:35:04,962 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:35:04,962 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:35:04,962 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:35:04,962 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:35:04,962 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:35:04,962 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:35:04,962 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:04,962 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:35:05,105 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:35:05,105 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:35:05,105 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,105 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,105 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:05,105 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:35:05,238 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:35:05,238 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,238 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:05,238 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:35:05,367 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:35:05,367 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,368 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:05,368 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:35:05,497 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:35:05,497 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,497 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:05,497 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:35:05,629 DEBUG sendRcv: received response: (b'241', 1)
2020-10-20 19:35:05,629 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,629 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:05,629 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:35:05,757 DEBUG sendRcv: received response: (b'230', 1)
2020-10-20 19:35:05,757 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:05,758 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0158841497757856, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:35:50,761 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:50,761 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:50,761 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:35:50,890 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:35:50,890 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 10}
2020-10-20 19:35:50,890 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:35:50,890 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:35:50,890 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'abs_position': 2000}
2020-10-20 19:35:50,890 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:35:50,890 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:35:50,890 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:50,890 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 19:35:51,037 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:35:51,037 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:35:51,038 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,038 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,038 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:51,038 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:35:51,174 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:35:51,174 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,174 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:51,174 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:35:51,306 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 19:35:51,306 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,306 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:51,306 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:35:51,436 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:35:51,436 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:51,436 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:35:51,564 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:35:51,564 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:35:51,565 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:35:51,694 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:35:51,694 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:35:51,694 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.6446625958578927, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:36:01,696 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:01,696 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:01,696 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:36:01,825 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 19:36:01,825 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:36:01,825 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:36:01,825 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:36:01,825 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:36:01,825 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:36:01,825 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:36:01,825 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:36:01,825 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:01,825 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:36:01,966 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:36:01,966 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:36:01,966 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:01,966 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:01,966 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:01,966 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:36:02,099 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:36:02,099 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:02,099 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:02,099 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:36:02,228 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:36:02,228 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:02,228 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:02,228 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:36:02,359 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:36:02,359 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:02,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:02,359 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:36:02,491 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-20 19:36:02,491 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:02,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:02,491 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:36:02,619 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 19:36:02,619 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:02,619 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0174546129563276, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:36:32,622 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:32,622 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:32,622 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:36:32,750 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 19:36:32,750 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:36:32,750 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:36:32,750 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:36:32,750 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:36:32,750 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:36:32,750 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:36:32,751 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:36:32,751 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:32,751 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:36:32,891 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:36:32,891 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:36:32,891 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:32,891 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:32,891 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:32,891 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:36:33,023 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:36:33,023 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:33,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:33,023 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:36:33,154 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:36:33,154 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:33,154 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:33,154 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:36:33,283 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:36:33,283 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:33,283 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:33,284 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:36:33,415 DEBUG sendRcv: received response: (b'1920', 1)
2020-10-20 19:36:33,415 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:33,415 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:36:33,415 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:36:33,545 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 19:36:33,545 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:36:33,545 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.017925251231474, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:37:03,546 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:03,546 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:03,546 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:37:03,675 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 19:37:03,675 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:37:03,675 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:37:03,675 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:37:03,675 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:37:03,676 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:37:03,676 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:37:03,676 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:37:03,676 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:03,676 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:37:03,817 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:37:03,817 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:37:03,817 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:03,817 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:03,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:03,817 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:37:03,945 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:37:03,945 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:03,945 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:03,945 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:37:04,075 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:37:04,075 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:04,075 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:04,075 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:37:04,205 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:37:04,205 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:04,205 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:04,205 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:37:04,335 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-20 19:37:04,335 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:04,335 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:04,335 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:37:04,465 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-20 19:37:04,465 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:04,465 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.022411335215849, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:37:49,472 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:49,473 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:49,473 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:37:49,603 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 19:37:49,603 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:37:49,603 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:37:49,603 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:37:49,603 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:37:49,603 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:37:49,603 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:37:49,603 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:37:49,604 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:49,604 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:37:49,745 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:37:49,745 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:37:49,745 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:49,745 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:49,745 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:49,745 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:37:49,878 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:37:49,878 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:49,878 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:49,878 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:37:50,008 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:37:50,008 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:50,008 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:50,008 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:37:50,138 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:37:50,138 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:50,138 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:50,138 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:37:50,268 DEBUG sendRcv: received response: (b'1680', 1)
2020-10-20 19:37:50,268 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:50,273 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:37:50,273 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:37:50,403 DEBUG sendRcv: received response: (b'1669', 1)
2020-10-20 19:37:50,403 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:37:50,403 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0128784067490522, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:38:20,405 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:20,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:20,405 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:38:20,535 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 19:38:20,535 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:38:20,535 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:38:20,535 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:38:20,535 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:38:20,535 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:38:20,535 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:38:20,535 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:38:20,535 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:20,535 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:38:20,676 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:38:20,676 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:38:20,676 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:20,676 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:20,676 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:20,676 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:38:20,808 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:38:20,808 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:20,808 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:20,808 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:38:20,939 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:38:20,939 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:20,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:20,939 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:38:21,068 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:38:21,068 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:21,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:21,071 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:38:21,204 DEBUG sendRcv: received response: (b'1560', 1)
2020-10-20 19:38:21,204 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:21,204 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:38:21,204 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:38:21,334 DEBUG sendRcv: received response: (b'1549', 1)
2020-10-20 19:38:21,335 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:38:21,335 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0116348154404584, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:39:06,340 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:06,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:06,340 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:39:06,467 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 19:39:06,467 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:39:06,467 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:39:06,468 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:39:06,469 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:39:06,469 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:39:06,470 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:39:06,470 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:39:06,470 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:06,471 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:39:06,613 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:39:06,613 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:39:06,613 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:06,613 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:06,613 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:06,613 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:39:06,742 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:39:06,742 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:06,743 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:06,743 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:39:06,870 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:39:06,870 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:06,870 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:06,870 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:39:07,002 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:39:07,002 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:07,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:07,002 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:39:07,132 DEBUG sendRcv: received response: (b'1440', 1)
2020-10-20 19:39:07,132 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:07,132 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:07,132 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:39:07,262 DEBUG sendRcv: received response: (b'1429', 1)
2020-10-20 19:39:07,262 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:07,262 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.020002830729765, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:39:52,265 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:52,265 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:52,265 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:39:52,396 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 19:39:52,396 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:39:52,396 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:39:52,396 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:39:52,396 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:39:52,396 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:39:52,397 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:39:52,397 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:39:52,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:52,397 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:39:52,536 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:39:52,536 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:39:52,536 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:52,536 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:52,536 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:52,536 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:39:52,666 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:39:52,666 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:52,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:52,666 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:39:52,795 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:39:52,795 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:52,795 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:52,795 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:39:52,924 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:39:52,924 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:52,924 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:52,924 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:39:53,055 DEBUG sendRcv: received response: (b'1321', 1)
2020-10-20 19:39:53,055 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:53,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:39:53,055 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:39:53,186 DEBUG sendRcv: received response: (b'1310', 1)
2020-10-20 19:39:53,186 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:39:53,186 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0230970270493451, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:40:23,188 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,188 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,188 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:40:23,317 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 19:40:23,317 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:40:23,317 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:40:23,317 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:40:23,317 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:40:23,317 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:40:23,317 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:40:23,317 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:40:23,317 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,317 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:40:23,457 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:40:23,457 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:40:23,457 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,457 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,457 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,457 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:40:23,590 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:40:23,590 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,590 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:40:23,720 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:40:23,720 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,720 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,720 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:40:23,850 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:40:23,850 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,850 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,850 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:40:23,982 DEBUG sendRcv: received response: (b'1200', 1)
2020-10-20 19:40:23,982 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:23,982 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:40:23,982 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:40:24,111 DEBUG sendRcv: received response: (b'1189', 1)
2020-10-20 19:40:24,111 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:40:24,111 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0178825743058149, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:41:09,114 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,114 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,114 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:41:09,244 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 19:41:09,244 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:41:09,244 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:41:09,244 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:41:09,244 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:41:09,244 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:41:09,244 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:41:09,244 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:41:09,244 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,244 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:41:09,385 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:41:09,385 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:41:09,385 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,385 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,385 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,385 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:41:09,513 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:41:09,513 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,513 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,513 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:41:09,643 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:41:09,643 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,643 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,643 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:41:09,774 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:41:09,774 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,774 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,774 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:41:09,905 DEBUG sendRcv: received response: (b'1081', 1)
2020-10-20 19:41:09,905 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:09,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:09,905 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:41:10,035 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-20 19:41:10,035 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:10,035 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0207934267380658, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:41:40,037 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,037 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,037 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:41:40,164 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 19:41:40,164 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:41:40,164 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:41:40,164 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:41:40,164 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:41:40,164 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:41:40,164 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:41:40,164 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:41:40,165 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,165 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:41:40,306 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:41:40,306 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:41:40,306 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,306 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,306 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,306 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:41:40,434 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:41:40,434 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,434 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,434 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:41:40,564 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:41:40,564 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,564 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:41:40,695 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:41:40,695 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,695 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:41:40,823 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 19:41:40,823 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,823 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:41:40,823 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:41:40,954 DEBUG sendRcv: received response: (b'950', 1)
2020-10-20 19:41:40,954 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:41:40,954 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0223925001481, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:42:25,956 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:25,956 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:25,956 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:42:26,087 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 19:42:26,087 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:42:26,087 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:42:26,087 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:42:26,087 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:42:26,087 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:42:26,087 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:42:26,087 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:42:26,088 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:26,088 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:42:26,229 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:42:26,229 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:42:26,229 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,229 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,229 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:26,229 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:42:26,358 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:42:26,359 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:26,359 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:42:26,493 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:42:26,493 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,493 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:26,493 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:42:26,622 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:42:26,622 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,622 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:26,622 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:42:26,752 DEBUG sendRcv: received response: (b'840', 1)
2020-10-20 19:42:26,752 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,752 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:42:26,753 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:42:26,883 DEBUG sendRcv: received response: (b'829', 1)
2020-10-20 19:42:26,883 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:42:26,883 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0168466455796186, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:43:11,887 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:11,887 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:11,887 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:43:12,020 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 19:43:12,020 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:43:12,020 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:43:12,020 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:43:12,020 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:43:12,020 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:43:12,020 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:43:12,020 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:43:12,020 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:12,020 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:43:12,162 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:43:12,162 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:43:12,162 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,162 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,162 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:12,163 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:43:12,295 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:43:12,295 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,295 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:12,295 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:43:12,425 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:43:12,425 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,425 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:12,425 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:43:12,556 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:43:12,556 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,556 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:12,556 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:43:12,685 DEBUG sendRcv: received response: (b'720', 1)
2020-10-20 19:43:12,685 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,685 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:12,685 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:43:12,815 DEBUG sendRcv: received response: (b'709', 1)
2020-10-20 19:43:12,815 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:12,815 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.016683567271513, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:43:42,817 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:42,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:42,817 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:43:42,945 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 19:43:42,945 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:43:42,945 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:43:42,945 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:43:42,946 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:43:42,946 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:43:42,946 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:43:42,946 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:43:42,946 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:42,946 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:43:43,088 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:43:43,088 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:43:43,088 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,088 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,088 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:43,088 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:43:43,221 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:43:43,221 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,221 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:43,221 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:43:43,351 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:43:43,351 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,351 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:43,351 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:43:43,481 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:43:43,481 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,481 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:43,481 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:43:43,610 DEBUG sendRcv: received response: (b'600', 1)
2020-10-20 19:43:43,610 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,610 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:43:43,610 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:43:43,741 DEBUG sendRcv: received response: (b'589', 1)
2020-10-20 19:43:43,741 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:43:43,741 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0173182375290815, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:44:28,745 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:28,745 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:28,745 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:44:28,874 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 19:44:28,874 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:44:28,874 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:44:28,874 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:44:28,874 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:44:28,875 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:44:28,875 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:44:28,875 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:44:28,875 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:28,875 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:44:29,016 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:44:29,016 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:44:29,016 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,016 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,016 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:29,016 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:44:29,150 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:44:29,150 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,150 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:29,150 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:44:29,280 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:44:29,280 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,280 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:29,280 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:44:29,409 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:44:29,409 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,410 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:29,410 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:44:29,539 DEBUG sendRcv: received response: (b'480', 1)
2020-10-20 19:44:29,539 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,539 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:29,539 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:44:29,669 DEBUG sendRcv: received response: (b'469', 1)
2020-10-20 19:44:29,669 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:29,669 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0173346884110395, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:44:59,671 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:59,671 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:59,671 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:44:59,799 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 19:44:59,799 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:44:59,799 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:44:59,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:44:59,799 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:44:59,799 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:44:59,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:44:59,799 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:44:59,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:59,799 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:44:59,941 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:44:59,941 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:44:59,941 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:59,941 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:44:59,941 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:44:59,942 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:45:00,069 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:45:00,069 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:00,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:00,069 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:45:00,200 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:45:00,200 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:00,200 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:00,200 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:45:00,329 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:45:00,329 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:00,329 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:00,329 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:45:00,460 DEBUG sendRcv: received response: (b'361', 1)
2020-10-20 19:45:00,460 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:00,460 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:00,461 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:45:00,589 DEBUG sendRcv: received response: (b'349', 1)
2020-10-20 19:45:00,589 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:00,589 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0217580683091108, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:45:45,593 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:45,593 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:45,593 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:45:45,722 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 19:45:45,722 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:45:45,722 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:45:45,722 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:45:45,722 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:45:45,722 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:45:45,722 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:45:45,722 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:45:45,722 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:45,722 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:45:45,865 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:45:45,865 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:45:45,865 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:45,865 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:45,865 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:45,865 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:45:45,997 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:45:45,997 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:45,997 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:45,997 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:45:46,127 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:45:46,127 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:46,127 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:46,127 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:45:46,257 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:45:46,257 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:46,257 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:46,257 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:45:46,388 DEBUG sendRcv: received response: (b'240', 1)
2020-10-20 19:45:46,388 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:46,388 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:45:46,388 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:45:46,518 DEBUG sendRcv: received response: (b'229', 1)
2020-10-20 19:45:46,518 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:45:46,518 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0164923555710736, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:46:31,521 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:31,521 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:31,521 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:46:31,652 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:46:31,652 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 10}
2020-10-20 19:46:31,652 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:46:31,652 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:46:31,652 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'abs_position': 2000}
2020-10-20 19:46:31,652 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:46:31,652 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:46:31,652 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:31,652 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 19:46:31,797 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:46:31,797 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:46:31,797 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:31,797 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:31,797 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:31,797 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:46:31,926 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:46:31,926 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:31,926 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:31,926 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:46:32,056 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 19:46:32,056 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:32,056 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:32,056 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:46:32,185 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:46:32,185 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:32,185 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:32,185 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:46:32,315 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:46:32,315 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:32,315 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:32,315 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:46:32,444 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:46:32,444 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:32,444 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.6574151002066477, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:46:42,445 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:42,445 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:42,445 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:46:42,575 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 19:46:42,575 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:46:42,575 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:46:42,575 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:46:42,575 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:46:42,575 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:46:42,575 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:46:42,575 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:46:42,575 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:42,575 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:46:42,716 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:46:42,716 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:46:42,717 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:42,718 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:42,719 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:42,719 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:46:42,849 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:46:42,849 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:42,849 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:42,849 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:46:42,979 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:46:42,979 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:42,979 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:42,979 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:46:43,109 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:46:43,109 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:43,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:43,109 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:46:43,239 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-20 19:46:43,239 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:43,239 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:46:43,239 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:46:43,370 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 19:46:43,370 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:46:43,370 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0163202173569623, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:47:13,372 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:13,372 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:13,372 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:47:13,500 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 19:47:13,500 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:47:13,500 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:47:13,500 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:47:13,500 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:47:13,500 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:47:13,500 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:47:13,500 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:47:13,501 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:13,501 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:47:13,642 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:47:13,642 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:47:13,642 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:13,642 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:13,643 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:13,643 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:47:13,776 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:47:13,776 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:13,776 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:13,776 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:47:13,905 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:47:13,905 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:13,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:13,905 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:47:14,035 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:47:14,035 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:14,035 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:14,035 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:47:14,166 DEBUG sendRcv: received response: (b'1920', 1)
2020-10-20 19:47:14,166 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:14,166 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:14,166 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:47:14,297 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 19:47:14,297 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:14,297 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.016561496959013, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:47:44,299 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:44,299 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:44,299 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:47:44,426 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 19:47:44,426 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:47:44,426 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:47:44,426 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:47:44,426 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:47:44,426 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:47:44,426 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:47:44,426 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:47:44,426 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:44,426 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:47:44,567 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:47:44,567 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:47:44,567 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:44,567 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:44,567 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:44,567 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:47:44,700 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:47:44,700 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:44,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:44,700 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:47:44,830 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:47:44,830 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:44,830 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:44,830 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:47:44,961 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:47:44,961 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:44,961 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:44,961 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:47:45,091 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-20 19:47:45,091 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:45,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:47:45,091 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:47:45,222 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-20 19:47:45,222 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:47:45,222 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0153374559739057, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:48:30,225 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:30,225 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:30,225 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:48:30,355 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 19:48:30,355 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:48:30,355 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:48:30,355 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:48:30,355 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:48:30,355 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:48:30,355 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:48:30,355 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:48:30,355 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:30,355 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:48:30,494 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:48:30,494 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:48:30,494 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:30,494 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:30,494 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:30,494 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:48:30,623 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:48:30,623 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:30,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:30,623 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:48:30,753 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:48:30,753 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:30,753 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:30,753 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:48:30,884 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:48:30,884 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:30,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:30,884 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:48:31,015 DEBUG sendRcv: received response: (b'1681', 1)
2020-10-20 19:48:31,015 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:31,015 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:48:31,015 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:48:31,144 DEBUG sendRcv: received response: (b'1670', 1)
2020-10-20 19:48:31,144 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:48:31,144 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.021901834712309, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:49:01,147 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,147 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,147 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:49:01,276 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 19:49:01,276 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:49:01,276 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:49:01,276 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:49:01,276 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:49:01,276 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:49:01,276 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:49:01,276 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:49:01,276 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,276 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:49:01,415 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:49:01,415 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:49:01,415 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,415 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,415 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,415 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:49:01,543 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:49:01,543 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,543 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,543 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:49:01,673 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:49:01,673 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,673 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,673 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:49:01,804 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:49:01,804 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,804 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,804 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:49:01,935 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 19:49:01,935 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:01,935 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:01,935 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:49:02,066 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 19:49:02,066 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:02,066 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0224554426529828, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:49:47,069 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,069 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:49:47,198 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 19:49:47,198 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:49:47,198 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:49:47,199 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:49:47,199 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:49:47,200 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:49:47,201 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:49:47,201 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:49:47,202 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,202 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:49:47,344 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:49:47,344 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:49:47,345 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,345 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,345 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,345 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:49:47,476 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:49:47,476 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,476 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,476 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:49:47,607 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:49:47,607 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,607 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,607 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:49:47,736 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:49:47,737 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,737 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,737 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:49:47,868 DEBUG sendRcv: received response: (b'1440', 1)
2020-10-20 19:49:47,868 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:47,870 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:49:47,871 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:49:48,003 DEBUG sendRcv: received response: (b'1429', 1)
2020-10-20 19:49:48,003 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:49:48,003 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.010579813227934, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:50:33,007 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,007 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,007 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:50:33,137 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 19:50:33,137 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:50:33,137 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:50:33,137 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:50:33,137 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:50:33,137 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:50:33,137 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:50:33,137 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:50:33,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,137 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:50:33,277 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:50:33,277 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:50:33,277 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,277 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,277 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,277 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:50:33,410 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:50:33,410 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,410 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,410 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:50:33,540 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:50:33,540 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,540 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,540 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:50:33,670 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:50:33,670 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,670 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,670 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:50:33,801 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 19:50:33,801 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,801 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:50:33,801 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:50:33,931 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 19:50:33,931 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:50:33,931 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0172946340897504, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:51:03,934 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:03,934 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:03,934 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:51:04,061 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 19:51:04,061 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:51:04,061 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:51:04,061 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:51:04,062 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:51:04,062 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:51:04,062 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:51:04,062 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:51:04,062 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:04,062 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:51:04,202 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:51:04,202 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:51:04,202 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,203 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:04,203 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:51:04,335 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:51:04,335 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,335 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:04,335 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:51:04,466 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:51:04,466 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,467 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:04,467 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:51:04,600 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:51:04,600 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,600 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:04,600 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:51:04,731 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 19:51:04,731 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,731 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:04,731 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:51:04,861 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-20 19:51:04,861 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:04,861 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0127174742081586, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:51:49,864 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:49,864 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:49,864 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:51:49,994 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 19:51:49,994 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:51:49,994 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:51:49,994 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:51:49,994 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:51:49,994 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:51:49,994 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:51:49,994 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:51:49,994 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:49,994 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:51:50,136 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:51:50,136 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:51:50,136 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,136 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,136 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:50,136 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:51:50,269 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:51:50,269 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,269 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:50,269 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:51:50,399 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:51:50,399 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,399 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:50,399 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:51:50,530 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:51:50,530 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,530 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:50,530 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:51:50,658 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-20 19:51:50,659 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,659 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:51:50,659 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:51:50,789 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-20 19:51:50,789 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:51:50,789 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0169043428757611, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:52:20,792 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:20,792 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:20,792 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:52:20,918 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 19:52:20,918 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:52:20,918 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:52:20,919 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:52:20,919 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:52:20,919 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:52:20,919 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:52:20,919 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:52:20,919 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:20,920 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:52:21,060 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:52:21,060 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:52:21,060 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,060 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,060 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:21,060 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:52:21,189 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:52:21,189 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,189 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:21,189 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:52:21,318 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:52:21,318 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,318 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:21,318 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:52:21,449 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:52:21,449 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,449 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:21,449 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:52:21,579 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 19:52:21,579 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,579 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:52:21,579 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:52:21,709 DEBUG sendRcv: received response: (b'950', 1)
2020-10-20 19:52:21,709 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:52:21,709 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0222074873307172, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:53:06,713 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:06,713 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:06,713 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:53:06,842 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 19:53:06,842 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:53:06,842 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:53:06,842 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:53:06,842 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:53:06,842 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:53:06,842 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:53:06,842 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:53:06,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:06,842 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:53:06,985 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:53:06,985 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:53:06,985 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:06,985 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:06,985 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:06,985 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:53:07,116 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:53:07,116 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:07,116 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:07,116 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:53:07,247 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:53:07,247 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:07,247 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:07,247 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:53:07,376 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:53:07,376 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:07,376 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:07,376 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:53:07,507 DEBUG sendRcv: received response: (b'840', 1)
2020-10-20 19:53:07,507 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:07,507 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:07,507 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:53:07,637 DEBUG sendRcv: received response: (b'829', 1)
2020-10-20 19:53:07,637 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:07,638 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0172366983750287, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:53:52,641 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:52,641 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:52,641 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:53:52,770 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 19:53:52,770 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:53:52,770 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:53:52,770 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:53:52,770 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:53:52,770 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:53:52,770 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:53:52,770 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:53:52,770 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:52,770 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:53:52,912 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:53:52,912 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:53:52,912 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:52,912 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:52,912 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:52,912 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:53:53,040 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:53:53,040 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:53,040 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:53,041 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:53:53,171 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:53:53,171 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:53,171 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:53,171 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:53:53,300 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:53:53,300 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:53,300 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:53,300 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:53:53,430 DEBUG sendRcv: received response: (b'720', 1)
2020-10-20 19:53:53,430 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:53,430 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:53:53,430 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:53:53,560 DEBUG sendRcv: received response: (b'709', 1)
2020-10-20 19:53:53,560 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:53:53,560 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0210547335007611, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:54:23,564 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:23,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:23,564 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:54:23,695 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 19:54:23,695 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:54:23,695 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:54:23,695 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:54:23,695 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:54:23,695 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:54:23,695 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:54:23,695 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:54:23,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:23,695 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:54:23,838 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:54:23,838 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:54:23,838 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:23,838 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:23,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:23,838 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:54:23,971 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:54:23,971 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:23,971 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:23,971 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:54:24,100 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:54:24,100 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:24,100 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:24,100 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:54:24,230 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:54:24,230 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:24,230 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:24,230 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:54:24,360 DEBUG sendRcv: received response: (b'601', 1)
2020-10-20 19:54:24,360 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:24,360 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:54:24,361 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:54:24,491 DEBUG sendRcv: received response: (b'590', 1)
2020-10-20 19:54:24,491 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:54:24,491 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0156445391037885, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:55:09,496 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:09,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:09,496 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:55:09,623 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 19:55:09,623 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:55:09,623 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:55:09,623 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:55:09,623 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:55:09,623 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:55:09,623 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:55:09,623 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:55:09,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:09,623 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:55:09,766 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:55:09,766 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:55:09,766 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:09,766 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:09,766 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:09,766 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:55:09,899 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:55:09,899 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:09,899 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:09,900 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:55:10,028 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:55:10,028 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:10,028 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:10,028 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:55:10,159 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:55:10,159 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:10,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:10,159 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:55:10,289 DEBUG sendRcv: received response: (b'480', 1)
2020-10-20 19:55:10,289 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:10,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:10,289 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:55:10,419 DEBUG sendRcv: received response: (b'469', 1)
2020-10-20 19:55:10,419 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:10,419 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.016401518092436, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:55:40,420 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:40,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:40,420 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:55:40,549 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 19:55:40,549 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:55:40,549 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:55:40,549 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:55:40,549 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:55:40,550 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:55:40,550 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:55:40,550 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:55:40,550 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:40,550 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:55:40,691 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:55:40,691 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:55:40,691 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:40,691 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:40,691 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:40,691 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:55:40,824 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:55:40,824 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:40,824 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:40,824 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:55:40,954 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:55:40,954 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:40,954 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:40,954 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:55:41,085 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:55:41,085 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:41,085 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:41,085 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:55:41,215 DEBUG sendRcv: received response: (b'360', 1)
2020-10-20 19:55:41,215 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:41,215 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:55:41,215 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:55:41,343 DEBUG sendRcv: received response: (b'349', 1)
2020-10-20 19:55:41,343 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:55:41,343 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0184454805710736, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:56:26,346 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:26,346 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:26,346 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:56:26,477 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 19:56:26,477 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:56:26,477 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:56:26,477 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:56:26,477 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:56:26,477 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:56:26,477 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:56:26,477 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:56:26,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:26,477 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:56:26,620 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:56:26,620 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:56:26,620 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:26,620 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:26,620 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:26,620 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:56:26,752 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:56:26,752 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:26,752 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:26,752 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:56:26,883 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:56:26,883 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:26,883 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:26,883 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:56:27,013 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:56:27,013 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:27,013 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:27,013 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:56:27,141 DEBUG sendRcv: received response: (b'240', 1)
2020-10-20 19:56:27,141 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:27,141 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:56:27,141 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:56:27,272 DEBUG sendRcv: received response: (b'229', 1)
2020-10-20 19:56:27,272 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:56:27,272 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.01697896789102, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:57:12,275 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:12,275 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:12,275 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:57:12,404 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:57:12,404 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 10}
2020-10-20 19:57:12,404 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:57:12,404 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:57:12,404 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'abs_position': 2000}
2020-10-20 19:57:12,404 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:57:12,404 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:57:12,404 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:12,404 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 19:57:12,551 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:57:12,551 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:57:12,551 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:12,551 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:12,551 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:12,551 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:57:12,682 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:57:12,682 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:12,682 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:12,682 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:57:12,812 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 19:57:12,812 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:12,812 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:12,812 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:57:12,941 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 19:57:12,941 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:12,941 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:12,941 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:57:13,069 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:57:13,069 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:13,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:13,069 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:57:13,195 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 19:57:13,195 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:13,195 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.6589776955740794, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:57:23,196 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,196 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,197 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:57:23,324 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 19:57:23,324 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:57:23,324 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:57:23,324 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:57:23,324 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:57:23,324 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:57:23,324 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:57:23,324 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:57:23,325 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,325 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:57:23,465 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:57:23,465 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:57:23,465 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,465 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,465 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,466 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:57:23,599 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:57:23,599 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,599 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,599 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:57:23,728 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:57:23,728 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,728 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,728 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:57:23,859 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:57:23,859 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,859 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,859 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:57:23,990 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-20 19:57:23,990 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:23,990 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:23,990 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:57:24,120 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 19:57:24,120 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:24,121 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.01637123893289, 'polling_interval': 0.3, 'delay': None}
2020-10-20 19:57:39,122 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,122 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,122 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:57:39,252 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 19:57:39,252 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'speed_code': 20}
2020-10-20 19:57:39,252 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 19:57:39,252 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'I'}
2020-10-20 19:57:39,252 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'rel_position': -120}
2020-10-20 19:57:39,252 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'delay_ms': 1000}
2020-10-20 19:57:39,252 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'to_port': 'O'}
2020-10-20 19:57:39,253 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'minimal_reset': False}
2020-10-20 19:57:39,253 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,253 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 19:57:39,394 DEBUG sendRcv: received response: (None, 0)
2020-10-20 19:57:39,394 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 19:57:39,394 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,394 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,394 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,394 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 19:57:39,526 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:57:39,526 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,526 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,526 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 19:57:39,658 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:57:39,659 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,659 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,659 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 19:57:39,791 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 19:57:39,791 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,791 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,791 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 19:57:39,921 DEBUG sendRcv: received response: (b'1920', 1)
2020-10-20 19:57:39,921 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:39,921 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 19:57:39,921 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 19:57:40,053 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 19:57:40,053 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>}
2020-10-20 19:57:40,053 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000014DCC166640>, 'timeout': 1.0121717340805951, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:35:31,386 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'on': False}
2020-10-20 21:35:31,427 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:35:31,427 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 21:35:31,556 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:35:31,556 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:35:31,556 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:35:31,556 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:35:31,556 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:35:31,685 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:35:31,685 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:35:31,685 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:35:31,685 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:35:31,814 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:35:31,814 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:35:31,814 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:35:31,814 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:35:31,944 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:35:31,944 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:35:31,944 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:35:31,944 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:35:32,075 DEBUG sendRcv: received response: (b'8142', 1)
2020-10-20 21:35:32,075 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:35:32,075 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 21:35:32,075 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:35:32,075 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 21:35:32,200 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:35:32,200 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:35:39,975 DEBUG ErrorHandler: caught error code 1
2020-10-20 21:35:39,975 DEBUG ErrorHandler: error not in [7, 9, 10], re-raising [1]
2020-10-20 21:35:39,975 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>, 'on_execute': False, 'minimal_reset': False}
2020-10-20 21:35:39,975 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000015AE62F6640>}
2020-10-20 21:38:58,136 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on': False}
2020-10-20 21:38:58,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:38:58,137 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 21:38:58,264 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:38:58,264 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:38:58,264 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:38:58,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:38:58,264 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:38:58,392 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:38:58,392 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:38:58,392 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:38:58,392 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:38:58,521 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:38:58,521 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:38:58,521 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:38:58,521 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:38:58,652 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:38:58,652 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:38:58,652 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:38:58,652 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:38:58,782 DEBUG sendRcv: received response: (b'8142', 1)
2020-10-20 21:38:58,782 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:38:58,782 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 21:38:58,782 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:38:58,782 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 21:38:58,908 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:38:58,908 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:39:06,708 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 12}
2020-10-20 21:39:06,708 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 10}
2020-10-20 21:39:06,708 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:39:06,708 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:39:06,708 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'abs_position': 2000}
2020-10-20 21:39:06,709 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:39:06,709 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:39:06,709 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:06,709 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 21:39:06,858 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:39:06,858 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:39:06,858 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:06,858 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:06,858 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:06,858 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:39:06,991 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:39:06,991 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:06,991 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:06,991 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:39:07,122 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 21:39:07,122 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:07,122 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:07,122 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:39:07,251 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:39:07,251 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:07,251 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:07,251 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:39:07,379 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 21:39:07,379 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:07,379 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:07,379 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:39:07,504 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 21:39:07,504 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:07,504 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 7.091150554966518, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:39:17,505 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:17,505 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:17,505 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:39:17,635 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 21:39:32,635 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:32,635 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:32,635 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:39:32,763 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 21:39:32,763 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:39:32,763 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:39:32,763 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:39:32,763 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:39:32,763 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:39:32,764 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:39:32,764 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:39:32,764 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:32,764 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:39:32,903 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:39:32,903 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:39:32,903 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:32,903 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:32,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:32,903 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:39:33,032 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:39:33,032 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:33,032 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:33,032 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:39:33,161 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:39:33,161 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:33,161 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:33,161 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:39:33,291 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:39:33,291 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:33,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:33,291 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:39:33,423 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 21:39:33,423 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:33,423 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:39:33,423 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:39:33,552 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-20 21:39:33,552 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:39:33,552 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0232508070328656, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:40:03,554 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:03,554 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:03,554 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:40:03,683 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 21:40:03,683 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:40:03,683 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:40:03,683 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:40:03,683 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:40:03,683 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:40:03,683 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:40:03,683 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:40:03,683 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:03,684 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:40:04,014 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:40:04,014 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:40:04,014 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,014 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:04,014 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:40:04,147 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:40:04,147 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,147 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:04,147 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:40:04,277 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:40:04,277 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,277 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:04,277 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:40:04,407 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:40:04,407 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,407 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:04,407 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:40:04,540 DEBUG sendRcv: received response: (b'1904', 1)
2020-10-20 21:40:04,540 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,540 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:04,540 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:40:04,668 DEBUG sendRcv: received response: (b'1893', 1)
2020-10-20 21:40:04,668 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:04,668 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 0.8269917852738324, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:40:34,669 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:34,669 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:34,669 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:40:34,799 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 21:40:34,799 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:40:34,799 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:40:34,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:40:34,799 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:40:34,799 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:40:34,799 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:40:34,799 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:40:34,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:34,799 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:40:34,939 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:40:34,939 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:40:34,939 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:34,939 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:34,939 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:34,939 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:40:35,067 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:40:35,067 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:35,067 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:35,067 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:40:35,197 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:40:35,197 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:35,197 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:35,197 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:40:35,328 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:40:35,328 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:35,328 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:35,328 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:40:35,458 DEBUG sendRcv: received response: (b'1802', 1)
2020-10-20 21:40:35,458 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:35,458 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:40:35,458 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:40:35,589 DEBUG sendRcv: received response: (b'1791', 1)
2020-10-20 21:40:35,589 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:40:35,589 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.021352756724638, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:41:20,592 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:20,592 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:20,592 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:41:20,722 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 21:41:20,722 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:41:20,722 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:41:20,722 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:41:20,722 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:41:20,722 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:41:20,722 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:41:20,722 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:41:20,722 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:20,722 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:41:20,862 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:41:20,862 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:41:20,862 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:20,862 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:20,862 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:20,862 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:41:20,990 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:41:20,990 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:20,990 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:20,990 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:41:21,120 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:41:21,120 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:21,120 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:21,120 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:41:21,252 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:41:21,252 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:21,252 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:21,252 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:41:21,381 DEBUG sendRcv: received response: (b'1681', 1)
2020-10-20 21:41:21,381 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:21,381 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:21,381 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:41:21,511 DEBUG sendRcv: received response: (b'1670', 1)
2020-10-20 21:41:21,511 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:21,511 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0229213125565473, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:41:51,514 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:51,514 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:51,514 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:41:51,642 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 21:41:51,642 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:41:51,642 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:41:51,642 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:41:51,642 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:41:51,642 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:41:51,643 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:41:51,643 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:41:51,643 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:51,643 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:41:51,783 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:41:51,783 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:41:51,783 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:51,783 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:51,783 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:51,783 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:41:51,911 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:41:51,911 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:51,911 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:51,911 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:41:52,041 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:41:52,041 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:52,041 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:52,041 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:41:52,171 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:41:52,171 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:52,171 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:52,171 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:41:52,302 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 21:41:52,302 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:52,302 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:41:52,302 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:41:52,432 DEBUG sendRcv: received response: (b'1549', 1)
2020-10-20 21:41:52,432 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:41:52,432 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.022803295359892, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:42:37,436 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:37,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:37,436 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:42:37,565 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 21:42:37,565 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:42:37,565 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:42:37,565 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:42:37,565 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:42:37,565 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:42:37,565 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:42:37,566 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:42:37,566 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:37,566 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:42:37,897 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:42:37,897 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:42:37,897 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:37,897 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:37,897 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:37,897 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:42:38,030 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:42:38,030 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:38,030 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:38,030 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:42:38,159 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:42:38,159 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:38,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:38,159 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:42:38,289 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:42:38,289 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:38,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:38,289 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:42:38,420 DEBUG sendRcv: received response: (b'1424', 1)
2020-10-20 21:42:38,420 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:38,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:42:38,420 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:42:38,550 DEBUG sendRcv: received response: (b'1413', 1)
2020-10-20 21:42:38,550 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:42:38,550 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 0.8280649072983686, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:43:23,554 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:23,554 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:23,554 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:43:23,683 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 21:43:23,683 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:43:23,683 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:43:23,683 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:43:23,683 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:43:23,683 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:43:23,683 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:43:23,683 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:43:23,683 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:23,683 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:43:23,825 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:43:23,825 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:43:23,825 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:23,825 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:23,825 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:23,825 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:43:23,958 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:43:23,958 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:23,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:23,958 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:43:24,087 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:43:24,087 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:24,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:24,087 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:43:24,218 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:43:24,218 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:24,218 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:24,218 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:43:24,348 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 21:43:24,348 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:24,348 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:24,348 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:43:24,478 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 21:43:24,478 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:24,478 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0172920114853803, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:43:54,479 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:54,479 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:54,479 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:43:54,609 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 21:43:54,609 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:43:54,609 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:43:54,609 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:43:54,609 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:43:54,609 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:43:54,610 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:43:54,610 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:43:54,610 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:54,610 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:43:54,750 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:43:54,750 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:43:54,750 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:54,750 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:54,750 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:54,750 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:43:54,883 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:43:54,883 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:54,883 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:54,883 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:43:55,013 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:43:55,013 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:55,013 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:55,013 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:43:55,142 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:43:55,142 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:55,142 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:55,142 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:43:55,273 DEBUG sendRcv: received response: (b'1202', 1)
2020-10-20 21:43:55,273 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:55,273 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:43:55,273 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:43:55,404 DEBUG sendRcv: received response: (b'1191', 1)
2020-10-20 21:43:55,404 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:43:55,404 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0176746733048383, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:44:40,406 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:40,406 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:40,406 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:44:40,536 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 21:44:40,536 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:44:40,536 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:44:40,536 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:44:40,536 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:44:40,536 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:44:40,536 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:44:40,536 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:44:40,536 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:40,536 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:44:40,678 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:44:40,678 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:44:40,678 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:40,678 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:40,678 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:40,678 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:44:40,805 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:44:40,805 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:40,805 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:40,805 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:44:40,935 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:44:40,935 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:40,935 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:40,935 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:44:41,066 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:44:41,066 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:41,066 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:41,066 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:44:41,196 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-20 21:44:41,196 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:41,196 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:44:41,196 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:44:41,327 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-20 21:44:41,327 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:44:41,327 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0207512266495649, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:45:11,330 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:11,330 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:11,330 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:45:11,457 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 21:45:11,457 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:45:11,457 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:45:11,457 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:45:11,457 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:45:11,457 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:45:11,458 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:45:11,458 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:45:11,458 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:11,458 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:45:11,598 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:45:11,598 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:45:11,598 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:11,598 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:11,598 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:11,598 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:45:11,726 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:45:11,726 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:11,726 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:11,726 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:45:11,856 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:45:11,856 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:11,856 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:11,856 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:45:11,987 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:45:11,987 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:11,987 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:11,987 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:45:12,115 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 21:45:12,115 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:12,115 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:12,115 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:45:12,247 DEBUG sendRcv: received response: (b'950', 1)
2020-10-20 21:45:12,247 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:12,247 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0226595289566938, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:45:57,251 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:57,251 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:57,251 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:45:57,379 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 21:45:57,379 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:45:57,379 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:45:57,380 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:45:57,380 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:45:57,380 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:45:57,380 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:45:57,380 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:45:57,380 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:57,380 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:45:57,521 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:45:57,521 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:45:57,521 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:57,521 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:57,521 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:57,521 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:45:57,649 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:45:57,649 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:57,649 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:57,649 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:45:57,779 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:45:57,779 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:57,779 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:57,779 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:45:57,910 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:45:57,910 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:57,910 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:57,910 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:45:58,039 DEBUG sendRcv: received response: (b'840', 1)
2020-10-20 21:45:58,039 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:58,039 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:45:58,039 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:45:58,169 DEBUG sendRcv: received response: (b'830', 1)
2020-10-20 21:45:58,169 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:45:58,169 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'timeout': 1.0223035700180951, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:46:43,173 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,173 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,173 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:46:43,302 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 21:46:43,302 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'speed_code': 20}
2020-10-20 21:46:43,302 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:46:43,302 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'I'}
2020-10-20 21:46:43,302 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'rel_position': -120}
2020-10-20 21:46:43,302 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'delay_ms': 1000}
2020-10-20 21:46:43,302 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'to_port': 'O'}
2020-10-20 21:46:43,302 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'minimal_reset': False}
2020-10-20 21:46:43,302 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,303 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:46:43,444 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:46:43,444 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:46:43,444 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,444 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,444 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,444 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:46:43,572 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:46:43,572 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,572 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,572 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:46:43,703 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:46:43,703 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,703 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,703 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:46:43,832 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:46:43,832 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,832 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,832 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:46:43,962 DEBUG sendRcv: received response: (b'720', 1)
2020-10-20 21:46:43,962 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>}
2020-10-20 21:46:43,962 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001EA92A86640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:46:43,962 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:46:44,271 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:47:00,084 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on': False}
2020-10-20 21:47:00,084 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:00,084 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 21:47:00,212 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:47:00,212 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:00,212 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:00,212 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:00,212 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:47:00,340 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:47:00,340 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:00,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:00,340 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:47:00,470 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:47:00,470 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:00,470 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:00,470 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:47:00,599 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:47:00,599 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:00,599 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:00,599 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:47:00,730 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 21:47:00,730 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:00,730 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 21:47:00,730 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:00,730 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 21:47:00,856 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:47:00,856 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:47:08,657 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 12}
2020-10-20 21:47:08,657 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 10}
2020-10-20 21:47:08,657 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:47:08,657 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:47:08,657 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'abs_position': 2000}
2020-10-20 21:47:08,657 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:47:08,657 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:47:08,657 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:08,657 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 21:47:08,805 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:47:08,805 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:47:08,805 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:08,805 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:08,805 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:08,805 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:47:08,933 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:47:08,933 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:08,933 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:08,933 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:47:09,065 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 21:47:09,065 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:09,065 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:09,065 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:47:09,193 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:47:09,193 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:09,193 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:09,193 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:47:09,321 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 21:47:09,321 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:09,321 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:09,321 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:47:09,447 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 21:47:09,447 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:09,447 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.2463456402914863, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:47:19,447 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:19,447 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:19,447 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:47:19,577 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 21:47:34,578 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:34,578 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:34,578 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:47:34,706 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 21:47:34,706 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:47:34,706 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:47:34,706 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:47:34,706 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:47:34,706 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:47:34,706 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:47:34,707 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:47:34,707 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:34,707 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:47:34,848 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:47:34,848 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:47:34,848 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:34,848 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:34,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:34,848 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:47:34,980 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:47:34,980 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:34,980 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:34,980 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:47:35,109 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:47:35,109 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:35,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:35,109 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:47:35,240 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:47:35,240 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:35,240 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:35,240 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:47:35,370 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-20 21:47:35,370 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:35,370 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:47:35,370 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:47:35,501 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 21:47:35,501 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:47:35,501 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0178620703080121, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:48:05,503 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:05,503 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:05,503 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:48:05,632 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 21:48:05,632 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:48:05,632 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:48:05,632 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:48:05,632 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:48:05,632 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:48:05,633 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:48:05,633 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:48:05,633 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:05,633 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:48:05,772 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:48:05,772 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:48:05,772 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:05,772 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:05,772 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:05,772 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:48:05,900 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:48:05,900 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:05,900 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:05,900 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:48:06,030 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:48:06,030 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:06,030 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:06,030 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:48:06,161 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:48:06,161 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:06,161 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:06,161 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:48:06,291 DEBUG sendRcv: received response: (b'1921', 1)
2020-10-20 21:48:06,291 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:06,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:06,291 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:48:06,421 DEBUG sendRcv: received response: (b'1910', 1)
2020-10-20 21:48:06,421 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:06,421 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0228845960953656, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:48:36,424 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:36,424 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:36,424 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:48:36,551 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 21:48:36,551 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:48:36,551 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:48:36,551 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:48:36,551 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:48:36,551 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:48:36,551 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:48:36,551 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:48:36,552 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:36,552 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:48:36,692 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:48:36,692 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:48:36,692 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:36,692 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:36,692 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:36,692 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:48:36,820 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:48:36,820 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:36,820 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:36,820 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:48:36,951 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:48:36,951 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:36,951 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:36,951 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:48:37,080 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:48:37,080 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:37,080 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:37,080 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:48:37,212 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-20 21:48:37,212 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:37,212 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:48:37,212 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:48:37,342 DEBUG sendRcv: received response: (b'1789', 1)
2020-10-20 21:48:37,342 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:48:37,342 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.022406566844267, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:49:22,345 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:22,345 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:22,345 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:49:22,475 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 21:49:22,475 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:49:22,475 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:49:22,475 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:49:22,475 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:49:22,476 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:49:22,476 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:49:22,476 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:49:22,476 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:22,476 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:49:22,615 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:49:22,615 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:49:22,615 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:22,615 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:22,615 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:22,615 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:49:22,744 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:49:22,744 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:22,744 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:22,744 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:49:22,874 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:49:22,874 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:22,874 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:22,874 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:49:23,003 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:49:23,003 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:23,003 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:23,003 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:49:23,134 DEBUG sendRcv: received response: (b'1682', 1)
2020-10-20 21:49:23,134 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:23,134 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:23,134 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:49:23,265 DEBUG sendRcv: received response: (b'1671', 1)
2020-10-20 21:49:23,265 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:23,265 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0229704267838422, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:49:53,268 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:53,268 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:53,268 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:49:53,400 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 21:49:53,400 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:49:53,400 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:49:53,400 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:49:53,400 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:49:53,400 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:49:53,400 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:49:53,401 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:49:53,401 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:53,401 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:49:53,541 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:49:53,541 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:49:53,541 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:53,541 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:53,541 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:53,541 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:49:53,669 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:49:53,669 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:53,669 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:53,669 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:49:53,800 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:49:53,800 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:53,800 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:53,800 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:49:53,929 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:49:53,929 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:53,929 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:53,929 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:49:54,060 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 21:49:54,060 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:54,060 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:49:54,060 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:49:54,190 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 21:49:54,190 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:49:54,190 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0221242792466108, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:50:39,193 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,193 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,193 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:50:39,324 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 21:50:39,324 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:50:39,324 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:50:39,324 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:50:39,324 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:50:39,324 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:50:39,324 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:50:39,324 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:50:39,324 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,324 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:50:39,464 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:50:39,464 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:50:39,464 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,464 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,464 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,464 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:50:39,592 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:50:39,592 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,592 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,592 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:50:39,722 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:50:39,722 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,722 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,722 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:50:39,852 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:50:39,852 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,852 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,852 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:50:39,984 DEBUG sendRcv: received response: (b'1441', 1)
2020-10-20 21:50:39,984 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:39,984 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:50:39,984 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:50:40,113 DEBUG sendRcv: received response: (b'1430', 1)
2020-10-20 21:50:40,113 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:50:40,113 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0231327898362104, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:51:25,115 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,115 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,115 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:51:25,246 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 21:51:25,246 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:51:25,246 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:51:25,246 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:51:25,246 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:51:25,246 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:51:25,246 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:51:25,246 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:51:25,246 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,246 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:51:25,387 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:51:25,387 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:51:25,387 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,387 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,387 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,387 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:51:25,516 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:51:25,516 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,516 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:51:25,646 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:51:25,646 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,646 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,646 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:51:25,775 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:51:25,775 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,775 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:51:25,906 DEBUG sendRcv: received response: (b'1321', 1)
2020-10-20 21:51:25,906 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:25,906 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:25,906 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:51:26,037 DEBUG sendRcv: received response: (b'1309', 1)
2020-10-20 21:51:26,037 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:26,037 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0208177454331342, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:51:56,039 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,039 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,039 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:51:56,167 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 21:51:56,167 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:51:56,167 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:51:56,167 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:51:56,167 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:51:56,167 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:51:56,167 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:51:56,167 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:51:56,167 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,167 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:51:56,307 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:51:56,307 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:51:56,307 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,307 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,307 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,307 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:51:56,436 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:51:56,436 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,436 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:51:56,566 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:51:56,566 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,566 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,566 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:51:56,695 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:51:56,695 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,695 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:51:56,826 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 21:51:56,826 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,826 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:51:56,826 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:51:56,956 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-20 21:51:56,956 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:51:56,956 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0227143652298871, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:52:41,959 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:41,959 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:41,959 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:52:42,090 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 21:52:42,090 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:52:42,090 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:52:42,090 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:52:42,090 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:52:42,090 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:52:42,091 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:52:42,091 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:52:42,091 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:42,091 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:52:42,231 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:52:42,231 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:52:42,231 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,231 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,231 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:42,231 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:52:42,359 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:52:42,359 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:42,359 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:52:42,489 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:52:42,489 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,489 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:42,489 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:52:42,620 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:52:42,620 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,620 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:42,620 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:52:42,750 DEBUG sendRcv: received response: (b'1082', 1)
2020-10-20 21:52:42,750 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,750 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:52:42,750 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:52:42,881 DEBUG sendRcv: received response: (b'1071', 1)
2020-10-20 21:52:42,881 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:52:42,881 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0213372595169965, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:53:27,884 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:27,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:27,884 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:53:28,013 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 21:53:28,013 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:53:28,013 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:53:28,013 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:53:28,013 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:53:28,013 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:53:28,013 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:53:28,014 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:53:28,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:28,014 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:53:28,154 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:53:28,154 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:53:28,154 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,154 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,154 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:28,154 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:53:28,281 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:53:28,281 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,281 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:28,281 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:53:28,413 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:53:28,413 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,413 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:28,413 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:53:28,542 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:53:28,542 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,542 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:28,542 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:53:28,672 DEBUG sendRcv: received response: (b'961', 1)
2020-10-20 21:53:28,672 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,672 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:28,672 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:53:28,803 DEBUG sendRcv: received response: (b'950', 1)
2020-10-20 21:53:28,803 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:28,803 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0224740393021527, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:53:58,805 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:58,805 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:58,805 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:53:58,933 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 21:53:58,933 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:53:58,933 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:53:58,933 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:53:58,933 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:53:58,933 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:53:58,933 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:53:58,934 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:53:58,934 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:58,934 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:53:59,075 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:53:59,075 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:53:59,075 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,075 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,075 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:59,075 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:53:59,203 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:53:59,203 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,203 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:59,203 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:53:59,332 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:53:59,332 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,332 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:59,332 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:53:59,462 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:53:59,462 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,462 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:59,462 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:53:59,593 DEBUG sendRcv: received response: (b'841', 1)
2020-10-20 21:53:59,593 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,593 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:53:59,593 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:53:59,722 DEBUG sendRcv: received response: (b'830', 1)
2020-10-20 21:53:59,722 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:53:59,722 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0231127626755658, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:54:44,725 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:44,725 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:44,725 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:54:44,856 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 21:54:44,856 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:54:44,856 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:54:44,856 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:54:44,856 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:54:44,856 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:54:44,857 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:54:44,857 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:54:44,857 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:44,857 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:54:44,997 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:54:44,997 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:54:44,997 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:44,997 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:44,997 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:44,997 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:54:45,127 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:54:45,127 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:45,127 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:45,127 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:54:45,256 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:54:45,256 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:45,256 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:45,256 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:54:45,386 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:54:45,386 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:45,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:45,386 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:54:45,516 DEBUG sendRcv: received response: (b'720', 1)
2020-10-20 21:54:45,516 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:45,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:54:45,516 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:54:45,646 DEBUG sendRcv: received response: (b'710', 1)
2020-10-20 21:54:45,646 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:54:45,646 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0220205671647016, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:55:15,648 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:15,648 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:15,648 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:55:15,776 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 21:55:15,776 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:55:15,776 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:55:15,776 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:55:15,776 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:55:15,776 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:55:15,776 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:55:15,776 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:55:15,776 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:15,776 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:55:15,918 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:55:15,918 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:55:15,918 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:15,918 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:15,918 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:15,918 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:55:16,046 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:55:16,046 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:16,046 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:16,046 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:55:16,176 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:55:16,176 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:16,176 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:16,176 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:55:16,307 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:55:16,307 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:16,307 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:16,307 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:55:16,436 DEBUG sendRcv: received response: (b'600', 1)
2020-10-20 21:55:16,436 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:16,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:55:16,436 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:55:16,566 DEBUG sendRcv: received response: (b'589', 1)
2020-10-20 21:55:16,566 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:55:16,566 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.021648157344145, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:56:01,570 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:01,570 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:01,570 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:56:01,699 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 21:56:01,699 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:56:01,699 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:56:01,699 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:56:01,699 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:56:01,699 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:56:01,699 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:56:01,700 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:56:01,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:01,700 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:56:01,842 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:56:01,842 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:56:01,842 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:01,842 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:01,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:01,842 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:56:01,974 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:56:01,974 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:01,974 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:01,974 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:56:02,104 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:56:02,104 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:02,104 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:02,104 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:56:02,234 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:56:02,234 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:02,234 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:02,234 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:56:02,364 DEBUG sendRcv: received response: (b'481', 1)
2020-10-20 21:56:02,364 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:02,364 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:02,364 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:56:02,494 DEBUG sendRcv: received response: (b'470', 1)
2020-10-20 21:56:02,494 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:02,494 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.017594326243681, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:56:47,496 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:47,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:47,496 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:56:47,623 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 21:56:47,623 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:56:47,623 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:56:47,623 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:56:47,623 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:56:47,623 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:56:47,623 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:56:47,623 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:56:47,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:47,623 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:56:47,763 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:56:47,763 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:56:47,763 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:47,763 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:47,763 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:47,763 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:56:47,892 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:56:47,892 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:47,892 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:47,892 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:56:48,023 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:56:48,023 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:48,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:48,023 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:56:48,153 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:56:48,153 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:48,153 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:48,153 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:56:48,282 DEBUG sendRcv: received response: (b'360', 1)
2020-10-20 21:56:48,282 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:48,282 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:56:48,282 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:56:48,412 DEBUG sendRcv: received response: (b'349', 1)
2020-10-20 21:56:48,412 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:56:48,412 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0223488695481244, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:57:18,414 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:18,414 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:18,414 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:57:18,543 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 21:57:18,543 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:57:18,543 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:57:18,543 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:57:18,543 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:57:18,543 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:57:18,543 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:57:18,543 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:57:18,543 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:18,543 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:57:18,685 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:57:18,685 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:57:18,685 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:18,685 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:18,685 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:18,685 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:57:18,813 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:57:18,813 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:18,813 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:18,813 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:57:18,943 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:57:18,943 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:18,943 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:18,943 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:57:19,074 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:57:19,074 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:19,074 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:19,074 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:57:19,202 DEBUG sendRcv: received response: (b'240', 1)
2020-10-20 21:57:19,202 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:19,202 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:57:19,202 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:57:19,333 DEBUG sendRcv: received response: (b'230', 1)
2020-10-20 21:57:19,333 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:57:19,333 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.022058952555937, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:58:04,337 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:04,337 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:04,337 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:58:04,465 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 21:58:04,465 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 10}
2020-10-20 21:58:04,465 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:58:04,465 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:58:04,465 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'abs_position': 2000}
2020-10-20 21:58:04,465 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:58:04,465 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:58:04,465 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:04,465 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 21:58:04,613 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:58:04,613 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:58:04,613 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:04,613 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:04,613 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:04,613 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:58:04,741 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:58:04,741 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:04,741 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:04,741 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:58:04,871 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 21:58:04,871 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:04,871 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:04,871 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:58:05,001 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 21:58:05,001 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:05,001 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:05,001 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:58:05,129 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 21:58:05,129 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:05,129 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:05,129 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:58:05,255 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 21:58:05,255 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:05,255 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.6594500313895089, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:58:15,255 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:15,255 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:15,255 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:58:15,385 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 21:58:15,385 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:58:15,385 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:58:15,385 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:58:15,385 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:58:15,385 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:58:15,386 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:58:15,386 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:58:15,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:15,386 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:58:15,526 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:58:15,526 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:58:15,526 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:15,526 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:15,526 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:15,526 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:58:15,655 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:58:15,655 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:15,655 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:15,655 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:58:15,785 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:58:15,785 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:15,785 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:15,785 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:58:15,914 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:58:15,914 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:15,914 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:15,914 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:58:16,045 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 21:58:16,045 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:16,045 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:16,045 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:58:16,175 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-20 21:58:16,175 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:16,175 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0226535684922162, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:58:46,177 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:46,228 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:46,228 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:58:46,356 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 21:58:46,411 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:58:46,411 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:58:46,411 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:58:46,411 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:58:46,411 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:58:46,411 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:58:46,411 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:58:46,411 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:46,414 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:58:46,556 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:58:46,629 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:58:46,629 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:46,629 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:46,629 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:46,629 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:58:46,760 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:58:46,817 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:46,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:46,817 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:58:46,945 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:58:46,997 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:46,997 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:46,997 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:58:47,124 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:58:47,170 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:47,170 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:47,170 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:58:47,300 DEBUG sendRcv: received response: (b'1901', 1)
2020-10-20 21:58:47,336 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:47,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:58:47,336 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:58:47,466 DEBUG sendRcv: received response: (b'1887', 1)
2020-10-20 21:58:47,527 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:58:47,527 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.6954915411332074, 'polling_interval': 0.3, 'delay': None}
2020-10-20 21:59:17,529 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:17,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:17,590 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:59:17,721 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 21:59:17,787 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 21:59:17,787 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 21:59:17,787 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 21:59:17,787 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 21:59:17,787 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 21:59:17,791 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 21:59:17,791 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 21:59:17,791 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:17,791 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 21:59:17,932 DEBUG sendRcv: received response: (None, 0)
2020-10-20 21:59:18,012 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 21:59:18,012 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,012 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,012 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:18,012 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 21:59:18,140 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:59:18,187 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,188 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:18,188 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 21:59:18,315 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:59:18,356 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:18,356 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 21:59:18,486 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 21:59:18,536 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,536 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:18,536 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 21:59:18,666 DEBUG sendRcv: received response: (b'1782', 1)
2020-10-20 21:59:18,720 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,721 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 21:59:18,721 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 21:59:18,851 DEBUG sendRcv: received response: (b'1766', 1)
2020-10-20 21:59:18,895 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 21:59:18,896 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7067344076493207, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:00:03,898 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:03,931 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:03,931 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:00:04,059 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 22:00:04,102 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:00:04,103 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:00:04,106 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:00:04,106 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:00:04,107 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:00:04,107 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:00:04,107 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:00:04,107 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:04,107 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:00:04,250 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:00:04,292 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:00:04,292 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:04,292 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:04,292 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:04,292 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:00:04,422 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:00:04,512 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:04,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:04,512 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:00:04,644 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:00:04,740 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:04,740 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:04,740 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:00:04,874 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:00:04,936 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:04,936 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:04,936 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:00:05,069 DEBUG sendRcv: received response: (b'1655', 1)
2020-10-20 22:00:05,158 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:05,158 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:05,158 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:00:05,289 DEBUG sendRcv: received response: (b'1636', 1)
2020-10-20 22:00:05,366 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:05,366 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.5527679807999555, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:00:35,367 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:35,443 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:35,447 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:00:35,579 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 22:00:35,580 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:00:35,580 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:00:35,580 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:00:35,580 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:00:35,580 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:00:35,580 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:00:35,580 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:00:35,580 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:35,580 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:00:35,721 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:00:35,786 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:00:35,786 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:35,786 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:35,786 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:35,786 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:00:35,919 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:00:35,992 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:35,992 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:35,992 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:00:36,124 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:00:36,156 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:36,156 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:36,156 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:00:36,289 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:00:36,349 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:36,350 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:36,350 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:00:36,480 DEBUG sendRcv: received response: (b'1540', 1)
2020-10-20 22:00:36,507 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:36,507 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:00:36,508 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:00:36,639 DEBUG sendRcv: received response: (b'1527', 1)
2020-10-20 22:00:36,697 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:00:36,701 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.690673340068144, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:01:21,705 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:21,736 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:21,736 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:01:21,867 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 22:01:21,921 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:01:21,921 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:01:21,921 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:01:21,921 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:01:21,921 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:01:21,921 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:01:21,922 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:01:21,922 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:21,922 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:01:22,063 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:01:22,117 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:01:22,117 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:22,117 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:22,117 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:22,117 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:01:22,246 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:01:22,293 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:22,294 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:22,294 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:01:22,426 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:01:22,480 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:22,480 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:22,480 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:01:22,611 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:01:22,661 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:22,662 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:22,662 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:01:22,793 DEBUG sendRcv: received response: (b'1423', 1)
2020-10-20 22:01:22,849 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:22,849 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:22,849 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:01:22,978 DEBUG sendRcv: received response: (b'1407', 1)
2020-10-20 22:01:23,017 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:23,017 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7169897444107953, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:01:53,019 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,019 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,019 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:01:53,147 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 22:01:53,147 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:01:53,147 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:01:53,147 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:01:53,147 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:01:53,147 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:01:53,147 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:01:53,147 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:01:53,147 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,147 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:01:53,289 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:01:53,289 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:01:53,289 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,289 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,289 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:01:53,417 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:01:53,417 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,417 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,417 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:01:53,547 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:01:53,547 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,547 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,547 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:01:53,677 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:01:53,677 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,677 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,677 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:01:53,807 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 22:01:53,807 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,807 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:01:53,807 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:01:53,938 DEBUG sendRcv: received response: (b'1310', 1)
2020-10-20 22:01:53,938 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:01:53,938 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0208129770615522, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:02:38,943 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:38,943 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:38,943 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:02:39,071 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 22:02:39,071 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:02:39,071 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:02:39,071 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:02:39,071 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:02:39,071 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:02:39,071 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:02:39,071 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:02:39,071 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:39,071 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:02:39,212 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:02:39,212 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:02:39,212 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,212 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,212 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:39,212 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:02:39,339 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:02:39,339 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,339 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:39,339 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:02:39,470 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:02:39,470 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,470 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:39,470 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:02:39,600 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:02:39,600 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,600 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:39,600 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:02:39,732 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 22:02:39,732 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,732 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:02:39,732 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:02:39,862 DEBUG sendRcv: received response: (b'1189', 1)
2020-10-20 22:02:39,862 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:02:39,862 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0209360010483686, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:03:24,865 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:24,880 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:24,880 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:03:25,009 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 22:03:25,009 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:03:25,009 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:03:25,009 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:03:25,009 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:03:25,009 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:03:25,009 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:03:25,009 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:03:25,009 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:25,010 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:03:25,151 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:03:25,261 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:03:25,261 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:25,261 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:25,261 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:25,261 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:03:25,394 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:03:25,416 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:25,416 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:25,416 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:03:25,548 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:03:25,595 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:25,595 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:25,595 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:03:25,723 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:03:25,723 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:25,723 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:25,723 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:03:25,854 DEBUG sendRcv: received response: (b'1065', 1)
2020-10-20 22:03:25,896 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:25,896 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:25,896 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:03:26,024 DEBUG sendRcv: received response: (b'1050', 1)
2020-10-20 22:03:26,101 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:26,101 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.718960989222807, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:03:56,102 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:56,160 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:56,161 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:03:56,289 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 22:03:56,395 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:03:56,395 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:03:56,395 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:03:56,395 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:03:56,395 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:03:56,395 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:03:56,395 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:03:56,395 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:56,395 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:03:56,534 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:03:56,555 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:03:56,555 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:56,555 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:56,555 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:56,555 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:03:56,684 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:03:56,764 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:56,764 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:56,765 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:03:56,893 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:03:56,951 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:56,952 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:56,952 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:03:57,084 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:03:57,103 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:57,104 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:57,104 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:03:57,233 DEBUG sendRcv: received response: (b'945', 1)
2020-10-20 22:03:57,296 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:57,296 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:03:57,296 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:03:57,423 DEBUG sendRcv: received response: (b'929', 1)
2020-10-20 22:03:57,500 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:03:57,500 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7063915617325727, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:04:42,504 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:42,582 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:42,582 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:04:42,711 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 22:04:42,768 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:04:42,768 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:04:42,768 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:04:42,768 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:04:42,768 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:04:42,768 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:04:42,768 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:04:42,768 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:42,768 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:04:42,909 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:04:42,940 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:04:42,940 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:42,940 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:42,940 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:42,940 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:04:43,072 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:04:43,134 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:43,134 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:43,134 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:04:43,267 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:04:43,390 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:43,390 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:43,390 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:04:43,522 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:04:43,544 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:43,544 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:43,544 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:04:43,671 DEBUG sendRcv: received response: (b'820', 1)
2020-10-20 22:04:43,684 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:43,684 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:04:43,684 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:04:43,812 DEBUG sendRcv: received response: (b'808', 1)
2020-10-20 22:04:43,817 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:04:43,817 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7628483660080854, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:05:13,820 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:13,911 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:13,911 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:05:14,043 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 22:05:14,095 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:05:14,095 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:05:14,095 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:05:14,095 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:05:14,095 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:05:14,095 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:05:14,095 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:05:14,095 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:14,095 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:05:14,239 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:05:14,336 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:05:14,336 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:14,336 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:14,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:14,336 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:05:14,467 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:05:14,479 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:14,479 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:14,479 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:05:14,613 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:05:14,718 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:14,718 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:14,718 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:05:14,846 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:05:14,846 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:14,846 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:14,846 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:05:14,977 DEBUG sendRcv: received response: (b'702', 1)
2020-10-20 22:05:15,037 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:15,037 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:05:15,037 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:05:15,167 DEBUG sendRcv: received response: (b'686', 1)
2020-10-20 22:05:15,167 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:05:15,167 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7403690702774945, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:06:00,170 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,170 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,170 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:06:00,300 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 22:06:00,300 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:06:00,300 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:06:00,300 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:06:00,300 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:06:00,300 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:06:00,300 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:06:00,300 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:06:00,300 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,300 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:06:00,442 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:06:00,442 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:06:00,442 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,442 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,442 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:06:00,569 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:06:00,569 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,569 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,569 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:06:00,700 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:06:00,700 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,700 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:06:00,831 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:06:00,831 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,831 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,831 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:06:00,959 DEBUG sendRcv: received response: (b'600', 1)
2020-10-20 22:06:00,959 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:00,959 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:00,959 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:06:01,090 DEBUG sendRcv: received response: (b'590', 1)
2020-10-20 22:06:01,090 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:01,090 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0217487699845258, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:06:46,092 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:46,101 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:46,101 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:06:46,229 DEBUG sendRcv: received response: (b'440', 1)
2020-10-20 22:06:46,292 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:06:46,292 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:06:46,292 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:06:46,292 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:06:46,292 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:06:46,293 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:06:46,293 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:06:46,293 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:46,293 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:06:46,435 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:06:46,490 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:06:46,490 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:46,490 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:46,490 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:46,490 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:06:46,619 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:06:46,655 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:46,656 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:46,656 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:06:46,788 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:06:46,831 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:46,831 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:46,831 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:06:46,964 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:06:47,069 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:47,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:47,069 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:06:47,198 DEBUG sendRcv: received response: (b'459', 1)
2020-10-20 22:06:47,260 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:47,260 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:06:47,260 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:06:47,388 DEBUG sendRcv: received response: (b'443', 1)
2020-10-20 22:06:47,482 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:06:47,482 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.6235482580521527, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:07:17,483 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:17,570 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:17,570 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:07:17,699 DEBUG sendRcv: received response: (b'320', 1)
2020-10-20 22:07:17,729 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:07:17,729 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:07:17,729 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:07:17,729 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:07:17,729 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:07:17,729 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:07:17,730 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:07:17,730 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:17,730 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:07:17,871 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:07:17,903 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:07:17,903 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:17,904 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:17,904 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:17,904 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:07:18,034 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:07:18,099 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:18,099 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:18,099 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:07:18,230 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:07:18,283 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:18,283 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:18,283 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:07:18,413 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:07:18,413 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:18,413 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:18,413 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:07:18,543 DEBUG sendRcv: received response: (b'347', 1)
2020-10-20 22:07:18,622 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:18,622 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:07:18,622 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:07:18,748 DEBUG sendRcv: received response: (b'330', 1)
2020-10-20 22:07:18,788 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:07:18,789 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7529020197251264, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:08:03,793 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:03,794 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:03,794 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:08:03,922 DEBUG sendRcv: received response: (b'200', 1)
2020-10-20 22:08:03,977 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:08:03,977 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:08:03,977 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:08:03,977 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:08:03,977 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:08:03,977 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:08:03,977 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:08:03,977 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:03,977 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:08:04,118 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:08:04,200 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:08:04,201 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:04,201 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:04,201 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:04,201 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:08:04,332 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:08:04,332 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:04,332 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:04,332 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:08:04,463 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:08:04,522 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:04,522 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:04,522 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:08:04,651 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:08:04,723 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:04,723 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:04,723 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:08:04,851 DEBUG sendRcv: received response: (b'222', 1)
2020-10-20 22:08:04,929 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:04,929 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:04,929 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:08:05,056 DEBUG sendRcv: received response: (b'205', 1)
2020-10-20 22:08:05,086 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:05,087 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.7023889906266156, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:08:35,088 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:35,119 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:35,119 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:08:35,246 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 22:08:35,304 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 10}
2020-10-20 22:08:35,304 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:08:35,304 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:08:35,304 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'abs_position': 2000}
2020-10-20 22:08:35,305 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:08:35,305 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:08:35,305 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:35,305 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-10-20 22:08:35,448 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:08:35,512 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:08:35,512 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:35,512 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:35,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:35,512 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:08:35,643 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 22:08:35,715 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:35,715 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:35,715 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:08:35,848 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 22:08:35,855 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:35,856 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:35,856 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:08:35,986 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 22:08:36,050 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:36,050 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:36,050 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:08:36,181 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 22:08:36,211 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:36,211 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:36,211 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:08:36,341 DEBUG sendRcv: received response: (b'80', 1)
2020-10-20 22:08:36,417 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:36,417 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.3681945572989327, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:08:46,417 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:46,417 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:46,417 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:08:46,547 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 22:08:46,600 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:08:46,600 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:08:46,600 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:08:46,600 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:08:46,600 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:08:46,600 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:08:46,600 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:08:46,600 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:46,600 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:08:46,743 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:08:46,786 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:08:46,786 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:46,786 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:46,786 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:46,786 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:08:46,916 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:08:46,961 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:46,961 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:46,961 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:08:47,090 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:08:47,159 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:47,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:47,159 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:08:47,291 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:08:47,362 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:47,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:47,363 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:08:47,491 DEBUG sendRcv: received response: (b'2022', 1)
2020-10-20 22:08:47,579 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:47,579 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:08:47,579 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:08:47,711 DEBUG sendRcv: received response: (b'2004', 1)
2020-10-20 22:08:47,780 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:08:47,781 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 0.6305541879990522, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:09:17,782 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:17,782 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:17,782 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:09:17,912 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 22:09:17,912 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:09:17,912 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:09:17,912 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:09:17,912 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:09:17,912 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:09:17,912 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:09:17,912 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:09:17,912 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:17,912 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:09:18,053 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:09:18,053 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:09:18,053 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,053 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,053 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:18,053 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:09:18,186 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:09:18,186 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,186 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:18,186 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:09:18,316 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:09:18,316 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,316 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:18,316 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:09:18,446 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:09:18,446 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,446 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:18,446 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:09:18,577 DEBUG sendRcv: received response: (b'1920', 1)
2020-10-20 22:09:18,577 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,577 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:09:18,577 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:09:18,706 DEBUG sendRcv: received response: (b'1909', 1)
2020-10-20 22:09:18,706 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:09:18,706 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0176403410294477, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:10:03,708 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:03,708 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:03,708 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:10:03,840 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 22:10:03,840 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:10:03,840 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:10:03,840 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:10:03,840 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:10:03,840 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:10:03,840 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:10:03,840 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:10:03,840 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:03,840 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:10:03,980 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:10:03,980 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:10:03,980 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:03,980 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:03,980 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:03,980 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:10:04,109 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:10:04,109 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:04,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:04,109 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:10:04,238 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:10:04,238 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:04,238 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:04,238 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:10:04,369 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:10:04,369 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:04,369 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:04,369 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:10:04,500 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-20 22:10:04,500 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:04,500 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:04,500 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:10:04,630 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-20 22:10:04,630 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:04,630 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0217809564927045, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:10:34,633 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:34,633 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:34,633 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:10:34,761 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 22:10:34,761 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:10:34,761 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:10:34,761 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:10:34,761 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:10:34,761 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:10:34,761 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:10:34,761 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:10:34,761 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:34,762 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:10:34,901 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:10:34,901 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:10:34,901 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:34,901 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:34,901 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:34,901 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:10:35,029 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:10:35,029 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:35,029 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:35,029 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:10:35,159 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:10:35,159 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:35,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:35,159 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:10:35,289 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:10:35,289 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:35,289 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:35,289 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:10:35,420 DEBUG sendRcv: received response: (b'1681', 1)
2020-10-20 22:10:35,420 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:35,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:10:35,420 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:10:35,550 DEBUG sendRcv: received response: (b'1670', 1)
2020-10-20 22:10:35,550 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:10:35,550 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.021873701319975, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:11:20,553 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:20,553 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:20,553 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:11:20,684 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 22:11:20,684 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:11:20,684 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:11:20,684 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:11:20,684 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:11:20,684 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:11:20,684 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:11:20,684 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:11:20,684 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:20,684 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:11:20,824 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:11:20,824 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:11:20,824 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:20,824 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:20,824 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:20,824 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:11:20,951 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:11:20,951 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:20,951 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:20,951 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:11:21,082 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:11:21,082 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:21,082 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:21,082 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:11:21,214 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:11:21,214 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:21,214 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:21,214 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:11:21,343 DEBUG sendRcv: received response: (b'1560', 1)
2020-10-20 22:11:21,343 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:21,343 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:11:21,343 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:11:21,473 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 22:11:21,473 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:11:21,473 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0228860266068402, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:12:06,477 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:06,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:06,477 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:12:06,607 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-20 22:12:06,607 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:12:06,607 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:12:06,607 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:12:06,607 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:12:06,607 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:12:06,607 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:12:06,607 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:12:06,607 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:06,607 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:12:06,747 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:12:06,747 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:12:06,747 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:06,747 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:06,747 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:06,747 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:12:06,875 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:12:06,875 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:06,875 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:06,875 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:12:07,005 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:12:07,005 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:07,005 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:07,005 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:12:07,136 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:12:07,136 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:07,136 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:07,136 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:12:07,266 DEBUG sendRcv: received response: (b'1442', 1)
2020-10-20 22:12:07,266 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:07,266 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:07,266 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:12:07,397 DEBUG sendRcv: received response: (b'1431', 1)
2020-10-20 22:12:07,397 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:07,397 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0219311601975385, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:12:37,398 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:37,398 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:37,398 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:12:37,527 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-20 22:12:37,527 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:12:37,527 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:12:37,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:12:37,527 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:12:37,527 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:12:37,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:12:37,527 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:12:37,527 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:37,528 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:12:37,667 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:12:37,667 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:12:37,667 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:37,667 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:37,667 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:37,667 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:12:37,796 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:12:37,796 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:37,796 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:37,796 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:12:37,926 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:12:37,926 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:37,926 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:37,926 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:12:38,057 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:12:38,057 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:38,057 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:38,057 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:12:38,187 DEBUG sendRcv: received response: (b'1320', 1)
2020-10-20 22:12:38,187 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:38,187 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:12:38,187 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:12:38,316 DEBUG sendRcv: received response: (b'1310', 1)
2020-10-20 22:12:38,316 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:12:38,316 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0228028185227338, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:13:23,318 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:23,318 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:23,318 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:13:23,449 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-20 22:13:23,449 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:13:23,449 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:13:23,449 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:13:23,449 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:13:23,450 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:13:23,450 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:13:23,450 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:13:23,450 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:23,450 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:13:23,590 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:13:23,590 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:13:23,590 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:23,590 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:23,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:23,590 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:13:23,719 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:13:23,719 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:23,719 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:23,719 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:13:23,848 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:13:23,848 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:23,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:23,848 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:13:23,979 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:13:23,979 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:23,979 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:23,979 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:13:24,109 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-20 22:13:24,109 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:24,109 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:24,109 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:13:24,240 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-20 22:13:24,240 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:24,240 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0224387533524457, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:13:54,243 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:54,243 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:54,243 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:13:54,370 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-20 22:13:54,370 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:13:54,370 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:13:54,370 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:13:54,370 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:13:54,370 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:13:54,370 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:13:54,370 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:13:54,370 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:54,370 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:13:54,511 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:13:54,511 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:13:54,511 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:54,511 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:54,511 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:54,511 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:13:54,639 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:13:54,639 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:54,639 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:54,639 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:13:54,769 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:13:54,769 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:54,769 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:54,769 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:13:54,898 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:13:54,898 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:54,898 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:54,898 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:13:55,030 DEBUG sendRcv: received response: (b'1081', 1)
2020-10-20 22:13:55,030 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:55,030 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:13:55,030 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:13:55,160 DEBUG sendRcv: received response: (b'1070', 1)
2020-10-20 22:13:55,160 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:13:55,160 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0218675024369184, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:14:40,163 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,163 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,163 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:14:40,292 DEBUG sendRcv: received response: (b'920', 1)
2020-10-20 22:14:40,292 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:14:40,292 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:14:40,292 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:14:40,292 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:14:40,292 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:14:40,292 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:14:40,292 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:14:40,292 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,292 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:14:40,434 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:14:40,434 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:14:40,434 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,434 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,434 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,434 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:14:40,564 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:14:40,564 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,564 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:14:40,692 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:14:40,692 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,692 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,692 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:14:40,823 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:14:40,823 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,823 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,823 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:14:40,952 DEBUG sendRcv: received response: (b'960', 1)
2020-10-20 22:14:40,952 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:40,952 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:14:40,952 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:14:41,082 DEBUG sendRcv: received response: (b'949', 1)
2020-10-20 22:14:41,082 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:14:41,082 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0215790159562055, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:15:26,086 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,086 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,086 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:15:26,216 DEBUG sendRcv: received response: (b'800', 1)
2020-10-20 22:15:26,216 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:15:26,216 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:15:26,216 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:15:26,216 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:15:26,216 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:15:26,216 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:15:26,216 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:15:26,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,216 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:15:26,358 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:15:26,358 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:15:26,358 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,358 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,358 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,358 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:15:26,485 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:15:26,485 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,485 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,485 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:15:26,615 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:15:26,615 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,615 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,615 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:15:26,746 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:15:26,746 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,746 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,746 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:15:26,875 DEBUG sendRcv: received response: (b'842', 1)
2020-10-20 22:15:26,875 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:26,875 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:26,875 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:15:27,006 DEBUG sendRcv: received response: (b'831', 1)
2020-10-20 22:15:27,006 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:27,006 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.022164810405058, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:15:57,008 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,008 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,008 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:15:57,136 DEBUG sendRcv: received response: (b'680', 1)
2020-10-20 22:15:57,136 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'speed_code': 20}
2020-10-20 22:15:57,136 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:15:57,136 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'I'}
2020-10-20 22:15:57,136 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'rel_position': -120}
2020-10-20 22:15:57,136 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'delay_ms': 1000}
2020-10-20 22:15:57,137 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'to_port': 'O'}
2020-10-20 22:15:57,137 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'minimal_reset': False}
2020-10-20 22:15:57,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,137 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:15:57,277 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:15:57,277 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:15:57,277 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,277 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,277 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,277 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:15:57,405 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:15:57,405 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,405 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:15:57,536 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:15:57,536 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,536 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,536 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:15:57,666 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:15:57,666 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,666 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:15:57,796 DEBUG sendRcv: received response: (b'721', 1)
2020-10-20 22:15:57,796 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,796 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:15:57,796 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:15:57,926 DEBUG sendRcv: received response: (b'710', 1)
2020-10-20 22:15:57,926 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>}
2020-10-20 22:15:57,926 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001AA21626640>, 'timeout': 1.0230433828690473, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:32:05,091 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'on': False}
2020-10-20 22:32:05,103 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:05,103 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 22:32:05,234 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:32:05,234 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:05,234 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:05,234 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:05,234 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:32:05,362 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:32:05,362 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:05,362 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:05,362 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:32:05,493 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:32:05,493 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:05,493 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:05,493 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:32:05,621 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:32:05,621 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:05,621 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:05,621 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:32:05,751 DEBUG sendRcv: received response: (b'560', 1)
2020-10-20 22:32:05,751 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:05,751 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 22:32:05,751 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:05,751 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 22:32:05,879 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:32:05,926 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:32:13,728 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'speed_code': 12}
2020-10-20 22:32:13,728 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'speed_code': 10}
2020-10-20 22:32:13,728 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'O'}
2020-10-20 22:32:13,728 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'delay_ms': 1000}
2020-10-20 22:32:13,728 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'abs_position': 2000}
2020-10-20 22:32:13,728 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'delay_ms': 1000}
2020-10-20 22:32:13,728 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'minimal_reset': False}
2020-10-20 22:32:13,728 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:13,728 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 22:32:13,878 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:32:13,878 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:32:13,878 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:13,878 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:13,878 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:13,879 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:32:14,010 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 22:32:14,010 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:14,010 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:14,010 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:32:14,141 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 22:32:14,141 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:14,141 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:14,141 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:32:14,271 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 22:32:14,271 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:14,271 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:14,271 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:32:14,399 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 22:32:14,399 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:14,399 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:14,399 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:32:14,522 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 22:32:14,522 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:14,522 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'timeout': 1.242562891115461, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:32:24,523 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:24,523 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:24,523 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:32:24,655 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 22:32:39,656 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:39,656 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:39,656 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:32:39,788 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 22:32:39,788 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'speed_code': 20}
2020-10-20 22:32:39,788 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:32:39,788 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'I'}
2020-10-20 22:32:39,788 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'rel_position': -120}
2020-10-20 22:32:39,788 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'delay_ms': 1000}
2020-10-20 22:32:39,789 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'O'}
2020-10-20 22:32:39,789 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'minimal_reset': False}
2020-10-20 22:32:39,789 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:39,789 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:32:39,928 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:32:39,928 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:32:39,928 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:39,928 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:39,928 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:39,928 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:32:40,057 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:32:40,057 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:40,057 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:40,057 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:32:40,186 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:32:40,186 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:40,186 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:40,186 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:32:40,316 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:32:40,316 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:40,316 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:40,316 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:32:40,449 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 22:32:40,449 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:40,449 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:32:40,449 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:32:40,577 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-20 22:32:40,577 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:32:40,577 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'timeout': 1.0234575159409467, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:33:10,579 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:10,579 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:10,579 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:33:10,708 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 22:33:10,708 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'speed_code': 20}
2020-10-20 22:33:10,708 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:33:10,708 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'I'}
2020-10-20 22:33:10,708 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'rel_position': -120}
2020-10-20 22:33:10,708 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'delay_ms': 1000}
2020-10-20 22:33:10,709 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'O'}
2020-10-20 22:33:10,709 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'minimal_reset': False}
2020-10-20 22:33:10,709 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:10,709 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:33:10,848 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:33:10,848 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:33:10,848 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:10,848 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:10,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:10,848 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:33:10,977 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:33:10,977 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:10,977 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:10,977 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:33:11,107 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:33:11,107 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:11,107 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:11,107 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:33:11,236 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:33:11,236 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:11,236 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:11,236 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:33:11,368 DEBUG sendRcv: received response: (b'1922', 1)
2020-10-20 22:33:11,368 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:11,368 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:11,368 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:33:11,497 DEBUG sendRcv: received response: (b'1911', 1)
2020-10-20 22:33:11,497 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:11,497 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'timeout': 1.0241181738236371, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:33:41,498 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:41,498 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:41,498 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:33:41,628 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 22:33:41,628 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'speed_code': 20}
2020-10-20 22:33:41,628 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:33:41,628 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'I'}
2020-10-20 22:33:41,628 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'rel_position': -120}
2020-10-20 22:33:41,628 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'delay_ms': 1000}
2020-10-20 22:33:41,628 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'to_port': 'O'}
2020-10-20 22:33:41,629 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'minimal_reset': False}
2020-10-20 22:33:41,629 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:41,629 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:33:41,769 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:33:41,769 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:33:41,769 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:41,769 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:41,769 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:41,769 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:33:41,898 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:33:41,898 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:41,898 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:41,898 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:33:42,027 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:33:42,027 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:42,027 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:42,027 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:33:42,158 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:33:42,158 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:42,158 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:42,158 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:33:42,288 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-20 22:33:42,288 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:42,288 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:33:42,288 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:33:42,418 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-20 22:33:42,418 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:33:42,418 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'timeout': 1.023218620524687, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:34:27,420 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>}
2020-10-20 22:34:27,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001F4A2A76640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:34:27,420 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:34:27,728 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:35:25,874 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on': False}
2020-10-20 22:35:25,874 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:25,874 DEBUG sendRcv: sending cmd_string: N0R
2020-10-20 22:35:26,004 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:35:26,004 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:26,004 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:26,004 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:26,004 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:35:26,138 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:35:26,138 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:26,138 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:26,138 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:35:26,267 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:35:26,267 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:26,267 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:26,267 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:35:26,397 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:35:26,397 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:26,397 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:26,397 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:35:26,528 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 22:35:26,528 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:26,528 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-20 22:35:26,528 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:26,528 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-20 22:35:26,654 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:35:26,654 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:35:38,702 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 12}
2020-10-20 22:35:38,702 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 10}
2020-10-20 22:35:38,702 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'O'}
2020-10-20 22:35:38,702 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:35:38,702 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'abs_position': 2000}
2020-10-20 22:35:38,702 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:35:38,702 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'minimal_reset': False}
2020-10-20 22:35:38,702 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:38,702 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-20 22:35:38,851 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:35:38,851 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:35:38,851 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:38,851 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:38,851 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:38,851 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:35:38,979 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 22:35:38,979 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:38,979 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:38,979 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:35:39,111 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-20 22:35:39,111 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:39,111 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:39,111 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:35:39,239 DEBUG sendRcv: received response: (b'901', 1)
2020-10-20 22:35:39,239 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:39,239 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:39,239 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:35:39,368 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 22:35:39,368 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:39,368 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:39,368 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:35:39,493 DEBUG sendRcv: received response: (b'0', 1)
2020-10-20 22:35:39,493 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:39,493 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:35:49,494 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:35:49,494 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:35:49,494 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:35:49,625 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 22:36:04,626 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:04,626 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:04,626 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:36:04,757 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-20 22:36:04,757 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 20}
2020-10-20 22:36:04,757 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:36:04,757 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I'}
2020-10-20 22:36:04,757 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'rel_position': -120}
2020-10-20 22:36:04,757 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:36:04,757 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'O'}
2020-10-20 22:36:04,758 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'minimal_reset': False}
2020-10-20 22:36:04,758 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:04,758 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:36:04,897 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:36:04,897 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:36:04,897 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:04,897 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:04,897 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:04,897 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:36:05,026 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:36:05,026 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:05,026 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:05,026 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:36:05,156 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:36:05,156 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:05,156 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:05,156 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:36:05,286 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:36:05,286 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:05,286 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:05,286 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:36:05,416 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-20 22:36:05,416 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:05,416 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:05,416 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:36:05,547 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-20 22:36:05,547 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:05,547 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 1.0231191999772016, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:36:35,551 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:35,551 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:35,551 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:36:35,682 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-20 22:36:35,682 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 20}
2020-10-20 22:36:35,682 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:36:35,682 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I'}
2020-10-20 22:36:35,682 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'rel_position': -120}
2020-10-20 22:36:35,682 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:36:35,682 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'O'}
2020-10-20 22:36:35,683 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'minimal_reset': False}
2020-10-20 22:36:35,683 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:35,683 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:36:35,823 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:36:35,823 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:36:35,823 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:35,823 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:35,823 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:35,823 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:36:35,952 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:36:35,952 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:35,952 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:35,952 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:36:36,082 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:36:36,082 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:36,082 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:36,082 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:36:36,211 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:36:36,211 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:36,211 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:36,211 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:36:36,342 DEBUG sendRcv: received response: (b'1922', 1)
2020-10-20 22:36:36,342 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:36,342 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:36:36,342 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:36:36,473 DEBUG sendRcv: received response: (b'1911', 1)
2020-10-20 22:36:36,473 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:36:36,473 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 1.0213639623978559, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:37:06,475 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:06,475 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:06,475 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:37:06,602 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-20 22:37:06,602 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 20}
2020-10-20 22:37:06,602 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:37:06,602 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I'}
2020-10-20 22:37:06,602 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'rel_position': -120}
2020-10-20 22:37:06,603 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:37:06,603 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'O'}
2020-10-20 22:37:06,603 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'minimal_reset': False}
2020-10-20 22:37:06,603 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:06,603 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:37:06,744 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:37:06,744 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:37:06,744 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:06,744 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:06,744 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:06,744 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:37:06,877 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:37:06,877 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:06,877 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:06,877 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:37:07,007 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:37:07,007 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:07,007 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:07,007 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:37:07,137 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:37:07,137 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:07,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:07,137 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:37:07,268 DEBUG sendRcv: received response: (b'1800', 1)
2020-10-20 22:37:07,268 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:07,268 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:07,268 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:37:07,398 DEBUG sendRcv: received response: (b'1789', 1)
2020-10-20 22:37:07,398 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:07,398 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 1.0169396288254682, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:37:52,402 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:52,402 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:52,402 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:37:52,532 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-20 22:37:52,532 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 20}
2020-10-20 22:37:52,532 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:37:52,532 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I'}
2020-10-20 22:37:52,532 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'rel_position': -120}
2020-10-20 22:37:52,532 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:37:52,532 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'O'}
2020-10-20 22:37:52,532 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'minimal_reset': False}
2020-10-20 22:37:52,532 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:52,532 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:37:52,672 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:37:52,672 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:37:52,672 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:52,672 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:52,672 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:52,672 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:37:52,805 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:37:52,805 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:52,805 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:52,805 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:37:52,936 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:37:52,936 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:52,936 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:52,936 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:37:53,065 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:37:53,065 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:53,065 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:53,065 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:37:53,196 DEBUG sendRcv: received response: (b'1680', 1)
2020-10-20 22:37:53,196 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:53,196 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:37:53,196 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:37:53,326 DEBUG sendRcv: received response: (b'1669', 1)
2020-10-20 22:37:53,326 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:37:53,326 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 1.0181066877701703, 'polling_interval': 0.3, 'delay': None}
2020-10-20 22:38:23,328 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:23,328 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:23,328 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:38:23,457 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-20 22:38:23,457 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'speed_code': 20}
2020-10-20 22:38:23,457 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-20 22:38:23,457 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'I'}
2020-10-20 22:38:23,457 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'rel_position': -120}
2020-10-20 22:38:23,457 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'delay_ms': 1000}
2020-10-20 22:38:23,457 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'to_port': 'O'}
2020-10-20 22:38:23,457 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'minimal_reset': False}
2020-10-20 22:38:23,457 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:23,457 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-20 22:38:23,597 DEBUG sendRcv: received response: (None, 0)
2020-10-20 22:38:23,597 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'on_execute': True, 'minimal_reset': False}
2020-10-20 22:38:23,597 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:23,597 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:23,597 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:23,597 DEBUG sendRcv: sending cmd_string: ?1
2020-10-20 22:38:23,725 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:38:23,725 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:23,725 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:23,725 DEBUG sendRcv: sending cmd_string: ?2
2020-10-20 22:38:23,855 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:38:23,855 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:23,855 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:23,855 DEBUG sendRcv: sending cmd_string: ?3
2020-10-20 22:38:23,986 DEBUG sendRcv: received response: (b'170', 1)
2020-10-20 22:38:23,986 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:23,986 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:23,986 DEBUG sendRcv: sending cmd_string: ?6
2020-10-20 22:38:24,116 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-20 22:38:24,116 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:24,116 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-20 22:38:24,116 DEBUG sendRcv: sending cmd_string: ?
2020-10-20 22:38:24,247 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-20 22:38:24,247 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>}
2020-10-20 22:38:24,247 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000216B9366640>, 'timeout': 1.0220324880936567, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:02:43,438 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'on': False}
2020-10-21 00:02:43,460 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:43,460 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:02:43,586 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:02:43,586 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:43,586 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:43,586 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:43,586 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:02:43,715 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:02:43,715 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:43,715 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:43,715 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:02:43,845 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:02:43,845 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:43,845 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:43,845 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:02:43,974 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:02:43,974 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:43,974 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:43,974 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:02:44,106 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-21 00:02:44,106 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:44,106 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:02:44,106 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:44,106 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:02:44,236 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:02:44,236 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:02:55,436 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'speed_code': 12}
2020-10-21 00:02:55,436 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'speed_code': 10}
2020-10-21 00:02:55,436 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'O'}
2020-10-21 00:02:55,436 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'delay_ms': 1000}
2020-10-21 00:02:55,436 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'abs_position': 2000}
2020-10-21 00:02:55,436 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'delay_ms': 1000}
2020-10-21 00:02:55,436 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'minimal_reset': False}
2020-10-21 00:02:55,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:55,436 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:02:55,584 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:02:55,584 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:02:55,584 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:55,584 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:55,584 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:55,584 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:02:55,713 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:02:55,713 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:55,713 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:55,713 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:02:55,844 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:02:55,844 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:55,844 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:55,844 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:02:55,972 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:02:55,972 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:55,972 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:55,972 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:02:56,101 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:02:56,101 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:56,101 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:02:56,101 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:02:56,226 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:02:56,226 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:02:56,226 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'timeout': 0.19674642192295644, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:03:06,227 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:06,227 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:06,227 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:03:06,357 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:03:21,358 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:21,358 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:21,358 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:03:21,490 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:03:21,490 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'speed_code': 20}
2020-10-21 00:03:21,490 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:03:21,490 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'I'}
2020-10-21 00:03:21,490 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'rel_position': -120}
2020-10-21 00:03:21,490 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'delay_ms': 1000}
2020-10-21 00:03:21,490 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'O'}
2020-10-21 00:03:21,490 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'minimal_reset': False}
2020-10-21 00:03:21,490 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:21,490 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:03:21,630 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:03:21,630 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:03:21,630 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:21,630 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:21,630 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:21,630 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:03:21,759 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:03:21,759 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:21,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:21,759 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:03:21,889 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:03:21,889 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:21,889 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:21,889 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:03:22,019 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:03:22,019 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:22,019 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:22,019 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:03:22,150 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-21 00:03:22,150 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:22,150 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:22,150 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:03:22,279 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-21 00:03:22,279 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:22,279 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'timeout': 1.0223486311295453, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:03:52,283 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:52,283 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:52,283 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:03:52,415 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-21 00:03:52,415 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'speed_code': 20}
2020-10-21 00:03:52,415 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:03:52,415 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'I'}
2020-10-21 00:03:52,415 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'rel_position': -120}
2020-10-21 00:03:52,415 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'delay_ms': 1000}
2020-10-21 00:03:52,415 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'O'}
2020-10-21 00:03:52,416 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'minimal_reset': False}
2020-10-21 00:03:52,416 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:52,416 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:03:52,745 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:03:52,745 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:03:52,745 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:52,745 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:52,745 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:52,745 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:03:52,874 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:03:52,874 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:52,874 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:52,874 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:03:53,004 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:03:53,004 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:53,004 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:53,004 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:03:53,135 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:03:53,135 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:53,135 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:53,135 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:03:53,265 DEBUG sendRcv: received response: (b'1904', 1)
2020-10-21 00:03:53,265 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:53,265 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:03:53,265 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:03:53,395 DEBUG sendRcv: received response: (b'1893', 1)
2020-10-21 00:03:53,395 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:03:53,395 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'timeout': 0.8326570875504438, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:04:23,398 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:23,398 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:23,398 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:04:23,526 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-21 00:04:23,526 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'speed_code': 20}
2020-10-21 00:04:23,526 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:04:23,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'I'}
2020-10-21 00:04:23,527 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'rel_position': -120}
2020-10-21 00:04:23,527 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'delay_ms': 1000}
2020-10-21 00:04:23,527 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'to_port': 'O'}
2020-10-21 00:04:23,527 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'minimal_reset': False}
2020-10-21 00:04:23,527 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:23,527 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:04:23,666 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:04:23,666 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:04:23,666 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:23,666 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:23,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:23,666 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:04:23,795 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:04:23,795 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:23,795 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:23,795 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:04:23,925 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:04:23,925 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:23,925 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:23,925 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:04:24,055 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:04:24,055 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:24,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:24,055 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:04:24,185 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-21 00:04:24,185 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:24,185 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:04:24,185 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:04:24,316 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-21 00:04:24,316 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:04:24,316 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'timeout': 1.0232527143814985, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:05:09,317 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>}
2020-10-21 00:05:09,317 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002BE02A56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:05:09,317 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:05:09,624 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:06:37,310 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'on': False}
2020-10-21 00:06:37,310 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:37,310 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:06:37,436 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:06:37,436 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:37,436 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:37,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:37,436 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:06:37,565 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:06:37,565 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:37,565 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:37,565 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:06:37,695 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:06:37,695 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:37,695 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:37,695 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:06:37,824 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:06:37,824 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:37,824 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:37,824 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:06:37,955 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-21 00:06:37,955 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:37,955 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:06:37,955 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:37,955 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:06:38,081 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:06:38,081 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:06:50,555 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'speed_code': 12}
2020-10-21 00:06:50,555 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'speed_code': 10}
2020-10-21 00:06:50,555 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'to_port': 'O'}
2020-10-21 00:06:50,555 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'delay_ms': 1000}
2020-10-21 00:06:50,555 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'abs_position': 2000}
2020-10-21 00:06:50,555 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'delay_ms': 1000}
2020-10-21 00:06:50,555 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'minimal_reset': False}
2020-10-21 00:06:50,555 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:50,555 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:06:50,704 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:06:50,704 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:06:50,704 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:50,704 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:50,704 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:50,704 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:06:50,833 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:06:50,833 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:50,833 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:50,833 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:06:50,963 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:06:50,963 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:50,963 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:50,963 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:06:51,094 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:06:51,094 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:51,094 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:51,094 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:06:51,221 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:06:51,221 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:51,221 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:06:51,221 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:06:51,346 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:06:51,346 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:06:51,346 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:07:01,346 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:01,346 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:01,346 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:07:01,478 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:07:16,480 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:16,480 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:16,480 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:07:16,610 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:07:16,610 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'speed_code': 20}
2020-10-21 00:07:16,610 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:07:16,610 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'to_port': 'I'}
2020-10-21 00:07:16,610 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'rel_position': -120}
2020-10-21 00:07:16,610 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'delay_ms': 1000}
2020-10-21 00:07:16,610 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'to_port': 'O'}
2020-10-21 00:07:16,611 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'minimal_reset': False}
2020-10-21 00:07:16,611 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:16,611 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:07:16,750 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:07:16,750 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:07:16,750 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:16,750 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:16,750 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:16,750 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:07:16,879 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:07:16,879 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:16,879 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:16,879 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:07:17,008 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:07:17,008 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:17,008 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:17,008 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:07:17,139 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:07:17,139 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:17,139 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:17,139 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:07:17,270 DEBUG sendRcv: received response: (b'2041', 1)
2020-10-21 00:07:17,270 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:17,270 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:17,270 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:07:17,399 DEBUG sendRcv: received response: (b'2030', 1)
2020-10-21 00:07:17,399 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:17,399 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'timeout': 1.0229155905106488, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:07:47,401 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>}
2020-10-21 00:07:47,401 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002E6E20B6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:07:47,401 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:07:47,706 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:08:20,137 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on': False}
2020-10-21 00:08:20,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:20,137 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:08:20,266 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:08:20,266 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:20,266 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:20,266 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:20,266 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:08:20,394 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:08:20,394 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:20,394 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:20,394 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:08:20,524 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:08:20,524 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:20,524 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:20,524 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:08:20,655 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:08:20,655 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:20,655 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:20,655 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:08:20,785 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-21 00:08:20,785 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:20,785 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:08:20,785 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:20,785 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:08:20,911 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:08:20,911 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:08:34,234 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 12}
2020-10-21 00:08:34,234 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 10}
2020-10-21 00:08:34,234 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:08:34,234 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:08:34,234 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'abs_position': 2000}
2020-10-21 00:08:34,234 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:08:34,235 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:08:34,235 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:34,235 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:08:34,384 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:08:34,384 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:08:34,384 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:34,384 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:34,384 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:34,384 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:08:34,512 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:08:34,512 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:34,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:34,512 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:08:34,644 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:08:34,644 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:34,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:34,644 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:08:34,772 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:08:34,772 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:34,772 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:34,772 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:08:34,900 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:08:34,900 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:34,900 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:34,900 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:08:35,025 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:08:35,025 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:35,025 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:08:45,026 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:08:45,026 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:08:45,026 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:08:45,157 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:09:00,158 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,158 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,158 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:09:00,290 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:09:00,290 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:09:00,290 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:09:00,290 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:09:00,290 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:09:00,290 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:09:00,291 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:09:00,291 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:09:00,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,291 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:09:00,431 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:09:00,431 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:09:00,431 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,431 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,431 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,431 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:09:00,563 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:09:00,563 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,563 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,563 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:09:00,693 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:09:00,693 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,693 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,693 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:09:00,824 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:09:00,824 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,824 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,824 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:09:00,955 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-21 00:09:00,955 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:00,955 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:00,955 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:09:01,084 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-21 00:09:01,084 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:01,084 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.0183668024399701, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:09:31,087 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,087 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:09:31,215 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-21 00:09:31,215 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:09:31,215 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:09:31,215 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:09:31,215 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:09:31,215 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:09:31,216 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:09:31,216 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:09:31,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,216 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:09:31,356 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:09:31,356 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:09:31,356 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,356 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,356 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:09:31,484 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:09:31,484 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,484 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,484 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:09:31,614 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:09:31,614 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,614 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,614 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:09:31,744 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:09:31,744 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,744 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,744 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:09:31,875 DEBUG sendRcv: received response: (b'1922', 1)
2020-10-21 00:09:31,875 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:31,875 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:09:31,875 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:09:32,005 DEBUG sendRcv: received response: (b'1911', 1)
2020-10-21 00:09:32,005 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:09:32,005 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.0225131399491254, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:10:02,007 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,007 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,007 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:10:02,136 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-21 00:10:02,136 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:10:02,136 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:10:02,136 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:10:02,136 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:10:02,136 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:10:02,136 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:10:02,137 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:10:02,137 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,137 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:10:02,276 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:10:02,276 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:10:02,276 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,276 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,276 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,276 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:10:02,405 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:10:02,405 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,405 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:10:02,534 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:10:02,534 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,534 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,534 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:10:02,665 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:10:02,665 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,665 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,665 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:10:02,796 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-21 00:10:02,796 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,796 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:02,796 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:10:02,926 DEBUG sendRcv: received response: (b'1790', 1)
2020-10-21 00:10:02,926 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:02,926 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.0228474027970258, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:10:47,928 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:47,928 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:47,928 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:10:48,058 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-21 00:10:48,058 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:10:48,058 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:10:48,058 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:10:48,058 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:10:48,058 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:10:48,058 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:10:48,058 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:10:48,058 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:48,058 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:10:48,199 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:10:48,199 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:10:48,199 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,199 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,199 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:48,199 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:10:48,327 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:10:48,327 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,327 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:48,327 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:10:48,458 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:10:48,458 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,458 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:48,458 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:10:48,588 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:10:48,588 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,588 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:48,588 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:10:48,719 DEBUG sendRcv: received response: (b'1680', 1)
2020-10-21 00:10:48,719 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,719 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:10:48,719 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:10:48,848 DEBUG sendRcv: received response: (b'1669', 1)
2020-10-21 00:10:48,848 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:10:48,848 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.0217323191025678, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:11:33,852 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:33,852 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:33,852 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:11:33,982 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-21 00:11:33,982 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:11:33,982 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:11:33,982 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:11:33,982 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:11:33,982 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:11:33,982 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:11:33,982 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:11:33,982 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:33,982 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:11:34,122 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:11:34,122 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:11:34,122 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,122 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,122 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:34,122 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:11:34,251 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:11:34,251 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,251 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:34,251 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:11:34,380 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:11:34,380 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,380 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:34,380 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:11:34,511 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:11:34,511 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,511 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:34,511 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:11:34,642 DEBUG sendRcv: received response: (b'1561', 1)
2020-10-21 00:11:34,642 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,642 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:11:34,642 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:11:34,772 DEBUG sendRcv: received response: (b'1549', 1)
2020-10-21 00:11:34,772 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:11:34,772 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.0226228124955121, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:12:04,775 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:04,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:04,775 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:12:04,902 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-21 00:12:04,902 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:12:04,902 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:12:04,903 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:12:04,903 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:12:04,903 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:12:04,903 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:12:04,903 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:12:04,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:04,903 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:12:05,044 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:12:05,044 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:12:05,044 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,044 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,044 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:05,044 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:12:05,176 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:12:05,176 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,176 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:05,176 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:12:05,306 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:12:05,306 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,306 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:05,306 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:12:05,436 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:12:05,436 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:05,436 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:12:05,567 DEBUG sendRcv: received response: (b'1440', 1)
2020-10-21 00:12:05,567 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,567 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:05,567 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:12:05,697 DEBUG sendRcv: received response: (b'1429', 1)
2020-10-21 00:12:05,697 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:05,697 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.0175874121048871, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:12:50,700 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:50,700 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:50,700 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:12:50,830 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-21 00:12:50,830 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:12:50,830 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:12:50,830 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:12:50,830 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:12:50,830 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:12:50,830 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:12:50,830 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:12:50,830 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:50,831 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:12:50,971 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:12:50,971 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:12:50,971 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:50,971 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:50,971 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:50,971 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:12:51,099 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:12:51,198 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:51,198 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:51,198 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:12:51,329 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:12:51,329 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:51,329 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:51,329 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:12:51,459 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:12:51,459 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:51,459 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:51,459 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:12:51,590 DEBUG sendRcv: received response: (b'1313', 1)
2020-10-21 00:12:51,590 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:51,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:12:51,590 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:12:51,722 DEBUG sendRcv: received response: (b'1302', 1)
2020-10-21 00:12:51,722 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:12:51,722 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0.9205028898575727, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:13:21,724 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:21,724 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:21,724 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:13:21,855 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-21 00:13:21,855 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:13:21,855 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:13:21,855 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:13:21,855 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:13:21,855 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:13:21,855 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:13:21,855 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:13:21,855 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:21,855 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:13:21,996 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:13:21,996 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:13:21,996 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:21,996 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:21,996 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:21,996 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:13:22,123 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:13:22,123 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:22,123 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:22,123 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:13:22,254 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:13:22,254 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:22,254 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:22,254 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:13:22,383 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:13:22,383 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:22,383 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:22,383 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:13:22,516 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-21 00:13:22,516 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:22,516 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:13:22,516 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:13:22,645 DEBUG sendRcv: received response: (b'1189', 1)
2020-10-21 00:13:22,645 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:13:22,645 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.022181022868437, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:14:07,648 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:07,648 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:07,648 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:14:07,779 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-21 00:14:07,779 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:14:07,779 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:14:07,780 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:14:07,780 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:14:07,780 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:14:07,780 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:14:07,780 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:14:07,780 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:07,780 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:14:07,920 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:14:07,920 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:14:07,920 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:07,920 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:07,920 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:07,920 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:14:08,053 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:14:08,053 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:08,053 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:08,053 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:14:08,183 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:14:08,183 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:08,183 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:08,183 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:14:08,313 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:14:08,313 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:08,313 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:08,313 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:14:08,444 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-21 00:14:08,444 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:08,444 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:08,444 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:14:08,574 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-21 00:14:08,574 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:08,574 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 1.017411220774931, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:14:53,578 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:53,609 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:53,609 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:14:53,735 DEBUG sendRcv: received response: (b'920', 1)
2020-10-21 00:14:53,735 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:14:53,735 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:14:53,735 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:14:53,735 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:14:53,735 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:14:53,735 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:14:53,735 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:14:53,735 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:53,735 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:14:53,878 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:14:53,926 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:14:53,926 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:53,926 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:53,926 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:53,926 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:14:54,056 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:14:54,160 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:54,160 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:54,160 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:14:54,291 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:14:54,323 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:54,323 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:54,323 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:14:54,451 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:14:54,495 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:54,495 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:54,495 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:14:54,626 DEBUG sendRcv: received response: (b'941', 1)
2020-10-21 00:14:54,698 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:54,698 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:14:54,698 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:14:54,825 DEBUG sendRcv: received response: (b'924', 1)
2020-10-21 00:14:54,864 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:14:54,864 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0.6831281072953168, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:15:24,866 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:24,946 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:24,946 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:15:25,077 DEBUG sendRcv: received response: (b'800', 1)
2020-10-21 00:15:25,151 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:15:25,151 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:15:25,151 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:15:25,152 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:15:25,152 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:15:25,152 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:15:25,152 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:15:25,152 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:25,152 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:15:25,294 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:15:25,335 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:15:25,335 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:25,335 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:25,335 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:25,335 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:15:25,467 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:15:25,549 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:25,549 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:25,549 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:15:25,681 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:15:25,766 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:25,766 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:25,766 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:15:25,897 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:15:25,980 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:25,980 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:25,980 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:15:26,111 DEBUG sendRcv: received response: (b'815', 1)
2020-10-21 00:15:26,194 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:26,194 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:15:26,194 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:15:26,321 DEBUG sendRcv: received response: (b'797', 1)
2020-10-21 00:15:26,417 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:15:26,417 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0.5466971285202924, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:16:11,419 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:11,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:11,419 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:16:11,549 DEBUG sendRcv: received response: (b'680', 1)
2020-10-21 00:16:11,674 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:16:11,674 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:16:11,674 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:16:11,674 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:16:11,674 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:16:11,674 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:16:11,674 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:16:11,674 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:11,675 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:16:11,816 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:16:11,906 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:16:11,907 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:11,907 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:11,907 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:11,907 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:16:12,035 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:16:12,141 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:12,141 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:12,141 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:16:12,269 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:16:12,327 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:12,327 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:12,327 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:16:12,459 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:16:12,519 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:12,519 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:12,519 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:16:12,650 DEBUG sendRcv: received response: (b'695', 1)
2020-10-21 00:16:12,708 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:12,708 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:12,708 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:16:12,839 DEBUG sendRcv: received response: (b'679', 1)
2020-10-21 00:16:12,840 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:12,840 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0.6458802111008588, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:16:42,842 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:42,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:42,842 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:16:42,969 DEBUG sendRcv: received response: (b'560', 1)
2020-10-21 00:16:43,037 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:16:43,037 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:16:43,037 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:16:43,037 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:16:43,037 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:16:43,037 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:16:43,037 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:16:43,037 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:43,037 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:16:43,176 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:16:43,216 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:16:43,216 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:43,216 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:43,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:43,216 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:16:43,345 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:16:43,345 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:43,345 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:43,345 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:16:43,475 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:16:43,539 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:43,539 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:43,539 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:16:43,670 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:16:43,701 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:43,701 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:43,701 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:16:43,830 DEBUG sendRcv: received response: (b'589', 1)
2020-10-21 00:16:43,907 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:43,907 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:16:43,907 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:16:44,035 DEBUG sendRcv: received response: (b'572', 1)
2020-10-21 00:16:44,100 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:16:44,100 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0.7487892992356244, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:17:29,103 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:29,107 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:29,107 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:17:29,238 DEBUG sendRcv: received response: (b'440', 1)
2020-10-21 00:17:29,305 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'speed_code': 20}
2020-10-21 00:17:29,305 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:17:29,305 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'I'}
2020-10-21 00:17:29,305 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'rel_position': -120}
2020-10-21 00:17:29,305 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'delay_ms': 1000}
2020-10-21 00:17:29,305 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'to_port': 'O'}
2020-10-21 00:17:29,305 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'minimal_reset': False}
2020-10-21 00:17:29,305 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:29,305 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:17:29,445 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:17:29,501 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:17:29,501 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:29,501 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:29,501 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:29,501 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:17:29,633 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:17:29,678 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:29,678 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:29,678 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:17:29,808 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:17:29,813 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:29,813 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:29,813 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:17:29,943 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:17:30,102 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:30,102 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:30,102 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:17:30,233 DEBUG sendRcv: received response: (b'458', 1)
2020-10-21 00:17:30,298 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:30,298 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:17:30,298 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:17:30,427 DEBUG sendRcv: received response: (b'441', 1)
2020-10-21 00:17:30,500 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:17:30,500 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'timeout': 0.6173167116501752, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:18:00,502 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>}
2020-10-21 00:18:00,502 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001E6D10D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:00,502 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:18:00,810 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:18:37,386 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on': False}
2020-10-21 00:18:37,387 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:37,387 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:18:37,514 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:18:37,514 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:37,514 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:37,514 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:37,514 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:18:37,643 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:18:37,643 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:37,643 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:37,643 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:18:37,773 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:18:37,773 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:37,773 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:37,773 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:18:37,903 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:18:37,903 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:37,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:37,903 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:18:38,033 DEBUG sendRcv: received response: (b'320', 1)
2020-10-21 00:18:38,033 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:38,033 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:18:38,033 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:38,033 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:18:38,160 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:18:38,160 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:18:45,110 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 12}
2020-10-21 00:18:45,110 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 10}
2020-10-21 00:18:45,110 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:18:45,110 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:18:45,110 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'abs_position': 2000}
2020-10-21 00:18:45,110 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:18:45,110 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:18:45,110 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:45,110 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:18:45,258 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:18:45,258 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:18:45,258 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,258 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,258 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:45,258 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:18:45,386 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:18:45,386 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:45,386 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:18:45,517 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:18:45,517 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,517 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:45,517 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:18:45,647 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:18:45,647 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,647 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:45,647 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:18:45,774 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:18:45,774 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,774 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:45,774 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:18:45,899 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:18:45,899 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:45,899 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 1.5471956025259836, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:18:55,900 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:18:55,900 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:18:55,900 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:18:56,031 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:19:11,032 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,032 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,032 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:19:11,159 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:19:11,159 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:19:11,159 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:19:11,159 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:19:11,159 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:19:11,159 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:19:11,159 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:19:11,160 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:19:11,160 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,160 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:19:11,299 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:19:11,299 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:19:11,299 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,299 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,299 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,299 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:19:11,426 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:11,426 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,426 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,426 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:19:11,557 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:11,557 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,557 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,557 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:19:11,687 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:11,687 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,687 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,687 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:19:11,819 DEBUG sendRcv: received response: (b'2047', 1)
2020-10-21 00:19:11,819 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,819 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:11,819 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:19:11,949 DEBUG sendRcv: received response: (b'2042', 1)
2020-10-21 00:19:11,949 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:11,949 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.896945517403739, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:19:26,950 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:26,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:26,950 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:19:27,082 DEBUG sendRcv: received response: (b'1850', 1)
2020-10-21 00:19:27,082 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:19:27,082 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:19:27,082 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:19:27,082 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:19:27,082 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:19:27,083 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:19:27,083 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:19:27,083 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:27,083 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:19:27,222 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:19:27,222 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:19:27,222 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,222 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,222 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:27,222 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:19:27,349 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:27,349 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,349 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:27,349 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:19:27,479 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:27,480 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,480 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:27,480 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:19:27,609 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:27,609 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,609 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:27,609 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:19:27,741 DEBUG sendRcv: received response: (b'1896', 1)
2020-10-21 00:19:27,741 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,741 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:27,741 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:19:27,872 DEBUG sendRcv: received response: (b'1892', 1)
2020-10-21 00:19:27,872 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:27,872 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.8967216423579627, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:19:57,872 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:57,872 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:57,872 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:19:58,002 DEBUG sendRcv: received response: (b'1700', 1)
2020-10-21 00:19:58,002 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:19:58,002 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:19:58,002 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:19:58,002 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:19:58,002 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:19:58,002 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:19:58,002 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:19:58,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:58,002 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:19:58,143 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:19:58,143 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:19:58,143 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,143 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,143 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:58,143 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:19:58,275 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:58,275 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,275 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:58,275 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:19:58,404 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:58,404 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,404 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:58,404 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:19:58,534 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:19:58,534 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,534 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:58,534 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:19:58,667 DEBUG sendRcv: received response: (b'1746', 1)
2020-10-21 00:19:58,667 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,667 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:19:58,667 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:19:58,797 DEBUG sendRcv: received response: (b'1742', 1)
2020-10-21 00:19:58,797 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:19:58,797 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.891576569420951, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:20:28,799 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:28,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:28,799 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:20:28,927 DEBUG sendRcv: received response: (b'1550', 1)
2020-10-21 00:20:28,927 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:20:28,927 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:20:28,927 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:20:28,927 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:20:28,927 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:20:28,927 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:20:28,927 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:20:28,927 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:28,927 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:20:29,068 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:20:29,068 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:20:29,068 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,068 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:29,068 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:20:29,194 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:20:29,194 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,194 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:29,194 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:20:29,324 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:20:29,324 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,324 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:29,324 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:20:29,455 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:20:29,455 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,455 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:29,455 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:20:29,587 DEBUG sendRcv: received response: (b'1596', 1)
2020-10-21 00:20:29,587 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,587 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:29,587 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:20:29,717 DEBUG sendRcv: received response: (b'1592', 1)
2020-10-21 00:20:29,717 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:29,717 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.8958661964961463, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:20:59,718 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:20:59,718 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:59,718 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:20:59,847 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-21 00:20:59,847 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:20:59,847 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:20:59,847 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:20:59,847 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:20:59,847 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:20:59,847 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:20:59,848 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:20:59,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:20:59,848 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:21:00,179 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:21:00,179 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:21:00,179 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,179 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,179 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:00,179 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:21:00,311 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:21:00,311 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,311 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:00,311 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:21:00,441 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:21:00,441 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,441 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:00,441 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:21:00,570 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:21:00,570 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,570 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:00,570 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:21:00,703 DEBUG sendRcv: received response: (b'1439', 1)
2020-10-21 00:21:00,703 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,703 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:00,703 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:21:00,832 DEBUG sendRcv: received response: (b'1435', 1)
2020-10-21 00:21:00,832 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:00,832 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.701492350442069, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:21:30,834 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:30,834 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:30,834 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:21:30,963 DEBUG sendRcv: received response: (b'1250', 1)
2020-10-21 00:21:30,963 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:21:30,963 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:21:30,963 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:21:30,963 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:21:30,963 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:21:30,963 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:21:30,963 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:21:30,963 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:30,963 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:21:31,104 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:21:31,104 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:21:31,104 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,104 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,104 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:31,104 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:21:31,230 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:21:31,230 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,230 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:31,230 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:21:31,360 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:21:31,360 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,360 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:31,360 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:21:31,491 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:21:31,491 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:31,491 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:21:31,623 DEBUG sendRcv: received response: (b'1297', 1)
2020-10-21 00:21:31,623 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,623 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:21:31,623 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:21:31,753 DEBUG sendRcv: received response: (b'1292', 1)
2020-10-21 00:21:31,753 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:21:31,753 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.8954325131007606, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:22:01,757 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:01,757 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:01,757 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:22:01,888 DEBUG sendRcv: received response: (b'1100', 1)
2020-10-21 00:22:01,888 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:22:01,888 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:22:01,888 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:22:01,888 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:22:01,888 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:22:01,888 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:22:01,888 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:22:01,888 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:01,888 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:22:02,029 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:22:02,029 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:22:02,029 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,029 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,029 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:02,029 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:22:02,162 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:22:02,162 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,162 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:02,162 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:22:02,291 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:22:02,291 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,291 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:02,291 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:22:02,421 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:22:02,421 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,421 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:02,421 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:22:02,553 DEBUG sendRcv: received response: (b'1146', 1)
2020-10-21 00:22:02,553 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,553 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:02,553 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:22:02,683 DEBUG sendRcv: received response: (b'1142', 1)
2020-10-21 00:22:02,683 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:02,683 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.891496460778373, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:22:32,684 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:32,684 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:32,684 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:22:32,813 DEBUG sendRcv: received response: (b'950', 1)
2020-10-21 00:22:32,813 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:22:32,813 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:22:32,813 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:22:32,813 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:22:32,813 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:22:32,813 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:22:32,813 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:22:32,813 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:32,813 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:22:32,954 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:22:32,954 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:22:32,954 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:32,954 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:32,954 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:32,954 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:22:33,081 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:22:33,081 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:33,081 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:33,081 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:22:33,212 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:22:33,212 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:33,212 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:33,212 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:22:33,341 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:22:33,341 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:33,341 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:33,341 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:22:33,473 DEBUG sendRcv: received response: (b'996', 1)
2020-10-21 00:22:33,473 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:33,473 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:22:33,473 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:22:33,603 DEBUG sendRcv: received response: (b'992', 1)
2020-10-21 00:22:33,603 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:22:33,603 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'timeout': 3.8963520935603553, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:23:03,605 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:23:03,605 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:23:03,605 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:23:03,733 DEBUG sendRcv: received response: (b'800', 1)
2020-10-21 00:23:03,733 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'speed_code': 30}
2020-10-21 00:23:03,733 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I', 'volume_ul': 25.0}
2020-10-21 00:23:03,733 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'I'}
2020-10-21 00:23:03,733 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'rel_position': -150}
2020-10-21 00:23:03,733 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'delay_ms': 1000}
2020-10-21 00:23:03,734 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'to_port': 'O'}
2020-10-21 00:23:03,734 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'minimal_reset': False}
2020-10-21 00:23:03,734 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': 'S30ID150M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:23:03,734 DEBUG sendRcv: sending cmd_string: S30ID150M1000OR
2020-10-21 00:23:03,875 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:23:03,875 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:23:03,875 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:23:03,875 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:23:03,875 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:23:03,875 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:23:04,001 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:23:04,001 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>}
2020-10-21 00:23:04,001 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BFC1926640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:23:04,001 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:23:04,534 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:24:10,054 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'on': False}
2020-10-21 00:24:10,055 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:10,055 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:24:10,184 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:24:10,184 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:10,184 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:10,184 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:10,184 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:24:10,312 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:24:10,312 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:10,312 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:10,312 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:24:10,442 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:24:10,442 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:10,442 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:10,443 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:24:10,572 DEBUG sendRcv: received response: (b'70', 1)
2020-10-21 00:24:10,572 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:10,572 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:10,572 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:24:10,704 DEBUG sendRcv: received response: (b'650', 1)
2020-10-21 00:24:10,704 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:10,704 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:24:10,704 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:10,704 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:24:10,830 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:24:10,830 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:24:19,059 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'speed_code': 12}
2020-10-21 00:24:19,059 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'speed_code': 10}
2020-10-21 00:24:19,059 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'to_port': 'O'}
2020-10-21 00:24:19,059 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'delay_ms': 1000}
2020-10-21 00:24:19,059 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'abs_position': 2000}
2020-10-21 00:24:19,059 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'delay_ms': 1000}
2020-10-21 00:24:19,059 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'minimal_reset': False}
2020-10-21 00:24:19,059 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:19,059 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:24:19,209 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:24:19,209 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:24:19,209 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:19,209 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:19,209 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:19,209 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:24:19,342 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:24:19,342 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:19,342 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:19,342 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:24:19,472 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:24:19,472 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>}
2020-10-21 00:24:19,472 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022FE6526640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:24:19,472 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:24:19,779 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:25:16,823 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on': False}
2020-10-21 00:25:16,823 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:16,823 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:25:16,950 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:25:16,950 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:16,950 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:16,950 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:16,950 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:25:17,084 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:25:17,084 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:17,084 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:17,084 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:25:17,214 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:25:17,214 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:17,214 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:17,214 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:25:17,344 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:25:17,344 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:17,344 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:17,344 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:25:17,475 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:25:17,475 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:17,475 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:25:17,475 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:17,475 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:25:17,605 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:25:17,605 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:25:31,353 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 12}
2020-10-21 00:25:31,353 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 10}
2020-10-21 00:25:31,353 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:25:31,353 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:25:31,353 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'abs_position': 2000}
2020-10-21 00:25:31,353 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:25:31,354 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:25:31,354 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:31,354 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:25:31,503 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:25:31,503 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:25:31,503 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:31,503 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:31,503 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:31,503 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:25:31,631 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:25:31,631 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:31,631 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:31,631 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:25:31,762 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:25:31,762 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:31,762 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:31,762 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:25:31,891 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:25:31,891 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:31,891 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:31,891 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:25:32,019 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:25:32,019 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:32,019 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:32,019 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:25:32,144 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:25:32,144 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:32,144 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:25:42,145 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:42,145 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:42,145 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:25:42,277 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:25:57,277 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:57,277 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:57,277 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:25:57,409 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:25:57,409 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:25:57,409 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:25:57,409 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:25:57,409 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:25:57,409 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:25:57,409 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:25:57,409 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:25:57,409 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:57,409 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:25:57,550 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:25:57,550 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:25:57,550 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:57,550 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:57,550 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:57,550 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:25:57,682 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:25:57,682 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:57,682 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:57,682 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:25:57,813 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:25:57,813 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:57,813 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:57,813 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:25:57,942 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:25:57,942 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:57,942 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:57,942 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:25:58,074 DEBUG sendRcv: received response: (b'2016', 1)
2020-10-21 00:25:58,074 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:58,074 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:25:58,074 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:25:58,203 DEBUG sendRcv: received response: (b'1940', 1)
2020-10-21 00:25:58,203 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:25:58,203 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:26:13,205 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:13,205 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:13,205 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:26:13,336 DEBUG sendRcv: received response: (b'1940', 1)
2020-10-21 00:26:13,336 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:26:13,336 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:26:13,336 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:26:13,336 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:26:13,336 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:26:13,336 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:26:13,336 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:26:13,337 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:13,337 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:26:13,478 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:26:13,478 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:26:13,478 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:13,478 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:13,478 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:13,478 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:26:13,610 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:13,610 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:13,610 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:13,610 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:26:13,740 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:13,740 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:13,740 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:13,740 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:26:13,870 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:13,870 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:13,870 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:13,870 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:26:14,002 DEBUG sendRcv: received response: (b'1956', 1)
2020-10-21 00:26:14,002 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:14,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:14,002 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:26:14,130 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-21 00:26:14,130 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:14,130 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:26:29,132 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,132 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,132 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:26:29,264 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-21 00:26:29,264 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:26:29,264 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:26:29,264 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:26:29,264 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:26:29,264 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:26:29,264 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:26:29,264 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:26:29,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,264 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:26:29,405 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:26:29,405 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:26:29,405 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,405 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,405 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,405 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:26:29,532 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:29,532 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,532 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,532 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:26:29,663 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:29,663 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,663 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,663 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:26:29,792 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:29,792 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,792 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,792 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:26:29,924 DEBUG sendRcv: received response: (b'1902', 1)
2020-10-21 00:26:29,924 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:29,924 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:29,924 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:26:30,053 DEBUG sendRcv: received response: (b'1820', 1)
2020-10-21 00:26:30,053 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:30,053 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:26:45,054 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,054 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,054 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:26:45,186 DEBUG sendRcv: received response: (b'1820', 1)
2020-10-21 00:26:45,186 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:26:45,186 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:26:45,186 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:26:45,186 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:26:45,186 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:26:45,186 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:26:45,187 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:26:45,187 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,187 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:26:45,327 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:26:45,327 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:26:45,327 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,328 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,328 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,328 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:26:45,460 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:45,460 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,460 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,460 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:26:45,591 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:45,591 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,591 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,591 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:26:45,720 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:26:45,720 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,720 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,720 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:26:45,851 DEBUG sendRcv: received response: (b'1836', 1)
2020-10-21 00:26:45,851 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,851 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:26:45,852 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:26:45,981 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-21 00:26:45,981 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:26:45,981 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:27:00,982 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:00,982 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:00,982 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:27:01,114 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-21 00:27:01,114 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:27:01,114 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:27:01,114 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:27:01,114 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:27:01,114 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:27:01,114 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:27:01,114 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:27:01,114 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:01,114 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:27:01,256 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:27:01,256 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:27:01,256 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,256 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,256 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:01,256 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:27:01,388 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:01,388 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,388 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:01,388 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:27:01,518 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:01,518 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,518 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:01,518 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:27:01,648 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:01,648 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,648 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:01,648 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:27:01,780 DEBUG sendRcv: received response: (b'1776', 1)
2020-10-21 00:27:01,780 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,780 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:01,780 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:27:01,909 DEBUG sendRcv: received response: (b'1700', 1)
2020-10-21 00:27:01,909 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:01,909 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:27:16,910 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:16,910 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:16,910 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:27:17,041 DEBUG sendRcv: received response: (b'1700', 1)
2020-10-21 00:27:17,041 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:27:17,041 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:27:17,041 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:27:17,041 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:27:17,041 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:27:17,041 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:27:17,041 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:27:17,041 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:17,041 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:27:17,183 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:27:17,183 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:27:17,183 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,183 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,183 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:17,183 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:27:17,311 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:17,311 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,311 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:17,311 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:27:17,441 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:17,441 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,441 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:17,441 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:27:17,571 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:17,571 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,571 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:17,571 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:27:17,701 DEBUG sendRcv: received response: (b'1717', 1)
2020-10-21 00:27:17,701 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,701 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:17,701 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:27:17,832 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-21 00:27:17,832 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:17,832 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:27:47,833 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:47,833 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:47,833 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:27:47,962 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-21 00:27:47,962 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:27:47,962 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:27:47,962 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:27:47,962 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:27:47,962 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:27:47,963 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:27:47,963 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:27:47,963 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:47,963 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:27:48,103 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:27:48,103 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:27:48,103 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,103 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,103 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:48,103 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:27:48,236 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:48,236 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,236 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:48,236 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:27:48,366 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:48,366 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,366 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:48,366 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:27:48,496 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:27:48,496 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,496 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:48,496 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:27:48,628 DEBUG sendRcv: received response: (b'1656', 1)
2020-10-21 00:27:48,628 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,628 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:27:48,628 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:27:48,757 DEBUG sendRcv: received response: (b'1580', 1)
2020-10-21 00:27:48,757 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:27:48,757 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:28:03,758 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:03,758 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:03,758 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:28:03,889 DEBUG sendRcv: received response: (b'1580', 1)
2020-10-21 00:28:03,889 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:28:03,889 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:28:03,889 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:28:03,889 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:28:03,889 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:28:03,889 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:28:03,889 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:28:03,889 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:03,889 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:28:04,030 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:28:04,030 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:28:04,030 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,030 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,030 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:04,030 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:28:04,159 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:04,159 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:04,159 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:28:04,288 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:04,288 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,288 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:04,288 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:28:04,419 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:04,419 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:04,419 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:28:04,550 DEBUG sendRcv: received response: (b'1602', 1)
2020-10-21 00:28:04,550 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,550 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:04,550 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:28:04,679 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-21 00:28:04,679 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:04,679 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:28:19,680 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:19,680 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:19,680 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:28:19,808 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-21 00:28:19,808 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:28:19,808 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:28:19,808 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:28:19,808 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:28:19,808 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:28:19,808 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:28:19,808 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:28:19,808 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:19,808 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:28:19,947 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:28:19,947 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:28:19,947 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:19,947 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:19,947 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:19,947 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:28:20,076 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:20,076 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:20,076 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:20,076 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:28:20,206 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:20,206 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:20,206 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:20,206 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:28:20,336 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:20,336 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:20,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:20,336 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:28:20,468 DEBUG sendRcv: received response: (b'1538', 1)
2020-10-21 00:28:20,468 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:20,468 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:20,468 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:28:20,597 DEBUG sendRcv: received response: (b'1460', 1)
2020-10-21 00:28:20,597 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:20,597 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:28:50,599 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:50,599 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:50,599 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:28:50,728 DEBUG sendRcv: received response: (b'1460', 1)
2020-10-21 00:28:50,728 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:28:50,728 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:28:50,728 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:28:50,728 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:28:50,728 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:28:50,728 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:28:50,728 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:28:50,728 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:50,728 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:28:50,869 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:28:50,869 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:28:50,869 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:50,869 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:50,869 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:50,869 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:28:51,002 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:51,002 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:51,002 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:51,002 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:28:51,132 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:51,132 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:51,132 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:51,132 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:28:51,262 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:28:51,262 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:51,262 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:51,262 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:28:51,394 DEBUG sendRcv: received response: (b'1476', 1)
2020-10-21 00:28:51,394 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:51,394 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:28:51,394 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:28:51,523 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-21 00:28:51,523 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:28:51,523 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:29:06,523 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:06,523 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:06,523 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:29:06,655 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-21 00:29:06,655 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:29:06,655 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:29:06,655 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:29:06,655 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:29:06,655 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:29:06,655 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:29:06,656 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:29:06,656 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:06,656 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:29:06,797 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:29:06,797 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:29:06,797 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:06,797 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:06,797 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:06,797 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:29:06,929 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:06,929 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:06,929 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:06,929 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:29:07,059 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:07,059 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:07,059 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:07,059 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:29:07,191 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:07,191 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:07,191 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:07,191 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:29:07,320 DEBUG sendRcv: received response: (b'1415', 1)
2020-10-21 00:29:07,320 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:07,320 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:07,320 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:29:07,451 DEBUG sendRcv: received response: (b'1340', 1)
2020-10-21 00:29:07,451 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:07,451 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:29:22,451 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:22,451 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:22,451 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:29:22,583 DEBUG sendRcv: received response: (b'1340', 1)
2020-10-21 00:29:22,583 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:29:22,583 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:29:22,583 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:29:22,583 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:29:22,583 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:29:22,583 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:29:22,583 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:29:22,583 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:22,584 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:29:22,724 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:29:22,724 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:29:22,724 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:22,724 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:22,724 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:22,724 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:29:22,857 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:22,857 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:22,857 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:22,857 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:29:22,987 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:22,987 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:22,987 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:22,987 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:29:23,116 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:23,116 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:23,116 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:23,116 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:29:23,248 DEBUG sendRcv: received response: (b'1356', 1)
2020-10-21 00:29:23,248 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:23,248 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:23,248 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:29:23,378 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-21 00:29:23,378 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:23,378 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:29:38,379 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:38,379 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:38,379 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:29:38,505 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-21 00:29:38,505 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:29:38,505 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:29:38,505 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:29:38,505 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:29:38,505 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:29:38,505 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:29:38,505 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:29:38,505 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:38,505 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:29:38,647 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:29:38,647 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:29:38,647 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:38,647 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:38,647 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:38,647 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:29:38,779 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:38,779 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:38,779 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:38,779 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:29:38,909 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:38,909 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:38,909 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:38,909 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:29:39,040 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:29:39,040 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:39,040 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:39,040 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:29:39,171 DEBUG sendRcv: received response: (b'1300', 1)
2020-10-21 00:29:39,171 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:39,171 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:29:39,171 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:29:39,300 DEBUG sendRcv: received response: (b'1220', 1)
2020-10-21 00:29:39,300 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:29:39,300 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:30:09,302 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:09,302 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:09,302 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:09,431 DEBUG sendRcv: received response: (b'1220', 1)
2020-10-21 00:30:09,431 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:30:09,431 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:30:09,431 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:30:09,431 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:30:09,431 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:30:09,431 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:30:09,431 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:30:09,431 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:09,431 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:30:09,572 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:30:09,572 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:30:09,572 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:09,572 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:09,572 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:09,572 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:30:09,704 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:09,704 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:09,704 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:09,704 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:30:09,835 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:09,835 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:09,835 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:09,835 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:30:09,965 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:09,965 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:09,965 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:09,965 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:30:10,096 DEBUG sendRcv: received response: (b'1236', 1)
2020-10-21 00:30:10,096 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:10,096 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:10,096 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:10,226 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-21 00:30:10,226 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:10,226 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:30:25,227 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:25,227 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:25,227 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:25,358 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-21 00:30:25,358 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:30:25,358 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:30:25,358 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:30:25,358 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:30:25,358 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:30:25,358 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:30:25,358 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:30:25,358 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:25,358 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:30:25,500 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:30:25,500 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:30:25,500 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:25,500 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:25,500 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:25,500 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:30:25,632 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:25,632 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:25,632 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:25,632 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:30:25,763 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:25,763 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:25,763 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:25,763 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:30:25,893 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:25,893 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:25,893 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:25,893 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:30:26,024 DEBUG sendRcv: received response: (b'1176', 1)
2020-10-21 00:30:26,024 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:26,024 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:26,024 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:26,154 DEBUG sendRcv: received response: (b'1100', 1)
2020-10-21 00:30:26,154 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:26,154 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:30:41,155 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,155 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,155 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:41,286 DEBUG sendRcv: received response: (b'1100', 1)
2020-10-21 00:30:41,286 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:30:41,286 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:30:41,286 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:30:41,286 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:30:41,286 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:30:41,286 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:30:41,286 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:30:41,286 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,286 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:30:41,428 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:30:41,428 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:30:41,428 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,428 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,428 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,428 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:30:41,560 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:41,560 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,560 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,560 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:30:41,690 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:41,690 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,690 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,690 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:30:41,820 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:41,820 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,820 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,820 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:30:41,951 DEBUG sendRcv: received response: (b'1116', 1)
2020-10-21 00:30:41,951 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:41,951 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:41,951 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:42,081 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-21 00:30:42,081 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:42,081 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:30:57,082 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,082 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,082 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:57,214 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-21 00:30:57,214 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:30:57,214 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:30:57,214 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:30:57,214 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:30:57,214 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:30:57,214 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:30:57,214 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:30:57,214 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,214 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:30:57,356 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:30:57,356 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:30:57,356 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,356 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,356 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:30:57,488 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:57,488 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,488 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,488 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:30:57,618 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:57,618 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,618 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,618 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:30:57,748 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:30:57,748 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,748 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,748 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:30:57,879 DEBUG sendRcv: received response: (b'1056', 1)
2020-10-21 00:30:57,879 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:57,879 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:30:57,879 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:30:58,007 DEBUG sendRcv: received response: (b'980', 1)
2020-10-21 00:30:58,007 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:30:58,007 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:31:28,010 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:28,022 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:28,022 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:31:28,153 DEBUG sendRcv: received response: (b'980', 1)
2020-10-21 00:31:28,175 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:31:28,175 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:31:28,175 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:31:28,175 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:31:28,175 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:31:28,175 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:31:28,175 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:31:28,175 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:28,175 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:31:28,315 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:31:28,359 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:31:28,359 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:28,359 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:28,359 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:28,359 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:31:28,488 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:31:28,548 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:28,548 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:28,548 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:31:28,678 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:31:28,679 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:28,679 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:28,679 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:31:28,808 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:31:28,874 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:28,874 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:28,874 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:31:29,003 DEBUG sendRcv: received response: (b'920', 1)
2020-10-21 00:31:29,056 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:29,056 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:29,056 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:31:29,183 DEBUG sendRcv: received response: (b'920', 1)
2020-10-21 00:31:29,250 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:29,250 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:31:44,250 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:44,259 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:44,260 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:31:44,385 DEBUG sendRcv: received response: (b'920', 1)
2020-10-21 00:31:44,449 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:31:44,449 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:31:44,449 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:31:44,449 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:31:44,449 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:31:44,449 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:31:44,449 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:31:44,449 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:44,449 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:31:44,588 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:31:44,666 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:31:44,666 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:44,666 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:44,666 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:44,666 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:31:44,796 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:31:44,923 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:44,923 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:44,923 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:31:45,057 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:31:45,102 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:45,102 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:45,102 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:31:45,231 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:31:45,307 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:45,307 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:45,307 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:31:45,436 DEBUG sendRcv: received response: (b'860', 1)
2020-10-21 00:31:45,436 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:45,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:31:45,436 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:31:45,567 DEBUG sendRcv: received response: (b'860', 1)
2020-10-21 00:31:45,579 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:31:45,579 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:32:00,581 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:00,632 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:00,632 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:32:00,758 DEBUG sendRcv: received response: (b'860', 1)
2020-10-21 00:32:00,817 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:32:00,817 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:32:00,817 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:32:00,817 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:32:00,817 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:32:00,817 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:32:00,817 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:32:00,817 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:00,818 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:32:00,954 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:32:00,999 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:32:00,999 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:00,999 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:00,999 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:00,999 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:32:01,128 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:01,148 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:01,148 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:01,148 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:32:01,280 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:01,465 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:01,465 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:01,465 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:32:01,593 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:01,670 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:01,670 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:01,670 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:32:01,798 DEBUG sendRcv: received response: (b'800', 1)
2020-10-21 00:32:01,862 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:01,862 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:01,862 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:32:01,993 DEBUG sendRcv: received response: (b'800', 1)
2020-10-21 00:32:02,045 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:02,046 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:32:17,046 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:17,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:17,068 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:32:17,196 DEBUG sendRcv: received response: (b'800', 1)
2020-10-21 00:32:17,244 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:32:17,244 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:32:17,244 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:32:17,244 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:32:17,244 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:32:17,244 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:32:17,244 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:32:17,244 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:17,245 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:32:17,383 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:32:17,417 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:32:17,417 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:17,417 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:17,417 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:17,417 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:32:17,546 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:17,646 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:17,646 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:17,646 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:32:17,776 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:17,827 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:17,827 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:17,827 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:32:17,957 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:17,990 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:17,990 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:17,990 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:32:18,120 DEBUG sendRcv: received response: (b'740', 1)
2020-10-21 00:32:18,159 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:18,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:18,159 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:32:18,286 DEBUG sendRcv: received response: (b'740', 1)
2020-10-21 00:32:18,353 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:18,354 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:32:48,356 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:48,371 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:48,371 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:32:48,501 DEBUG sendRcv: received response: (b'740', 1)
2020-10-21 00:32:48,606 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:32:48,606 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:32:48,606 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:32:48,606 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:32:48,606 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:32:48,606 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:32:48,607 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:32:48,607 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:48,607 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:32:48,748 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:32:48,879 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:32:48,879 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:48,879 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:48,879 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:48,879 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:32:49,011 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:49,081 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:49,081 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:49,081 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:32:49,213 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:49,213 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:49,213 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:49,213 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:32:49,341 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:32:49,341 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:49,341 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:49,341 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:32:49,471 DEBUG sendRcv: received response: (b'680', 1)
2020-10-21 00:32:49,558 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:49,558 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:32:49,558 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:32:49,687 DEBUG sendRcv: received response: (b'680', 1)
2020-10-21 00:32:49,710 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:32:49,710 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:33:04,711 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:04,711 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:04,711 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:33:04,840 DEBUG sendRcv: received response: (b'680', 1)
2020-10-21 00:33:04,859 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:33:04,859 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:33:04,859 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:33:04,859 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:33:04,859 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:33:04,859 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:33:04,859 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:33:04,859 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:04,859 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:33:05,001 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:33:05,074 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:33:05,074 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,074 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,074 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:05,074 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:33:05,204 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:05,204 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,204 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:05,204 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:33:05,334 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:05,429 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,429 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:05,429 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:33:05,559 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:05,636 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,636 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:05,636 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:33:05,764 DEBUG sendRcv: received response: (b'620', 1)
2020-10-21 00:33:05,799 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,799 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:05,799 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:33:05,928 DEBUG sendRcv: received response: (b'620', 1)
2020-10-21 00:33:05,957 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:05,957 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:33:20,958 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:20,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:20,958 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:33:21,086 DEBUG sendRcv: received response: (b'620', 1)
2020-10-21 00:33:21,086 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:33:21,086 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:33:21,086 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:33:21,086 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:33:21,086 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:33:21,087 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:33:21,087 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:33:21,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:21,087 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:33:21,228 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:33:21,334 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:33:21,334 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:21,334 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:21,334 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:21,334 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:33:21,466 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:21,466 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:21,466 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:21,466 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:33:21,596 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:21,636 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:21,636 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:21,636 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:33:21,767 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:21,867 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:21,868 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:21,868 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:33:21,996 DEBUG sendRcv: received response: (b'560', 1)
2020-10-21 00:33:22,121 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:22,121 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:22,121 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:33:22,251 DEBUG sendRcv: received response: (b'560', 1)
2020-10-21 00:33:22,383 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:22,383 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:33:37,385 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:37,420 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:37,420 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:33:37,550 DEBUG sendRcv: received response: (b'560', 1)
2020-10-21 00:33:37,621 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:33:37,621 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:33:37,621 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:33:37,621 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:33:37,621 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:33:37,621 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:33:37,621 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:33:37,621 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:37,621 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:33:37,762 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:33:37,818 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:33:37,818 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:37,819 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:37,819 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:37,819 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:33:37,949 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:37,949 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:37,949 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:37,949 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:33:38,078 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:38,141 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:38,141 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:38,141 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:33:38,274 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:33:38,371 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:38,371 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:38,371 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:33:38,499 DEBUG sendRcv: received response: (b'500', 1)
2020-10-21 00:33:38,568 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:38,568 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:33:38,569 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:33:38,699 DEBUG sendRcv: received response: (b'500', 1)
2020-10-21 00:33:38,720 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:33:38,720 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:34:08,721 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:08,721 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:08,721 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:08,849 DEBUG sendRcv: received response: (b'500', 1)
2020-10-21 00:34:08,849 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:34:08,849 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:34:08,849 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:34:08,850 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:34:08,850 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:34:08,850 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:34:08,850 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:34:08,850 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:08,850 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:34:08,991 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:34:09,004 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:34:09,004 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,004 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,004 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:09,004 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:34:09,134 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:09,145 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,145 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:09,145 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:34:09,274 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:09,274 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,274 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:09,274 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:34:09,404 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:09,417 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,417 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:09,417 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:34:09,554 DEBUG sendRcv: received response: (b'504', 1)
2020-10-21 00:34:09,615 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,615 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:09,615 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:09,744 DEBUG sendRcv: received response: (b'440', 1)
2020-10-21 00:34:09,812 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:09,812 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:34:24,813 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:24,818 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:24,818 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:24,948 DEBUG sendRcv: received response: (b'440', 1)
2020-10-21 00:34:24,994 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:34:24,994 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:34:24,994 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:34:24,994 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:34:24,994 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:34:24,994 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:34:24,995 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:34:24,995 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:24,995 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:34:25,134 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:34:25,156 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:34:25,156 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:25,156 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:25,156 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:25,156 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:34:25,287 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:25,350 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:25,350 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:25,350 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:34:25,482 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:25,552 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:25,552 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:25,552 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:34:25,681 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:25,734 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:25,734 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:25,734 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:34:25,862 DEBUG sendRcv: received response: (b'380', 1)
2020-10-21 00:34:25,932 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:25,932 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:25,932 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:26,062 DEBUG sendRcv: received response: (b'380', 1)
2020-10-21 00:34:26,113 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:26,113 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:34:41,114 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,114 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,114 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:41,244 DEBUG sendRcv: received response: (b'380', 1)
2020-10-21 00:34:41,244 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:34:41,244 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:34:41,244 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:34:41,244 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:34:41,244 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:34:41,244 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:34:41,244 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:34:41,245 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,245 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:34:41,386 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:34:41,386 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:34:41,386 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,386 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,386 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,386 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:34:41,515 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:41,515 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,515 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,515 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:34:41,644 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:41,644 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,644 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,644 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:34:41,775 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:41,775 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,775 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,775 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:34:41,905 DEBUG sendRcv: received response: (b'402', 1)
2020-10-21 00:34:41,905 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:41,905 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:41,905 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:42,034 DEBUG sendRcv: received response: (b'320', 1)
2020-10-21 00:34:42,034 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:42,034 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:34:57,036 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,036 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,036 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:57,161 DEBUG sendRcv: received response: (b'320', 1)
2020-10-21 00:34:57,161 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'speed_code': 15}
2020-10-21 00:34:57,161 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I', 'volume_ul': 10.0}
2020-10-21 00:34:57,161 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'I'}
2020-10-21 00:34:57,161 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'rel_position': -60}
2020-10-21 00:34:57,161 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'delay_ms': 1000}
2020-10-21 00:34:57,161 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'to_port': 'O'}
2020-10-21 00:34:57,161 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'minimal_reset': False}
2020-10-21 00:34:57,161 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': 'S15ID60M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,161 DEBUG sendRcv: sending cmd_string: S15ID60M1000OR
2020-10-21 00:34:57,304 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:34:57,304 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:34:57,304 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,304 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,304 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,304 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:34:57,432 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:57,432 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,432 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,432 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:34:57,563 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:57,563 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,563 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,563 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:34:57,692 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:34:57,692 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,692 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,692 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:34:57,822 DEBUG sendRcv: received response: (b'337', 1)
2020-10-21 00:34:57,822 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>}
2020-10-21 00:34:57,822 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000020E09966640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:34:57,822 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:34:58,129 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:37:00,272 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on': False}
2020-10-21 00:37:00,272 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:00,272 DEBUG sendRcv: sending cmd_string: N0R
2020-10-21 00:37:00,402 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:37:00,402 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:00,402 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:00,402 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:00,402 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:37:00,534 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:37:00,534 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:00,534 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:00,534 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:37:00,663 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:37:00,663 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:00,663 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:00,663 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:37:00,794 DEBUG sendRcv: received response: (b'600', 1)
2020-10-21 00:37:00,794 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:00,794 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:00,794 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:37:00,924 DEBUG sendRcv: received response: (b'260', 1)
2020-10-21 00:37:00,924 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:00,924 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-10-21 00:37:00,924 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:00,924 DEBUG sendRcv: sending cmd_string: Z0R
2020-10-21 00:37:01,051 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:37:01,051 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:37:07,575 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 12}
2020-10-21 00:37:07,575 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 10}
2020-10-21 00:37:07,575 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:37:07,575 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:37:07,575 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'abs_position': 2000}
2020-10-21 00:37:07,575 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:37:07,576 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:37:07,576 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:07,576 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-10-21 00:37:07,725 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:37:07,725 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:37:07,725 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:07,725 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:07,725 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:07,725 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:37:07,853 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:37:07,853 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:07,853 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:07,853 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:37:07,984 DEBUG sendRcv: received response: (b'1600', 1)
2020-10-21 00:37:07,984 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:07,984 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:07,984 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:37:08,113 DEBUG sendRcv: received response: (b'901', 1)
2020-10-21 00:37:08,113 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:08,113 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:08,113 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:37:08,241 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:37:08,241 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:08,241 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:08,241 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:37:08,366 DEBUG sendRcv: received response: (b'0', 1)
2020-10-21 00:37:08,366 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:08,366 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.603123494556972, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:37:18,366 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:18,366 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:18,366 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:37:18,497 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:37:33,498 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:33,498 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:33,498 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:37:33,624 DEBUG sendRcv: received response: (b'2000', 1)
2020-10-21 00:37:33,624 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:37:33,624 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:37:33,624 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:37:33,624 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:37:33,624 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:37:33,624 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:37:33,625 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:37:33,625 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:33,625 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:37:33,766 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:37:33,766 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:37:33,766 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:33,766 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:33,766 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:33,766 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:37:33,899 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:37:33,899 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:33,899 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:33,899 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:37:34,029 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:37:34,029 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:34,029 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:34,029 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:37:34,159 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:37:34,159 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:34,159 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:34,159 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:37:34,290 DEBUG sendRcv: received response: (b'2040', 1)
2020-10-21 00:37:34,290 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:34,290 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:37:34,290 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:37:34,420 DEBUG sendRcv: received response: (b'2029', 1)
2020-10-21 00:37:34,420 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:37:34,420 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0168840772965375, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:38:04,422 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:04,422 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:04,422 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:38:04,550 DEBUG sendRcv: received response: (b'1880', 1)
2020-10-21 00:38:04,550 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:38:04,550 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:38:04,550 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:38:04,550 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:38:04,551 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:38:04,551 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:38:04,551 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:38:04,551 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:04,551 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:38:04,691 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:38:04,691 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:38:04,691 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:04,691 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:04,691 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:04,691 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:38:04,819 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:38:04,819 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:04,819 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:04,819 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:38:04,949 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:38:04,949 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:04,949 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:04,949 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:38:05,079 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:38:05,079 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:05,079 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:05,080 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:38:05,210 DEBUG sendRcv: received response: (b'1922', 1)
2020-10-21 00:38:05,210 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:05,210 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:05,210 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:38:05,341 DEBUG sendRcv: received response: (b'1911', 1)
2020-10-21 00:38:05,341 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:05,341 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0210652239182416, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:38:35,343 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:35,343 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:35,343 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:38:35,471 DEBUG sendRcv: received response: (b'1760', 1)
2020-10-21 00:38:35,471 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:38:35,471 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:38:35,471 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:38:35,471 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:38:35,471 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:38:35,472 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:38:35,472 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:38:35,472 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:35,472 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:38:35,611 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:38:35,611 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:38:35,611 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:35,611 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:35,611 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:35,611 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:38:35,739 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:38:35,739 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:35,739 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:35,739 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:38:35,869 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:38:35,869 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:35,869 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:35,869 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:38:36,000 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:38:36,000 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:36,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:36,000 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:38:36,131 DEBUG sendRcv: received response: (b'1801', 1)
2020-10-21 00:38:36,131 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:36,131 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:38:36,131 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:38:36,261 DEBUG sendRcv: received response: (b'1789', 1)
2020-10-21 00:38:36,261 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:38:36,261 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0220107920029584, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:39:21,264 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:21,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:21,264 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:39:21,395 DEBUG sendRcv: received response: (b'1640', 1)
2020-10-21 00:39:21,395 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:39:21,395 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:39:21,395 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:39:21,395 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:39:21,395 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:39:21,395 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:39:21,395 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:39:21,395 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:21,395 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:39:21,534 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:39:21,534 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:39:21,534 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:21,534 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:21,534 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:21,534 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:39:21,664 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:39:21,664 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:21,664 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:21,664 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:39:21,793 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:39:21,793 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:21,793 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:21,793 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:39:21,922 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:39:21,922 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:21,922 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:21,922 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:39:22,054 DEBUG sendRcv: received response: (b'1681', 1)
2020-10-21 00:39:22,054 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:22,054 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:22,054 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:39:22,184 DEBUG sendRcv: received response: (b'1670', 1)
2020-10-21 00:39:22,184 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:22,184 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0231737978318158, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:39:52,186 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,186 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,186 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:39:52,315 DEBUG sendRcv: received response: (b'1520', 1)
2020-10-21 00:39:52,315 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:39:52,315 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:39:52,315 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:39:52,315 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:39:52,315 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:39:52,315 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:39:52,316 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:39:52,316 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,316 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:39:52,455 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:39:52,455 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:39:52,455 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,455 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,455 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,455 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:39:52,589 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:39:52,589 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,589 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,589 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:39:52,718 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:39:52,718 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,718 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,718 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:39:52,848 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:39:52,848 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,848 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,848 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:39:52,980 DEBUG sendRcv: received response: (b'1560', 1)
2020-10-21 00:39:52,980 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:52,980 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:39:52,980 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:39:53,109 DEBUG sendRcv: received response: (b'1549', 1)
2020-10-21 00:39:53,109 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:39:53,109 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0185406095841352, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:40:38,113 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,113 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,113 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:40:38,243 DEBUG sendRcv: received response: (b'1400', 1)
2020-10-21 00:40:38,243 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:40:38,243 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:40:38,243 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:40:38,243 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:40:38,243 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:40:38,243 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:40:38,243 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:40:38,243 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,243 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:40:38,383 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:40:38,383 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:40:38,383 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,383 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,383 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,383 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:40:38,513 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:40:38,513 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,513 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,513 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:40:38,642 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:40:38,642 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,642 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,642 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:40:38,771 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:40:38,771 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,771 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,771 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:40:38,903 DEBUG sendRcv: received response: (b'1441', 1)
2020-10-21 00:40:38,903 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:38,903 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:40:38,903 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:40:39,033 DEBUG sendRcv: received response: (b'1429', 1)
2020-10-21 00:40:39,033 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:40:39,033 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0224130041459027, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:41:24,035 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,035 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,035 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:41:24,166 DEBUG sendRcv: received response: (b'1280', 1)
2020-10-21 00:41:24,166 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:41:24,166 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:41:24,166 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:41:24,166 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:41:24,166 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:41:24,166 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:41:24,166 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:41:24,166 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,167 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:41:24,306 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:41:24,306 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:41:24,306 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,306 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,306 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,306 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:41:24,435 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:41:24,435 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,435 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,435 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:41:24,564 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:41:24,564 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,564 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,564 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:41:24,694 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:41:24,694 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,694 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,694 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:41:24,826 DEBUG sendRcv: received response: (b'1322', 1)
2020-10-21 00:41:24,826 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,826 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:24,826 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:41:24,955 DEBUG sendRcv: received response: (b'1311', 1)
2020-10-21 00:41:24,955 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:24,955 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0224623567917768, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:41:54,958 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:54,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:54,958 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:41:55,086 DEBUG sendRcv: received response: (b'1160', 1)
2020-10-21 00:41:55,086 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:41:55,086 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:41:55,086 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:41:55,086 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:41:55,086 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:41:55,086 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:41:55,087 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:41:55,087 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:55,087 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:41:55,226 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:41:55,226 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:41:55,226 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,226 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,226 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:55,226 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:41:55,355 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:41:55,355 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,355 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:55,355 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:41:55,485 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:41:55,485 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,485 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:55,485 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:41:55,616 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:41:55,616 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,616 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:55,616 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:41:55,746 DEBUG sendRcv: received response: (b'1201', 1)
2020-10-21 00:41:55,746 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,746 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:41:55,746 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:41:55,876 DEBUG sendRcv: received response: (b'1190', 1)
2020-10-21 00:41:55,876 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:41:55,876 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0228166468003217, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:42:40,878 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:40,878 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:40,878 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:42:41,009 DEBUG sendRcv: received response: (b'1040', 1)
2020-10-21 00:42:41,009 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:42:41,009 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:42:41,009 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:42:41,009 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:42:41,009 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:42:41,009 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:42:41,009 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:42:41,010 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:41,010 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:42:41,150 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:42:41,150 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:42:41,150 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,150 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,150 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:41,150 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:42:41,283 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:42:41,283 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,283 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:41,283 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:42:41,414 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:42:41,414 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,414 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:41,414 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:42:41,543 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:42:41,543 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,543 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:41,543 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:42:41,674 DEBUG sendRcv: received response: (b'1080', 1)
2020-10-21 00:42:41,674 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,674 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:42:41,674 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:42:41,805 DEBUG sendRcv: received response: (b'1069', 1)
2020-10-21 00:42:41,805 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:42:41,805 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 1.0167086012223188, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:43:26,808 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:26,838 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:26,838 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:43:26,967 DEBUG sendRcv: received response: (b'920', 1)
2020-10-21 00:43:26,967 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:43:26,967 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:43:26,967 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:43:26,967 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:43:26,967 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:43:26,968 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:43:26,968 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:43:26,968 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:26,968 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:43:27,108 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:43:27,108 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:43:27,108 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,108 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,108 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:27,108 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:43:27,236 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:43:27,376 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,376 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:27,376 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:43:27,506 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:43:27,506 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,506 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:27,506 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:43:27,636 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:43:27,636 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,636 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:27,636 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:43:27,767 DEBUG sendRcv: received response: (b'949', 1)
2020-10-21 00:43:27,767 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,767 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:27,767 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:43:27,896 DEBUG sendRcv: received response: (b'938', 1)
2020-10-21 00:43:27,989 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:27,989 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 0.7905795461991254, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:43:57,991 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:58,031 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:58,032 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:43:58,162 DEBUG sendRcv: received response: (b'800', 1)
2020-10-21 00:43:58,163 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:43:58,163 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:43:58,163 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:43:58,163 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:43:58,163 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:43:58,163 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:43:58,163 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:43:58,163 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:58,163 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:43:58,304 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:43:58,328 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:43:58,328 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:58,328 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:58,329 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:58,329 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:43:58,457 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:43:58,497 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:58,497 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:58,497 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:43:58,627 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:43:58,717 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:58,717 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:58,717 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:43:58,847 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:43:58,890 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:58,890 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:58,890 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:43:59,022 DEBUG sendRcv: received response: (b'824', 1)
2020-10-21 00:43:59,040 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:59,040 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:43:59,040 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:43:59,167 DEBUG sendRcv: received response: (b'811', 1)
2020-10-21 00:43:59,284 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:43:59,284 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 0.6906978971817914, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:44:44,286 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:44,309 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:44,309 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:44:44,440 DEBUG sendRcv: received response: (b'680', 1)
2020-10-21 00:44:44,498 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:44:44,498 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:44:44,498 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:44:44,498 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:44:44,499 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:44:44,499 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:44:44,499 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:44:44,499 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:44,499 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:44:44,642 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:44:44,674 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:44:44,674 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:44,674 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:44,674 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:44,674 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:44:44,804 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:44:44,843 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:44,843 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:44,843 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:44:44,975 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:44:45,014 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:45,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:45,014 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:44:45,145 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:44:45,219 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:45,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:45,219 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:44:45,349 DEBUG sendRcv: received response: (b'706', 1)
2020-10-21 00:44:45,400 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:45,400 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:44:45,400 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:44:45,529 DEBUG sendRcv: received response: (b'690', 1)
2020-10-21 00:44:45,610 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:44:45,610 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 0.7003388292649213, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:45:15,612 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:15,655 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:15,655 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:45:15,785 DEBUG sendRcv: received response: (b'560', 1)
2020-10-21 00:45:15,842 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'speed_code': 20}
2020-10-21 00:45:15,842 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I', 'volume_ul': 20.0}
2020-10-21 00:45:15,842 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'I'}
2020-10-21 00:45:15,842 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'rel_position': -120}
2020-10-21 00:45:15,842 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'delay_ms': 1000}
2020-10-21 00:45:15,842 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'to_port': 'O'}
2020-10-21 00:45:15,842 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'minimal_reset': False}
2020-10-21 00:45:15,842 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': 'S20ID120M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:15,842 DEBUG sendRcv: sending cmd_string: S20ID120M1000OR
2020-10-21 00:45:16,172 DEBUG sendRcv: received response: (None, 0)
2020-10-21 00:45:16,237 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'on_execute': True, 'minimal_reset': False}
2020-10-21 00:45:16,237 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:16,237 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:16,237 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:16,237 DEBUG sendRcv: sending cmd_string: ?1
2020-10-21 00:45:16,370 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:45:16,426 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:16,426 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:16,426 DEBUG sendRcv: sending cmd_string: ?2
2020-10-21 00:45:16,555 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:45:16,612 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:16,612 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:16,612 DEBUG sendRcv: sending cmd_string: ?3
2020-10-21 00:45:16,740 DEBUG sendRcv: received response: (b'170', 1)
2020-10-21 00:45:16,802 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:16,802 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:16,802 DEBUG sendRcv: sending cmd_string: ?6
2020-10-21 00:45:16,930 DEBUG sendRcv: received response: (b'564', 1)
2020-10-21 00:45:16,991 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:16,991 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:45:16,991 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:45:17,119 DEBUG sendRcv: received response: (b'548', 1)
2020-10-21 00:45:17,182 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:45:17,183 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'timeout': 0.47082279990701115, 'polling_interval': 0.3, 'delay': None}
2020-10-21 00:46:02,184 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>}
2020-10-21 00:46:02,184 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001A2AFA56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-10-21 00:46:02,184 DEBUG sendRcv: sending cmd_string: ?
2020-10-21 00:46:02,490 DEBUG sendRcv: received response: (None, 0)
2020-11-02 10:43:53,133 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'on': False}
2020-11-02 10:43:53,150 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:43:53,150 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 10:43:53,280 DEBUG sendRcv: received response: (None, 0)
2020-11-02 10:43:53,280 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:43:53,280 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:43:53,280 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:43:53,280 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 10:43:53,419 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 10:43:53,419 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:43:53,419 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:43:53,419 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 10:43:53,560 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 10:43:53,560 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:43:53,560 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:43:53,560 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 10:43:53,699 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 10:43:53,699 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:43:53,699 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:43:53,699 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 10:43:53,839 DEBUG sendRcv: received response: (b'8142', 1)
2020-11-02 10:43:53,839 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:43:53,839 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 10:43:53,839 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:43:53,839 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 10:43:53,979 DEBUG sendRcv: received response: (None, 0)
2020-11-02 10:43:54,008 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 10:44:02,053 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'speed_code': 12}
2020-11-02 10:44:02,053 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'speed_code': 10}
2020-11-02 10:44:02,053 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'to_port': 'O'}
2020-11-02 10:44:02,053 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'delay_ms': 1000}
2020-11-02 10:44:02,053 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'abs_position': 2000}
2020-11-02 10:44:02,053 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'delay_ms': 1000}
2020-11-02 10:44:02,053 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'minimal_reset': False}
2020-11-02 10:44:02,053 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:02,053 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-11-02 10:44:02,208 DEBUG sendRcv: received response: (None, 0)
2020-11-02 10:44:02,208 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 10:44:02,208 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,208 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,208 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:02,209 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 10:44:02,347 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 10:44:02,347 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,347 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:02,347 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 10:44:02,488 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 10:44:02,488 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,488 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:02,488 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 10:44:02,631 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 10:44:02,631 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,631 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:02,631 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 10:44:02,757 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 10:44:02,757 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,757 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:02,757 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 10:44:02,883 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 10:44:02,883 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:02,883 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'timeout': 7.056983265232631, 'polling_interval': 0.3, 'delay': None}
2020-11-02 10:44:12,892 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>}
2020-11-02 10:44:12,892 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B97DC46640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:44:12,892 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 10:47:30,519 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000024D2C676640>, 'on': False}
2020-11-02 10:47:30,519 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000024D2C676640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 10:47:30,519 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 10:47:51,949 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000024D2C676640>, 'on_execute': False, 'minimal_reset': False}
2020-11-02 10:47:51,949 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000024D2C676640>}
2020-11-02 11:00:08,068 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'on': False}
2020-11-02 11:00:08,068 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:08,068 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:00:08,200 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:00:08,200 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:08,200 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:08,200 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:08,200 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:00:08,339 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:00:08,339 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:08,340 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:08,340 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:00:08,481 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:00:08,481 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:08,481 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:08,481 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:00:08,619 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:00:08,619 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:08,619 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:08,619 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:00:08,759 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:00:08,759 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:08,759 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:00:08,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:08,759 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:00:08,897 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:00:08,897 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:00:22,661 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'speed_code': 12}
2020-11-02 11:00:22,661 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'speed_code': 10}
2020-11-02 11:00:22,661 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'O'}
2020-11-02 11:00:22,661 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:00:22,661 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'abs_position': 2000}
2020-11-02 11:00:22,661 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:00:22,661 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'minimal_reset': False}
2020-11-02 11:00:22,661 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:22,661 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-11-02 11:00:22,815 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:00:22,815 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:00:22,815 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:22,815 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:22,815 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:22,816 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:00:22,957 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:00:22,957 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:22,957 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:22,957 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:00:23,096 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:00:23,096 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:23,096 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:23,097 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:00:23,236 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:00:23,236 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:23,236 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:23,236 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:00:23,376 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:00:23,376 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:23,376 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:23,376 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:00:23,499 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:00:23,499 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:23,499 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:00:33,503 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:33,503 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:33,503 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:00:33,640 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:00:48,662 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:48,662 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:48,662 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:00:48,801 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:00:48,801 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'speed_code': 20}
2020-11-02 11:00:48,801 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'I', 'volume_ul': 250.0}
2020-11-02 11:00:48,801 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'I'}
2020-11-02 11:00:48,802 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'rel_position': -1500}
2020-11-02 11:00:48,802 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:00:48,802 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'O'}
2020-11-02 11:00:48,802 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'minimal_reset': False}
2020-11-02 11:00:48,802 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'S20ID1500M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:48,802 DEBUG sendRcv: sending cmd_string: S20ID1500M1000OR
2020-11-02 11:00:48,958 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:00:48,958 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:00:48,958 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:48,958 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:48,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:48,959 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:00:49,099 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:00:49,099 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:49,099 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:49,099 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:00:49,237 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:00:49,237 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:49,237 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:49,237 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:00:49,374 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:00:49,374 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:49,374 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:49,374 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:00:49,514 DEBUG sendRcv: received response: (b'2038', 1)
2020-11-02 11:00:49,514 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:49,514 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:00:49,514 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:00:49,656 DEBUG sendRcv: received response: (b'2026', 1)
2020-11-02 11:00:49,656 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:00:49,656 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'timeout': 17.192767384473015, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:01:34,703 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:34,703 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:34,703 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:01:34,843 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:01:34,843 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'speed_code': 10}
2020-11-02 11:01:34,843 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'O'}
2020-11-02 11:01:34,843 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:01:34,843 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'abs_position': 2000}
2020-11-02 11:01:34,843 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:01:34,843 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'minimal_reset': False}
2020-11-02 11:01:34,844 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:34,844 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:01:35,216 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:01:35,216 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:01:35,216 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,216 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,216 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:35,216 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:01:35,356 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:01:35,356 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,356 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:35,356 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:01:35,493 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:01:35,493 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,493 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:35,493 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:01:35,634 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:01:35,634 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,634 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:35,634 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:01:35,774 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:01:35,774 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,774 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:35,774 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:01:35,913 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:01:35,913 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:35,913 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:01:45,915 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:45,915 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:45,915 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:01:46,053 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:01:46,053 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'speed_code': 20}
2020-11-02 11:01:46,053 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'I', 'volume_ul': 250.0}
2020-11-02 11:01:46,054 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'I'}
2020-11-02 11:01:46,054 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'rel_position': -1500}
2020-11-02 11:01:46,054 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:01:46,054 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'O'}
2020-11-02 11:01:46,054 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'minimal_reset': False}
2020-11-02 11:01:46,054 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'S20ID1500M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:46,054 DEBUG sendRcv: sending cmd_string: S20ID1500M1000OR
2020-11-02 11:01:46,210 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:01:46,210 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:01:46,210 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,210 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,210 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:46,210 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:01:46,350 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:01:46,350 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,350 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:46,350 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:01:46,490 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:01:46,490 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,490 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:46,490 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:01:46,630 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:01:46,630 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,630 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:46,630 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:01:46,770 DEBUG sendRcv: received response: (b'2037', 1)
2020-11-02 11:01:46,770 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,770 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:01:46,770 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:01:46,908 DEBUG sendRcv: received response: (b'2025', 1)
2020-11-02 11:01:46,908 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:01:46,908 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'timeout': 17.192761424008538, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:02:31,958 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:31,958 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:31,958 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:02:32,098 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:02:32,098 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'speed_code': 10}
2020-11-02 11:02:32,098 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'to_port': 'O'}
2020-11-02 11:02:32,098 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:02:32,098 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'abs_position': 2000}
2020-11-02 11:02:32,098 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'delay_ms': 1000}
2020-11-02 11:02:32,098 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'minimal_reset': False}
2020-11-02 11:02:32,098 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:32,099 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:02:32,254 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:02:32,254 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:02:32,254 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:32,254 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:32,254 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:32,254 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:02:32,395 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:02:32,395 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:32,395 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:32,395 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:02:32,537 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:02:32,537 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:32,537 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:32,537 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:02:32,676 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:02:32,676 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:32,676 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:32,676 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:02:32,814 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:02:32,814 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>}
2020-11-02 11:02:32,814 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000002AE1C8F6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:02:32,815 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:02:33,158 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:04:33,329 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'on': False}
2020-11-02 11:04:33,329 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:33,329 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:04:33,466 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:04:33,466 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:33,466 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:33,466 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:33,466 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:04:33,606 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:04:33,606 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:33,606 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:33,606 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:04:33,744 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:04:33,744 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:33,744 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:33,744 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:04:33,885 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:04:33,885 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:33,885 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:33,885 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:04:34,025 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:04:34,025 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:34,025 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:04:34,025 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:34,025 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:04:34,163 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:04:34,163 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:04:47,939 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'speed_code': 12}
2020-11-02 11:04:47,939 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'speed_code': 10}
2020-11-02 11:04:47,939 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'to_port': 'O'}
2020-11-02 11:04:47,939 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'delay_ms': 1000}
2020-11-02 11:04:47,939 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'abs_position': 2000}
2020-11-02 11:04:47,939 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'delay_ms': 1000}
2020-11-02 11:04:47,939 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'minimal_reset': False}
2020-11-02 11:04:47,940 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:47,940 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-11-02 11:04:48,094 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:04:48,094 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:04:48,094 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,094 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,094 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:48,094 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:04:48,236 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:04:48,236 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,236 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:48,236 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:04:48,375 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:04:48,375 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,375 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:48,375 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:04:48,512 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:04:48,512 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:48,512 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:04:48,652 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:04:48,652 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,652 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:48,652 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:04:48,791 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:04:48,791 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:48,791 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:04:58,806 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:04:58,806 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:04:58,806 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:04:58,946 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:05:13,956 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:13,956 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:13,956 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:05:14,096 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:05:14,096 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'speed_code': 20}
2020-11-02 11:05:14,096 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'to_port': 'I', 'volume_ul': 250.0}
2020-11-02 11:05:14,096 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'to_port': 'I'}
2020-11-02 11:05:14,096 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'rel_position': -1500}
2020-11-02 11:05:14,096 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'delay_ms': 1000}
2020-11-02 11:05:14,096 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'to_port': 'O'}
2020-11-02 11:05:14,096 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'minimal_reset': False}
2020-11-02 11:05:14,096 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': 'S20ID1500M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:14,096 DEBUG sendRcv: sending cmd_string: S20ID1500M1000OR
2020-11-02 11:05:14,252 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:05:14,252 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:05:14,252 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,252 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,252 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:14,252 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:05:14,392 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:05:14,392 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,392 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:14,392 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:05:14,531 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:05:14,531 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,531 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:14,531 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:05:14,673 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:05:14,673 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,673 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:14,673 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:05:14,812 DEBUG sendRcv: received response: (b'2038', 1)
2020-11-02 11:05:14,812 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,812 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:05:14,812 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:05:14,952 DEBUG sendRcv: received response: (b'2026', 1)
2020-11-02 11:05:14,952 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:05:14,952 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'timeout': 17.19160104078405, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:06:00,014 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:06:00,014 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:06:00,019 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:06:00,153 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:06:00,153 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'speed_code': 10}
2020-11-02 11:06:00,153 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'to_port': 'O'}
2020-11-02 11:06:00,153 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'delay_ms': 1000}
2020-11-02 11:06:00,153 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'abs_position': 2000}
2020-11-02 11:06:00,153 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'delay_ms': 1000}
2020-11-02 11:06:00,153 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'minimal_reset': False}
2020-11-02 11:06:00,153 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:06:00,153 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:06:00,309 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:06:00,309 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:06:00,309 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:06:00,309 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:06:00,310 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:06:00,310 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:06:00,449 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:06:00,449 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:06:00,449 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:06:00,449 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:06:00,590 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:06:00,590 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>}
2020-11-02 11:06:00,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000025CD8356640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:06:00,590 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:06:00,932 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:09:54,596 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on': False}
2020-11-02 11:09:54,596 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:09:54,597 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:09:54,724 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:09:54,724 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:09:54,724 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:09:54,724 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:09:54,724 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:09:54,865 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:09:54,865 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:09:54,865 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:09:54,865 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:09:55,004 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:09:55,004 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:09:55,005 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:09:55,005 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:09:55,145 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:09:55,145 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:09:55,145 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:09:55,145 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:09:55,284 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:09:55,284 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:09:55,284 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:09:55,284 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:09:55,284 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:09:55,425 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:09:55,425 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:10:09,206 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 12}
2020-11-02 11:10:09,206 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 10}
2020-11-02 11:10:09,206 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'O'}
2020-11-02 11:10:09,206 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:10:09,206 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'abs_position': 2000}
2020-11-02 11:10:09,206 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:10:09,206 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'minimal_reset': False}
2020-11-02 11:10:09,206 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:09,207 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-11-02 11:10:09,362 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:10:09,362 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:10:09,362 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:09,363 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:09,363 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:10:09,502 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:10:09,502 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:09,502 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:09,502 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:10:09,626 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:10:09,626 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:09,626 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:10:19,641 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:19,641 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:19,641 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:10:19,780 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:10:34,788 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:34,789 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:34,789 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:10:34,926 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:10:34,926 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 20}
2020-11-02 11:10:34,926 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'I', 'volume_ul': 250.0}
2020-11-02 11:10:34,926 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'I'}
2020-11-02 11:10:34,926 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'rel_position': -1500}
2020-11-02 11:10:34,926 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:10:34,926 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'O'}
2020-11-02 11:10:34,926 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'minimal_reset': False}
2020-11-02 11:10:34,926 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'S20ID1500M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:34,926 DEBUG sendRcv: sending cmd_string: S20ID1500M1000OR
2020-11-02 11:10:35,079 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:10:35,079 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:10:35,079 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:35,080 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:35,080 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:10:35,219 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:10:35,219 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:35,219 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:10:35,219 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:10:35,358 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:10:35,358 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:10:35,358 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 17.61475754064672, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:11:20,392 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:20,392 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:20,392 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:11:20,532 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:11:20,532 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 10}
2020-11-02 11:11:20,532 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'O'}
2020-11-02 11:11:20,532 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:11:20,532 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'abs_position': 2000}
2020-11-02 11:11:20,532 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:11:20,532 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'minimal_reset': False}
2020-11-02 11:11:20,532 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:20,532 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:11:20,687 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:11:20,687 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:11:20,687 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:20,687 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:20,687 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:11:20,827 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:11:20,827 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:20,827 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:20,827 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:11:20,965 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:11:20,965 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:20,965 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:11:30,974 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:30,974 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:30,974 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:11:31,114 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:11:31,114 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 20}
2020-11-02 11:11:31,115 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'I', 'volume_ul': 250.0}
2020-11-02 11:11:31,115 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'I'}
2020-11-02 11:11:31,115 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'rel_position': -1500}
2020-11-02 11:11:31,115 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:11:31,115 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'O'}
2020-11-02 11:11:31,115 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'minimal_reset': False}
2020-11-02 11:11:31,115 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'S20ID1500M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:31,115 DEBUG sendRcv: sending cmd_string: S20ID1500M1000OR
2020-11-02 11:11:31,270 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:11:31,270 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:11:31,270 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:31,270 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:31,270 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:11:31,410 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:11:31,410 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:31,410 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:11:31,410 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:11:31,549 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:11:31,549 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:11:31,549 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 17.61239838880651, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:12:16,590 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:16,590 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:16,590 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:12:16,729 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:12:16,729 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 10}
2020-11-02 11:12:16,729 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'O'}
2020-11-02 11:12:16,729 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:12:16,729 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'abs_position': 2000}
2020-11-02 11:12:16,729 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:12:16,729 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'minimal_reset': False}
2020-11-02 11:12:16,729 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:16,729 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:12:16,886 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:12:16,886 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:12:16,886 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:16,886 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:16,886 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:12:17,024 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:12:17,024 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:17,024 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:17,024 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:12:17,164 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:12:17,164 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:17,164 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:12:27,172 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:27,172 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:27,172 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:12:27,311 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:12:27,311 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'speed_code': 20}
2020-11-02 11:12:27,312 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'I', 'volume_ul': 250.0}
2020-11-02 11:12:27,312 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'I'}
2020-11-02 11:12:27,312 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'rel_position': -1500}
2020-11-02 11:12:27,312 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'delay_ms': 1000}
2020-11-02 11:12:27,312 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'to_port': 'O'}
2020-11-02 11:12:27,312 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'minimal_reset': False}
2020-11-02 11:12:27,312 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': 'S20ID1500M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:27,312 DEBUG sendRcv: sending cmd_string: S20ID1500M1000OR
2020-11-02 11:12:27,468 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:12:27,468 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:12:27,468 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:27,468 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:27,468 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:12:27,607 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:12:27,607 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:27,607 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:12:27,607 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:12:27,747 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:12:27,747 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>}
2020-11-02 11:12:27,747 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000267C7FA6640>, 'timeout': 17.61253953260534, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:13:25,939 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'on': False}
2020-11-02 11:13:25,940 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:25,940 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:13:26,077 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:13:26,077 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:26,077 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:26,077 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:26,077 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:13:26,217 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:13:26,217 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:26,217 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:26,218 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:13:26,355 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:13:26,355 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:26,355 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:26,355 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:13:26,494 DEBUG sendRcv: received response: (b'170', 1)
2020-11-02 11:13:26,494 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:26,494 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:26,494 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:13:26,636 DEBUG sendRcv: received response: (b'500', 1)
2020-11-02 11:13:26,636 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:26,636 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:13:26,636 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:26,636 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:13:26,762 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:13:26,762 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:13:34,302 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'speed_code': 12}
2020-11-02 11:13:34,302 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'speed_code': 10}
2020-11-02 11:13:34,302 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'to_port': 'O'}
2020-11-02 11:13:34,302 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'delay_ms': 1000}
2020-11-02 11:13:34,302 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'abs_position': 2000}
2020-11-02 11:13:34,302 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'delay_ms': 1000}
2020-11-02 11:13:34,302 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'minimal_reset': False}
2020-11-02 11:13:34,302 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:34,302 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-11-02 11:13:34,456 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:13:34,456 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:13:34,456 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:34,456 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:34,456 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:13:34,597 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:13:34,597 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:34,597 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:34,597 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:13:34,737 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:13:34,737 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:34,737 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'timeout': 1.6765220891135075, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:13:44,742 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:44,742 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:44,742 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:13:44,881 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:13:59,907 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:13:59,907 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:13:59,907 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:14:00,047 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:14:00,047 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'speed_code': 10}
2020-11-02 11:14:00,047 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'to_port': 'O'}
2020-11-02 11:14:00,047 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'delay_ms': 1000}
2020-11-02 11:14:00,047 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'abs_position': 2000}
2020-11-02 11:14:00,047 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'delay_ms': 1000}
2020-11-02 11:14:00,047 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'minimal_reset': False}
2020-11-02 11:14:00,048 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:00,048 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:14:00,203 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:14:00,203 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:14:00,203 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:00,204 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:00,204 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:14:00,344 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:14:00,344 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:00,344 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:00,344 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:14:00,484 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:14:00,484 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:00,484 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'timeout': 2.299171997179304, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:14:10,491 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:10,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:10,491 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:14:10,631 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:14:10,631 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'speed_code': 30}
2020-11-02 11:14:10,631 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:14:10,631 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'to_port': 'I'}
2020-11-02 11:14:10,631 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'rel_position': -1800}
2020-11-02 11:14:10,631 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'delay_ms': 1000}
2020-11-02 11:14:10,631 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'to_port': 'O'}
2020-11-02 11:14:10,631 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'minimal_reset': False}
2020-11-02 11:14:10,632 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': 'S30ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:10,632 DEBUG sendRcv: sending cmd_string: S30ID1800M1000OR
2020-11-02 11:14:10,785 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:14:10,785 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:14:10,785 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:10,785 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:10,785 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:14:10,925 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:14:10,925 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:10,925 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:14:10,925 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:14:11,065 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:14:11,065 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>}
2020-11-02 11:14:11,065 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x00000237408D6640>, 'timeout': 51.39529024532864, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:15:32,289 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on': False}
2020-11-02 11:15:32,290 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:32,291 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:15:32,424 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:15:32,424 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:32,424 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:32,424 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:32,424 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:15:32,565 DEBUG sendRcv: received response: (b'70', 1)
2020-11-02 11:15:32,565 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:32,565 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:32,565 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:15:32,705 DEBUG sendRcv: received response: (b'70', 1)
2020-11-02 11:15:32,705 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:32,705 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:32,705 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:15:32,847 DEBUG sendRcv: received response: (b'70', 1)
2020-11-02 11:15:32,847 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:32,847 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:32,847 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:15:32,987 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:15:32,987 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:32,987 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:15:32,988 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:32,988 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:15:33,127 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:15:33,127 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:15:39,826 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 12}
2020-11-02 11:15:39,826 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:15:39,826 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:15:39,827 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:15:39,827 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:15:39,827 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:15:39,827 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:15:39,827 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S12S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:39,827 DEBUG sendRcv: sending cmd_string: S12S10OM1000A2000M1000R
2020-11-02 11:15:39,983 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:15:39,983 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:15:39,983 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:39,983 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:39,983 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:15:40,123 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:15:40,123 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:40,123 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:40,123 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:15:40,248 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:15:40,248 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:40,248 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.070545005089896, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:15:50,263 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:15:50,263 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:15:50,263 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:15:50,400 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:05,415 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:05,415 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:05,416 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:05,555 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:05,555 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:16:05,555 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:16:05,555 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:16:05,556 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:16:05,556 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:16:05,556 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:16:05,556 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:05,556 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:16:05,712 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:16:05,712 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:16:05,712 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:05,712 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:05,712 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:16:05,853 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:05,853 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:05,853 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:05,853 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:05,992 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:05,992 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:05,992 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.305388974434989, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:16:15,996 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:15,996 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:15,996 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:16,135 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:16,135 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:16:16,135 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:16:16,135 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I'}
2020-11-02 11:16:16,135 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'rel_position': -1800}
2020-11-02 11:16:16,135 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:16:16,135 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:16:16,136 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:16:16,136 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:16,136 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:16:16,276 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:16:16,276 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:16:16,276 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:16,276 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:16,276 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:16:16,416 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:16,416 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:16,416 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:16,416 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:16,555 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:16,555 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:16,555 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.273288726098197, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:16:31,561 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:31,561 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:31,561 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:31,701 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:16:31,701 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:16:31,701 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:16:31,701 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:16:31,701 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:16:31,701 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:16:31,701 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:16:31,701 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:31,701 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:16:31,857 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:16:31,857 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:16:31,857 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:31,857 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:31,857 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:16:31,997 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:16:31,997 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:31,997 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:31,997 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:32,138 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:16:32,138 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:32,138 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:16:42,147 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:42,147 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:42,148 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:42,288 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:42,288 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:16:42,288 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:16:42,288 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I'}
2020-11-02 11:16:42,288 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'rel_position': -1800}
2020-11-02 11:16:42,288 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:16:42,288 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:16:42,288 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:16:42,288 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:42,288 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:16:42,444 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:16:42,444 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:16:42,444 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:42,444 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:42,444 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:16:42,583 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:42,583 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:42,583 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:16:42,583 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:16:42,721 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:16:42,721 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:16:42,721 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.2588641636439735, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:17:12,741 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:12,741 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:12,741 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:17:12,881 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:17:12,881 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:17:12,881 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:17:12,881 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:17:12,881 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:17:12,881 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:17:12,881 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:17:12,881 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:12,881 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:17:13,037 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:17:13,037 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:17:13,037 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:13,037 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:13,037 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:17:13,176 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:17:13,176 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:13,176 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:13,176 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:17:13,316 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:17:13,316 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:13,316 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:17:23,326 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:23,326 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:23,326 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:17:23,465 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:17:23,465 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:17:23,465 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:17:23,466 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I'}
2020-11-02 11:17:23,466 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'rel_position': -1800}
2020-11-02 11:17:23,466 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:17:23,466 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:17:23,466 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:17:23,466 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:23,466 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:17:23,620 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:17:23,620 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:17:23,620 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:23,620 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:23,620 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:17:23,759 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:17:23,759 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:23,759 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:23,759 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:17:23,897 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:17:23,897 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:23,897 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.261193751580375, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:17:53,945 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:53,945 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:53,945 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:17:54,085 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:17:54,085 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:17:54,085 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:17:54,085 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:17:54,085 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:17:54,085 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:17:54,085 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:17:54,085 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:54,086 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:17:54,240 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:17:54,240 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:17:54,240 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:54,240 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:54,240 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:17:54,380 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:17:54,380 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:54,380 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:17:54,380 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:17:54,520 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:17:54,520 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:17:54,520 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:18:04,526 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:04,526 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:04,526 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:18:04,667 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:18:04,667 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:18:04,667 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:18:04,667 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I'}
2020-11-02 11:18:04,668 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'rel_position': -1800}
2020-11-02 11:18:04,668 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:18:04,668 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:18:04,668 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:18:04,668 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:04,668 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:18:04,822 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:18:04,822 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:18:04,822 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:04,822 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:04,822 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:18:04,961 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:18:04,961 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:04,961 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:04,961 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:18:05,100 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:18:05,100 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:05,100 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.260225056893485, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:18:35,120 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:35,120 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:35,120 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:18:35,259 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:18:35,259 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:18:35,259 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:18:35,259 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:18:35,259 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:18:35,259 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:18:35,259 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:18:35,259 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:35,260 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:18:35,415 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:18:35,415 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:18:35,415 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:35,415 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:35,415 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:18:35,554 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:18:35,554 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:35,554 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:35,554 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:18:35,695 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:18:35,695 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:35,695 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:18:45,705 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:45,705 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:45,705 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:18:45,845 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:18:45,845 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:18:45,845 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:18:45,845 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I'}
2020-11-02 11:18:45,845 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'rel_position': -1800}
2020-11-02 11:18:45,845 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:18:45,845 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:18:45,846 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:18:45,846 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:45,846 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:18:46,000 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:18:46,000 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:18:46,000 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:46,000 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:46,000 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:18:46,142 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:18:46,142 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:46,142 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:18:46,142 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:18:46,281 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:18:46,281 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:18:46,281 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.2569560997554237, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:19:16,310 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:16,310 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:16,310 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:19:16,450 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:19:16,450 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:19:16,450 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:19:16,450 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:19:16,450 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'abs_position': 2000}
2020-11-02 11:19:16,450 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:19:16,450 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:19:16,451 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10OM1000A2000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:16,451 DEBUG sendRcv: sending cmd_string: S10OM1000A2000M1000R
2020-11-02 11:19:16,605 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:19:16,605 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:19:16,605 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:16,605 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:16,605 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:19:16,745 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:19:16,745 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:16,745 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:16,745 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:19:16,884 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:19:16,884 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:16,884 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:19:26,884 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:26,884 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:26,884 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:19:27,023 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:19:27,023 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'speed_code': 10}
2020-11-02 11:19:27,023 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:19:27,023 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'I'}
2020-11-02 11:19:27,023 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'rel_position': -1800}
2020-11-02 11:19:27,023 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'delay_ms': 1000}
2020-11-02 11:19:27,023 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'to_port': 'O'}
2020-11-02 11:19:27,024 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'minimal_reset': False}
2020-11-02 11:19:27,024 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:27,024 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:19:27,180 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:19:27,180 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:19:27,180 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:27,180 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:27,180 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:19:27,319 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:19:27,319 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:27,319 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:19:27,319 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:19:27,461 DEBUG sendRcv: received response: (b'2000', 1)
2020-11-02 11:19:27,461 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>}
2020-11-02 11:19:27,461 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000019C91C56640>, 'timeout': 2.2546195976802283, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:23:13,782 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'on': False}
2020-11-02 11:23:13,782 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:13,782 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:23:13,921 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:23:13,921 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:13,922 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:13,922 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:13,922 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:23:14,059 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:23:14,059 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:14,059 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:14,059 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:23:14,197 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:23:14,197 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:14,197 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:14,197 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:23:14,338 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:23:14,338 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:14,338 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:14,338 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:23:14,477 DEBUG sendRcv: received response: (b'200', 1)
2020-11-02 11:23:14,477 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:14,477 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:23:14,477 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:14,477 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:23:14,617 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:23:14,617 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:23:21,280 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'speed_code': 12}
2020-11-02 11:23:21,280 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'speed_code': 10}
2020-11-02 11:23:21,280 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'O'}
2020-11-02 11:23:21,280 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'delay_ms': 1000}
2020-11-02 11:23:21,281 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'abs_position': 3000}
2020-11-02 11:23:21,281 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'delay_ms': 1000}
2020-11-02 11:23:21,281 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'minimal_reset': False}
2020-11-02 11:23:21,281 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': 'S12S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:21,281 DEBUG sendRcv: sending cmd_string: S12S10OM1000A3000M1000R
2020-11-02 11:23:21,436 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:23:21,436 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:23:21,436 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:21,436 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:21,436 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:23:21,575 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:23:21,575 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:21,575 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:21,575 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:23:21,718 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:23:21,718 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:21,718 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'timeout': 3.271314186405727, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:23:31,724 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:31,724 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:31,724 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:23:31,865 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:23:46,881 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:46,881 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:46,881 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:23:47,023 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:23:47,023 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'speed_code': 10}
2020-11-02 11:23:47,023 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:23:47,023 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'I'}
2020-11-02 11:23:47,023 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'rel_position': -1800}
2020-11-02 11:23:47,023 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'delay_ms': 1000}
2020-11-02 11:23:47,023 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'O'}
2020-11-02 11:23:47,023 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'minimal_reset': False}
2020-11-02 11:23:47,023 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:47,023 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:23:47,177 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:23:47,177 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:23:47,177 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:47,177 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:47,177 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:23:47,314 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:23:47,314 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:47,314 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:23:47,314 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:23:47,453 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:23:47,453 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:23:47,453 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'timeout': 2.2288973277326316, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:24:17,467 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:17,467 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:17,467 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:24:17,606 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:24:17,606 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'speed_code': 10}
2020-11-02 11:24:17,606 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'O'}
2020-11-02 11:24:17,606 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'delay_ms': 1000}
2020-11-02 11:24:17,606 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'abs_position': 3000}
2020-11-02 11:24:17,606 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'delay_ms': 1000}
2020-11-02 11:24:17,606 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'minimal_reset': False}
2020-11-02 11:24:17,606 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': 'S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:17,606 DEBUG sendRcv: sending cmd_string: S10OM1000A3000M1000R
2020-11-02 11:24:17,761 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:24:17,761 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:24:17,761 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:17,761 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:17,761 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:24:17,902 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:24:17,902 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:17,902 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:17,902 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:24:18,039 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:24:18,039 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:18,039 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:24:28,041 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:28,041 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:28,041 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:24:28,180 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:24:28,180 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'speed_code': 10}
2020-11-02 11:24:28,180 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:24:28,180 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'I'}
2020-11-02 11:24:28,180 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'rel_position': -1800}
2020-11-02 11:24:28,180 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'delay_ms': 1000}
2020-11-02 11:24:28,180 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'to_port': 'O'}
2020-11-02 11:24:28,180 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'minimal_reset': False}
2020-11-02 11:24:28,180 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': 'S10ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:28,180 DEBUG sendRcv: sending cmd_string: S10ID1800M1000OR
2020-11-02 11:24:28,336 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:24:28,336 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:24:28,336 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:28,336 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:28,336 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:24:28,478 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:24:28,478 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:28,478 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:28,478 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:24:28,618 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:24:28,618 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>}
2020-11-02 11:24:28,618 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001D3F9866640>, 'timeout': 2.2204015200849265, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:24:55,209 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'on': False}
2020-11-02 11:24:55,209 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:55,210 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:24:55,350 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:24:55,350 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:24:55,350 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:24:55,350 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:55,350 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:24:55,489 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:24:55,489 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:24:55,489 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:55,489 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:24:55,630 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:24:55,630 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:24:55,630 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:55,630 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:24:55,768 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:24:55,768 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:24:55,769 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:55,769 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:24:55,907 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:24:55,907 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:24:55,907 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:24:55,907 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:24:55,908 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:24:56,047 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:24:56,047 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:25:06,780 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'speed_code': 12}
2020-11-02 11:25:06,780 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'speed_code': 10}
2020-11-02 11:25:06,780 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'to_port': 'O'}
2020-11-02 11:25:06,780 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'delay_ms': 1000}
2020-11-02 11:25:06,780 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'abs_position': 1000}
2020-11-02 11:25:06,780 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'delay_ms': 1000}
2020-11-02 11:25:06,780 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'minimal_reset': False}
2020-11-02 11:25:06,781 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': 'S12S10OM1000A1000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:06,781 DEBUG sendRcv: sending cmd_string: S12S10OM1000A1000M1000R
2020-11-02 11:25:06,936 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:25:06,936 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:25:06,936 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:06,936 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:06,936 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:25:07,075 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:25:07,075 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:07,075 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:07,076 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:25:07,215 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:25:07,215 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:07,215 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'timeout': 0.02501706535775322, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:25:17,224 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:17,224 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:17,224 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:25:17,365 DEBUG sendRcv: received response: (b'1000', 1)
2020-11-02 11:25:32,372 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:32,372 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:32,372 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:25:32,511 DEBUG sendRcv: received response: (b'1000', 1)
2020-11-02 11:25:32,511 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'speed_code': 10}
2020-11-02 11:25:32,511 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'to_port': 'O'}
2020-11-02 11:25:32,511 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'delay_ms': 1000}
2020-11-02 11:25:32,511 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'abs_position': 1000}
2020-11-02 11:25:32,511 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'delay_ms': 1000}
2020-11-02 11:25:32,512 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'minimal_reset': False}
2020-11-02 11:25:32,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': 'S10OM1000A1000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:32,512 DEBUG sendRcv: sending cmd_string: S10OM1000A1000M1000R
2020-11-02 11:25:32,664 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:25:32,664 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:25:32,664 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:32,664 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:32,664 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:25:32,803 DEBUG sendRcv: received response: (b'1000', 1)
2020-11-02 11:25:32,803 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:32,804 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:25:32,804 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:25:32,943 DEBUG sendRcv: received response: (b'1000', 1)
2020-11-02 11:25:32,943 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>}
2020-11-02 11:25:32,943 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001BF10EB6640>, 'timeout': 1.0268664782758439, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:26:06,069 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'on': False}
2020-11-02 11:26:06,069 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:06,070 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:26:06,205 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:26:06,205 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:06,205 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:06,205 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:06,205 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:26:06,346 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:26:06,346 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:06,346 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:06,346 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:26:06,483 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:26:06,484 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:06,484 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:06,484 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:26:06,624 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:26:06,624 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:06,624 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:06,624 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:26:06,765 DEBUG sendRcv: received response: (b'1000', 1)
2020-11-02 11:26:06,765 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:06,765 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:26:06,766 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:06,766 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:26:06,906 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:26:06,906 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:26:16,730 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'speed_code': 12}
2020-11-02 11:26:16,730 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'speed_code': 10}
2020-11-02 11:26:16,730 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'to_port': 'O'}
2020-11-02 11:26:16,730 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'delay_ms': 1000}
2020-11-02 11:26:16,730 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'abs_position': 3000}
2020-11-02 11:26:16,730 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'delay_ms': 1000}
2020-11-02 11:26:16,731 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'minimal_reset': False}
2020-11-02 11:26:16,731 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': 'S12S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:16,731 DEBUG sendRcv: sending cmd_string: S12S10OM1000A3000M1000R
2020-11-02 11:26:16,887 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:26:16,887 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:26:16,887 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:16,887 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:16,887 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:26:17,028 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:26:17,028 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:17,028 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:17,028 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:26:17,166 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:26:17,166 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:17,166 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'timeout': 2.2740126078839986, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:26:27,173 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:27,173 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:27,173 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:26:27,313 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:26:42,339 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>}
2020-11-02 11:26:42,339 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000022831936640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:26:42,339 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:26:42,674 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:27:12,095 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on': False}
2020-11-02 11:27:12,095 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:12,095 DEBUG sendRcv: sending cmd_string: N0R
2020-11-02 11:27:12,234 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:27:12,234 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:12,234 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:12,234 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:12,234 DEBUG sendRcv: sending cmd_string: ?1
2020-11-02 11:27:12,371 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:27:12,371 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:12,371 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:12,371 DEBUG sendRcv: sending cmd_string: ?2
2020-11-02 11:27:12,512 DEBUG sendRcv: received response: (b'1600', 1)
2020-11-02 11:27:12,512 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:12,512 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:12,512 DEBUG sendRcv: sending cmd_string: ?3
2020-11-02 11:27:12,649 DEBUG sendRcv: received response: (b'901', 1)
2020-11-02 11:27:12,649 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:12,649 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:12,649 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:27:12,787 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:27:12,787 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:12,787 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2020-11-02 11:27:12,787 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:12,787 DEBUG sendRcv: sending cmd_string: Z0R
2020-11-02 11:27:12,926 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:27:12,926 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:27:30,690 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 12}
2020-11-02 11:27:30,690 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 10}
2020-11-02 11:27:30,691 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:27:30,691 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:27:30,691 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'abs_position': 3000}
2020-11-02 11:27:30,691 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:27:30,691 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:27:30,691 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S12S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:30,691 DEBUG sendRcv: sending cmd_string: S12S10OM1000A3000M1000R
2020-11-02 11:27:30,847 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:27:30,847 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:27:30,847 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:30,847 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:30,847 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:27:30,988 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:27:30,988 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:30,988 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:30,988 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:27:31,128 DEBUG sendRcv: received response: (b'0', 1)
2020-11-02 11:27:31,128 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:31,128 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:27:41,133 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:41,133 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:41,133 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:27:41,272 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:27:56,283 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:56,283 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:56,283 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:27:56,423 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:27:56,423 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 5}
2020-11-02 11:27:56,423 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:27:56,423 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I'}
2020-11-02 11:27:56,424 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'rel_position': -1800}
2020-11-02 11:27:56,424 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:27:56,424 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:27:56,424 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:27:56,424 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S5ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:56,424 DEBUG sendRcv: sending cmd_string: S5ID1800M1000OR
2020-11-02 11:27:56,566 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:27:56,566 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:27:56,566 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:56,566 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:56,566 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:27:56,705 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:27:56,705 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:56,705 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:27:56,705 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:27:56,845 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:27:56,845 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:27:56,845 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 1.1513951628461565, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:28:11,854 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:11,854 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:11,854 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:11,994 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:28:11,994 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 10}
2020-11-02 11:28:11,995 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:28:11,995 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:28:11,995 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'abs_position': 3000}
2020-11-02 11:28:11,995 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:28:11,995 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:28:11,995 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:11,995 DEBUG sendRcv: sending cmd_string: S10OM1000A3000M1000R
2020-11-02 11:28:12,146 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:28:12,146 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:28:12,146 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:12,146 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:12,147 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:28:12,287 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:28:12,287 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:12,287 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:12,287 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:12,426 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:28:12,426 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:12,426 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:28:22,432 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:22,432 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:22,432 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:22,570 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:28:22,570 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 5}
2020-11-02 11:28:22,570 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:28:22,570 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I'}
2020-11-02 11:28:22,570 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'rel_position': -1800}
2020-11-02 11:28:22,570 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:28:22,570 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:28:22,570 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:28:22,570 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S5ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:22,570 DEBUG sendRcv: sending cmd_string: S5ID1800M1000OR
2020-11-02 11:28:22,714 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:28:22,714 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:28:22,714 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:22,714 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:22,714 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:28:22,855 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:28:22,855 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:22,855 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:22,855 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:22,995 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:28:22,995 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:22,995 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 1.1476388781324114, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:28:38,019 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:38,019 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:38,019 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:38,161 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:28:38,161 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 10}
2020-11-02 11:28:38,161 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:28:38,162 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:28:38,162 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'abs_position': 3000}
2020-11-02 11:28:38,162 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:28:38,162 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:28:38,162 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:38,162 DEBUG sendRcv: sending cmd_string: S10OM1000A3000M1000R
2020-11-02 11:28:38,319 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:28:38,319 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:28:38,319 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:38,319 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:38,319 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:28:38,457 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:28:38,457 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:38,457 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:38,457 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:38,598 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:28:38,598 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:38,598 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:28:48,603 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:48,603 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:48,603 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:48,741 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:28:48,741 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 5}
2020-11-02 11:28:48,741 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:28:48,741 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I'}
2020-11-02 11:28:48,741 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'rel_position': -1800}
2020-11-02 11:28:48,741 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:28:48,741 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:28:48,741 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:28:48,742 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S5ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:48,742 DEBUG sendRcv: sending cmd_string: S5ID1800M1000OR
2020-11-02 11:28:48,898 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:28:48,898 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:28:48,898 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:48,899 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:48,899 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:28:49,038 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:28:49,038 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:49,038 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:28:49,038 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:28:49,180 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:28:49,180 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:28:49,180 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 1.1341827719464983, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:29:04,193 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:04,193 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:04,193 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:29:04,333 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:29:04,333 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 10}
2020-11-02 11:29:04,333 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:29:04,333 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:29:04,333 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'abs_position': 3000}
2020-11-02 11:29:04,333 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:29:04,333 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:29:04,333 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:04,333 DEBUG sendRcv: sending cmd_string: S10OM1000A3000M1000R
2020-11-02 11:29:04,491 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:29:04,491 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:29:04,491 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:04,491 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:04,491 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:29:04,631 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:29:04,631 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:04,631 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:04,631 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:29:04,772 DEBUG sendRcv: received response: (b'1200', 1)
2020-11-02 11:29:04,772 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:04,772 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2020-11-02 11:29:14,777 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:14,777 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:14,777 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:29:14,915 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:29:14,915 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'speed_code': 5}
2020-11-02 11:29:14,915 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I', 'volume_ul': 300.0}
2020-11-02 11:29:14,915 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'I'}
2020-11-02 11:29:14,915 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'rel_position': -1800}
2020-11-02 11:29:14,915 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'delay_ms': 1000}
2020-11-02 11:29:14,915 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'to_port': 'O'}
2020-11-02 11:29:14,915 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'minimal_reset': False}
2020-11-02 11:29:14,915 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': 'S5ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:14,915 DEBUG sendRcv: sending cmd_string: S5ID1800M1000OR
2020-11-02 11:29:15,069 DEBUG sendRcv: received response: (None, 0)
2020-11-02 11:29:15,069 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'on_execute': True, 'minimal_reset': False}
2020-11-02 11:29:15,070 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:15,070 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:15,070 DEBUG sendRcv: sending cmd_string: ?6
2020-11-02 11:29:15,206 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:29:15,206 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:15,206 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2020-11-02 11:29:15,206 DEBUG sendRcv: sending cmd_string: ?
2020-11-02 11:29:15,346 DEBUG sendRcv: received response: (b'3000', 1)
2020-11-02 11:29:15,346 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>}
2020-11-02 11:29:15,346 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x000001B7FAB06640>, 'timeout': 1.1415637343183245, 'polling_interval': 0.3, 'delay': None}
2021-01-07 18:09:52,844 DEBUG -> setMicrostep: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'on': False}
2021-01-07 18:09:52,845 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': 'N0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:09:52,845 DEBUG sendRcv: sending cmd_string: N0R
2021-01-07 18:09:52,980 DEBUG sendRcv: received response: (None, 0)
2021-01-07 18:09:52,980 DEBUG -> updateSpeeds: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:09:52,980 DEBUG -> getStartSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:09:52,980 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?1', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:09:52,980 DEBUG sendRcv: sending cmd_string: ?1
2021-01-07 18:09:53,121 DEBUG sendRcv: received response: (b'901', 1)
2021-01-07 18:09:53,121 DEBUG -> getTopSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:09:53,121 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?2', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:09:53,121 DEBUG sendRcv: sending cmd_string: ?2
2021-01-07 18:09:53,260 DEBUG sendRcv: received response: (b'901', 1)
2021-01-07 18:09:53,260 DEBUG -> getCutoffSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:09:53,260 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?3', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:09:53,260 DEBUG sendRcv: sending cmd_string: ?3
2021-01-07 18:09:53,399 DEBUG sendRcv: received response: (b'901', 1)
2021-01-07 18:09:53,399 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:09:53,399 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:09:53,399 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:09:53,538 DEBUG sendRcv: received response: (b'8142', 1)
2021-01-07 18:09:53,538 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:09:53,538 DEBUG -> init: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'init_force': None, 'direction': None, 'in_port': None, 'out_port': None}
2021-01-07 18:09:53,538 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': 'Z0', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:09:53,538 DEBUG sendRcv: sending cmd_string: Z0R
2021-01-07 18:09:53,677 DEBUG sendRcv: received response: (None, 0)
2021-01-07 18:09:53,677 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'timeout': 10, 'polling_interval': 0.3, 'delay': None}
2021-01-07 18:10:04,367 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'speed_code': 12}
2021-01-07 18:10:04,367 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'speed_code': 10}
2021-01-07 18:10:04,367 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'O'}
2021-01-07 18:10:04,367 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'delay_ms': 1000}
2021-01-07 18:10:04,367 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'abs_position': 3000}
2021-01-07 18:10:04,367 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'delay_ms': 1000}
2021-01-07 18:10:04,367 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'minimal_reset': False}
2021-01-07 18:10:04,367 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': 'S12S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:04,367 DEBUG sendRcv: sending cmd_string: S12S10OM1000A3000M1000R
2021-01-07 18:10:04,523 DEBUG sendRcv: received response: (None, 0)
2021-01-07 18:10:04,523 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'on_execute': True, 'minimal_reset': False}
2021-01-07 18:10:04,523 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:04,523 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:04,523 DEBUG sendRcv: sending cmd_string: ?6
2021-01-07 18:10:04,662 DEBUG sendRcv: received response: (b'0', 1)
2021-01-07 18:10:04,662 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:04,662 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:04,662 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:04,802 DEBUG sendRcv: received response: (b'0', 1)
2021-01-07 18:10:04,802 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:04,802 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'timeout': 6.201005014729091, 'polling_interval': 0.3, 'delay': None}
2021-01-07 18:10:14,815 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:14,815 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:14,815 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:14,954 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:29,959 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:29,959 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:29,959 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:30,099 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:30,099 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'speed_code': 5}
2021-01-07 18:10:30,099 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'I', 'volume_ul': 300.0}
2021-01-07 18:10:30,099 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'I'}
2021-01-07 18:10:30,099 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'rel_position': -1800}
2021-01-07 18:10:30,099 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'delay_ms': 1000}
2021-01-07 18:10:30,099 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'O'}
2021-01-07 18:10:30,099 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'minimal_reset': False}
2021-01-07 18:10:30,099 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': 'S5ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:30,099 DEBUG sendRcv: sending cmd_string: S5ID1800M1000OR
2021-01-07 18:10:30,252 DEBUG sendRcv: received response: (None, 0)
2021-01-07 18:10:30,252 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'on_execute': True, 'minimal_reset': False}
2021-01-07 18:10:30,252 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:30,252 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:30,252 DEBUG sendRcv: sending cmd_string: ?6
2021-01-07 18:10:30,390 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:30,390 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:30,390 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:30,390 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:30,528 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:30,528 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:30,528 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'timeout': 1.1425758211866106, 'polling_interval': 0.3, 'delay': None}
2021-01-07 18:10:45,538 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:45,538 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:45,538 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:45,679 DEBUG sendRcv: received response: (b'1200', 1)
2021-01-07 18:10:45,679 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'speed_code': 10}
2021-01-07 18:10:45,679 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'O'}
2021-01-07 18:10:45,679 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'delay_ms': 1000}
2021-01-07 18:10:45,679 DEBUG -> movePlungerAbs: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'abs_position': 3000}
2021-01-07 18:10:45,679 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'delay_ms': 1000}
2021-01-07 18:10:45,680 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'minimal_reset': False}
2021-01-07 18:10:45,680 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': 'S10OM1000A3000M1000', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:45,680 DEBUG sendRcv: sending cmd_string: S10OM1000A3000M1000R
2021-01-07 18:10:45,834 DEBUG sendRcv: received response: (None, 0)
2021-01-07 18:10:45,834 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'on_execute': True, 'minimal_reset': False}
2021-01-07 18:10:45,834 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:45,834 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:45,834 DEBUG sendRcv: sending cmd_string: ?6
2021-01-07 18:10:45,973 DEBUG sendRcv: received response: (b'1200', 1)
2021-01-07 18:10:45,973 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:45,973 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:45,973 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:46,114 DEBUG sendRcv: received response: (b'1200', 1)
2021-01-07 18:10:46,114 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:46,114 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'timeout': 0, 'polling_interval': 0.3, 'delay': None}
2021-01-07 18:10:56,124 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:56,124 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:56,124 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:56,264 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:56,264 DEBUG -> setSpeed: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'speed_code': 5}
2021-01-07 18:10:56,264 DEBUG -> dispense: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'I', 'volume_ul': 300.0}
2021-01-07 18:10:56,264 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'I'}
2021-01-07 18:10:56,264 DEBUG -> movePlungerRel: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'rel_position': -1800}
2021-01-07 18:10:56,264 DEBUG -> delayExec: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'delay_ms': 1000}
2021-01-07 18:10:56,264 DEBUG -> changePort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'to_port': 'O'}
2021-01-07 18:10:56,264 DEBUG -> executeChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'minimal_reset': False}
2021-01-07 18:10:56,264 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': 'S5ID1800M1000O', 'execute': True, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:56,264 DEBUG sendRcv: sending cmd_string: S5ID1800M1000OR
2021-01-07 18:10:56,421 DEBUG sendRcv: received response: (None, 0)
2021-01-07 18:10:56,421 DEBUG -> resetChain: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'on_execute': True, 'minimal_reset': False}
2021-01-07 18:10:56,421 DEBUG -> getCurPort: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:56,421 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?6', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:56,421 DEBUG sendRcv: sending cmd_string: ?6
2021-01-07 18:10:56,562 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:56,562 DEBUG -> getPlungerPos: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:56,562 DEBUG -> sendRcv: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'cmd_string': '?', 'execute': False, '__class__': <class 'tecancavro.models.XP3000'>}
2021-01-07 18:10:56,562 DEBUG sendRcv: sending cmd_string: ?
2021-01-07 18:10:56,702 DEBUG sendRcv: received response: (b'3000', 1)
2021-01-07 18:10:56,702 DEBUG -> updateSimState: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>}
2021-01-07 18:10:56,702 DEBUG -> waitReady: {'self': <tecancavro.models.XP3000 object at 0x0000026683B82100>, 'timeout': 1.1349953024640764, 'polling_interval': 0.3, 'delay': None}
